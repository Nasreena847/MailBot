<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>YelpCamp</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css"
      integrity="sha384-r4NyP46KrjDleawBgD5tp8Y7UzmLA05oM1iAEQ17CSuDqnUK2+k9luXQOfXJCJ4I" crossorigin="anonymous">
      <link rel="stylesheet" href="/stylesheet/dashboard.css">
      <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
      <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
</head>

<body>
 
  <div class="dashboard">
    <div class="sidebar navbar navbar-expand-lg">
      <div>
    <form action="/start-new-conversation" method="POST" id="startForm">
     
      <button type="submit" id="userInput" class="new">Start Conversation</button>
      <a href="/list-schedule-email">list Scheduled emails</a>
  </form>
    <div>
    <div class="conversation-details">
      <% if (typeof previous_conversation !== 'undefined') { %>
        <% if (previous_conversation && previous_conversation.length > 0) { %>
          <% previous_conversation.reverse().forEach(conversation => { %>
            <h2>
              <a href="/dashboard/<%= conversation.conversationId %>"><%= conversation.name %></a>
            </h2>
            <!-- Show history if the conversation ID matches the selected one -->
            
          <% }) %>
        <% } %>
        
        <% } %>
    </div>
    </div>
  </div>
</div>
  <div class="convo">
    <% layout('layout/boilerplate') %>
  <div class="convo-history">
    <% if (typeof previous_conversation !== 'undefined') { %>
      <% if (previous_conversation ) { %>
        <% previous_conversation.forEach(conversation => { %>
          <% console.log('previous_conversation', previous_conversation) %>
          <% if (typeof selectedConversation !== 'undefined' && selectedConversation && selectedConversation.conversationId === conversation.conversationId) { %>
            <div class="conversation-history">
              <% if (conversation.history && conversation.history.length > 0) { %>
                <% conversation.history.forEach(message => { %>
                  <div class="message">
                    <div class="userinput">
                    <p class="userinput-p"><strong>You:</strong> <%= message.searchTerm %></p>
                    </div>
                    <p><strong>AI:</strong> <%= message.searchContent %></p>
                    <a href="http://localhost:3000/send-email?searchTerm=<%= encodeURIComponent(message.searchTerm) %>&searchContent=<%= encodeURIComponent(message.searchContent) %>">
                      <span class="material-symbols-outlined">
                        edit
                      </span>
                    </a>
                  </div>
                <% }) %>
              <% } else { %>
                <p>No messages in this conversation</p>
              <% } %>
            </div>
          <% } %>
        <% }) %>
      <% } %>
      
      <% } %>
  </div>


  <div class="history" id="history"></div>
    <div class="advice-section" id="advice-container">
      <!-- Advice will be displayed here -->
    </div>
   
   </div>
     

  </div>

  <form id="search-form">
    <div class="send">
    <textarea name="input" id="Input" placeholder="Text" class="input"></textarea>
    <button type="submit" class="submit"><span class="material-symbols-outlined">
      send
      </span></button>
    </div>
</form>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('search-form');
    const adviceContainer = document.getElementById('advice-container');
    const history = document.getElementById('history');
    if (form) {
      console.log('clicked')
      form.addEventListener('submit', async (event) => {
        event.preventDefault();
        let data = {};

        const inputField = document.getElementById('Input');
        console.log(inputField)
        const inputValue = inputField.value;
    
     
        const formData = new URLSearchParams(new FormData(form)).toString();
        try {
       
          const response = await fetch('/search', {
                    method: 'POST',
                    headers: {
                       'Content-Type': 'application/x-www-form-urlencoded'  // Set content type
                    },
                    body: formData,// Send plain text
                });
              
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          console.log(response)
          const data = await response.json();
          adviceContainer.innerHTML = `<div>${data.advice || 'No advice available'}</div>`;
          history.innerHTML = '';
          location.reload()
data.history.forEach(entry => {
    // Create a new div for each history entry
    const historyEntryDiv = document.createElement('div');
    historyEntryDiv.innerHTML = `
        <p><strong>Search Term:</strong> ${entry.searchTerm}</p>
        <p><strong>Response:</strong> ${entry.searchContent}</p>
        <p><em>Timestamp:</em> ${new Date(entry.timestamp).toLocaleString()}</p>
        <hr>
    `;
    console.log(historyEntryDiv)
    // Append the new div to the history container
    history.appendChild(historyEntryDiv);
});

        
        } catch (error) {
          console.error('Error:', error);
        }
      });
    } else {
      console.error('Form not found');
    }
  });

  function handleEditClick(event) {
    const target = event.target;
    if (target.classList.contains('material-symbols-outlined')) {
      const searchTerm = target.getAttribute('data-search-term');
      const searchContent = target.getAttribute('data-search-content');
      
      // Set the form body with the selected content
    
    }
  }

  // Attach the event listener
  document.addEventListener('click', handleEditClick);
</script>

</body>
</html>