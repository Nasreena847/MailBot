const T = {
  allRenderFn: !1,
  cmpDidLoad: !0,
  cmpDidUnload: !1,
  cmpDidUpdate: !0,
  cmpDidRender: !0,
  cmpWillLoad: !0,
  cmpWillUpdate: !0,
  cmpWillRender: !0,
  connectedCallback: !0,
  disconnectedCallback: !0,
  element: !0,
  event: !0,
  hasRenderFn: !0,
  lifecycle: !0,
  hostListener: !0,
  hostListenerTargetWindow: !0,
  hostListenerTargetDocument: !0,
  hostListenerTargetBody: !0,
  hostListenerTargetParent: !1,
  hostListenerTarget: !0,
  member: !0,
  method: !0,
  mode: !0,
  observeAttribute: !0,
  prop: !0,
  propMutable: !0,
  reflect: !0,
  scoped: !0,
  shadowDom: !0,
  slot: !0,
  cssAnnotations: !0,
  state: !0,
  style: !0,
  formAssociated: !1,
  svg: !0,
  updatable: !0,
  vdomAttribute: !0,
  vdomXlink: !0,
  vdomClass: !0,
  vdomFunctional: !0,
  vdomKey: !0,
  vdomListener: !0,
  vdomRef: !0,
  vdomPropOrAttr: !0,
  vdomRender: !0,
  vdomStyle: !0,
  vdomText: !0,
  watchCallback: !0,
  taskQueue: !0,
  hotModuleReplacement: !1,
  isDebug: !1,
  isDev: !1,
  isTesting: !1,
  hydrateServerSide: !1,
  hydrateClientSide: !1,
  lifecycleDOMEvents: !1,
  lazyLoad: !1,
  profile: !1,
  slotRelocation: !0,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  appendChildSlotFix: !1,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  cloneNodeFix: !1,
  hydratedAttribute: !1,
  hydratedClass: !0,
  scriptDataOpts: !1,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  scopedSlotTextContentFix: !1,
  // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
  shadowDomShim: !1,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  slotChildNodesFix: !1,
  invisiblePrehydration: !0,
  propBoolean: !0,
  propNumber: !0,
  propString: !0,
  constructableCSS: !0,
  cmpShouldUpdate: !0,
  devTools: !1,
  shadowDelegatesFocus: !0,
  initializeNextTick: !1,
  asyncLoading: !1,
  asyncQueue: !1,
  transformTagName: !1,
  attachStyles: !0,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  experimentalSlotFixes: !1
};
let L, D, A, le = !1, F = !1, W = !1, v = !1, I = null, H = !1;
const x = (e, t = "") => () => {
}, ve = "slot-fb{display:contents}slot-fb[hidden]{display:none}", Q = "http://www.w3.org/1999/xlink", X = {}, Se = "http://www.w3.org/2000/svg", ke = "http://www.w3.org/1999/xhtml", me = (e) => e != null, z = (e) => (e = typeof e, e === "object" || e === "function");
function Te(e) {
  var t, n, s;
  return (s = (n = (t = e.head) === null || t === void 0 ? void 0 : t.querySelector('meta[name="csp-nonce"]')) === null || n === void 0 ? void 0 : n.getAttribute("content")) !== null && s !== void 0 ? s : void 0;
}
const j = (e, t, ...n) => {
  let s = null, l = null, r = null, o = !1, c = !1;
  const i = [], u = ($) => {
    for (let d = 0; d < $.length; d++)
      s = $[d], Array.isArray(s) ? u(s) : s != null && typeof s != "boolean" && ((o = typeof e != "function" && !z(s)) && (s = String(s)), o && c ? i[i.length - 1].$text$ += s : i.push(o ? w(null, s) : s), c = o);
  };
  if (u(n), t) {
    t.key && (l = t.key), t.name && (r = t.name);
    {
      const $ = t.className || t.class;
      $ && (t.class = typeof $ != "object" ? $ : Object.keys($).filter((d) => $[d]).join(" "));
    }
  }
  if (typeof e == "function")
    return e(t === null ? {} : t, i, Le);
  const f = w(e, null);
  return f.$attrs$ = t, i.length > 0 && (f.$children$ = i), f.$key$ = l, f.$name$ = r, f;
}, w = (e, t) => {
  const n = {
    $flags$: 0,
    $tag$: e,
    $text$: t,
    $elm$: null,
    $children$: null
  };
  return n.$attrs$ = null, n.$key$ = null, n.$name$ = null, n;
}, be = {}, xe = (e) => e && e.$tag$ === be, Le = {
  forEach: (e, t) => e.map(G).forEach(t),
  map: (e, t) => e.map(G).map(t).map(Ee)
}, G = (e) => ({
  vattrs: e.$attrs$,
  vchildren: e.$children$,
  vkey: e.$key$,
  vname: e.$name$,
  vtag: e.$tag$,
  vtext: e.$text$
}), Ee = (e) => {
  if (typeof e.vtag == "function") {
    const n = Object.assign({}, e.vattrs);
    return e.vkey && (n.key = e.vkey), e.vname && (n.name = e.vname), j(e.vtag, n, ...e.vchildren || []);
  }
  const t = w(e.vtag, e.vtext);
  return t.$attrs$ = e.vattrs, t.$children$ = e.vchildren, t.$key$ = e.vkey, t.$name$ = e.vname, t;
}, _e = (e) => et.map((t) => t(e)).find((t) => !!t), Ae = (e, t) => e != null && !z(e) ? t & 4 ? e === "false" ? !1 : e === "" || !!e : t & 2 ? parseFloat(e) : t & 1 ? String(e) : e : e, K = /* @__PURE__ */ new WeakMap(), Re = (e, t, n) => {
  let s = P.get(e);
  lt && n ? (s = s || new CSSStyleSheet(), typeof s == "string" ? s = t : s.replaceSync(t)) : s = t, P.set(e, s);
}, Ce = (e, t, n) => {
  var s;
  const l = oe(t, n), r = P.get(l);
  if (e = e.nodeType === 11 ? e : S, r)
    if (typeof r == "string") {
      e = e.head || e;
      let o = K.get(e), c;
      if (o || K.set(e, o = /* @__PURE__ */ new Set()), !o.has(l)) {
        {
          c = S.createElement("style"), c.innerHTML = r;
          const i = (s = p.$nonce$) !== null && s !== void 0 ? s : Te(S);
          i != null && c.setAttribute("nonce", i), e.insertBefore(c, e.querySelector("link"));
        }
        t.$flags$ & 4 && (c.innerHTML += ve), o && o.add(l);
      }
    } else e.adoptedStyleSheets.includes(r) || (e.adoptedStyleSheets = [...e.adoptedStyleSheets, r]);
  return l;
}, Oe = (e) => {
  const t = e.$cmpMeta$, n = e.$hostElement$, s = t.$flags$, l = x("attachStyles", t.$tagName$), r = Ce(n.shadowRoot ? n.shadowRoot : n.getRootNode(), t, e.$modeName$);
  s & 10 && (n["s-sc"] = r, n.classList.add(r + "-h"), s & 2 && n.classList.add(r + "-s")), l();
}, oe = (e, t) => "sc-" + (t && e.$flags$ & 32 ? e.$tagName$ + "-" + t : e.$tagName$), J = (e, t, n, s, l, r) => {
  if (n !== s) {
    let o = te(e, t), c = t.toLowerCase();
    if (t === "class") {
      const i = e.classList, u = Y(n), f = Y(s);
      i.remove(...u.filter(($) => $ && !f.includes($))), i.add(...f.filter(($) => $ && !u.includes($)));
    } else if (t === "style") {
      for (const i in n)
        (!s || s[i] == null) && (i.includes("-") ? e.style.removeProperty(i) : e.style[i] = "");
      for (const i in s)
        (!n || s[i] !== n[i]) && (i.includes("-") ? e.style.setProperty(i, s[i]) : e.style[i] = s[i]);
    } else if (t !== "key")
      if (t === "ref")
        s && s(e);
      else if (!e.__lookupSetter__(t) && t[0] === "o" && t[1] === "n") {
        if (t[2] === "-" ? t = t.slice(3) : te(B, c) ? t = c.slice(2) : t = c[2] + t.slice(3), n || s) {
          const i = t.endsWith(ie);
          t = t.replace(Fe, ""), n && p.rel(e, t, n, i), s && p.ael(e, t, s, i);
        }
      } else {
        const i = z(s);
        if ((o || i && s !== null) && !l)
          try {
            if (e.tagName.includes("-"))
              e[t] = s;
            else {
              const f = s ?? "";
              t === "list" ? o = !1 : (n == null || e[t] != f) && (e[t] = f);
            }
          } catch {
          }
        let u = !1;
        c !== (c = c.replace(/^xlink\:?/, "")) && (t = c, u = !0), s == null || s === !1 ? (s !== !1 || e.getAttribute(t) === "") && (u ? e.removeAttributeNS(Q, t) : e.removeAttribute(t)) : (!o || r & 4 || l) && !i && (s = s === !0 ? "" : s, u ? e.setAttributeNS(Q, t, s) : e.setAttribute(t, s));
      }
  }
}, Ue = /\s/, Y = (e) => e ? e.split(Ue) : [], ie = "Capture", Fe = new RegExp(ie + "$"), re = (e, t, n, s) => {
  const l = t.$elm$.nodeType === 11 && t.$elm$.host ? t.$elm$.host : t.$elm$, r = e && e.$attrs$ || X, o = t.$attrs$ || X;
  for (s in r)
    s in o || J(l, s, r[s], void 0, n, t.$flags$);
  for (s in o)
    J(l, s, r[s], o[s], n, t.$flags$);
}, M = (e, t, n, s) => {
  const l = t.$children$[n];
  let r = 0, o, c, i;
  if (le || (W = !0, l.$tag$ === "slot" && (L && s.classList.add(L + "-s"), l.$flags$ |= l.$children$ ? (
    // slot element has fallback content
    2
  ) : (
    // slot element does not have fallback content
    1
  ))), l.$text$ !== null)
    o = l.$elm$ = S.createTextNode(l.$text$);
  else if (l.$flags$ & 1)
    o = l.$elm$ = S.createTextNode("");
  else {
    if (v || (v = l.$tag$ === "svg"), o = l.$elm$ = S.createElementNS(v ? Se : ke, l.$flags$ & 2 ? "slot-fb" : l.$tag$), v && l.$tag$ === "foreignObject" && (v = !1), re(null, l, v), me(L) && o["s-si"] !== L && o.classList.add(o["s-si"] = L), l.$children$)
      for (r = 0; r < l.$children$.length; ++r)
        c = M(e, l, r, o), c && o.appendChild(c);
    l.$tag$ === "svg" ? v = !1 : o.tagName === "foreignObject" && (v = !0);
  }
  return o["s-hn"] = A, l.$flags$ & 3 && (o["s-sr"] = !0, o["s-cr"] = D, o["s-sn"] = l.$name$ || "", i = e && e.$children$ && e.$children$[n], i && i.$tag$ === l.$tag$ && e.$elm$ && R(e.$elm$, !1)), o;
}, R = (e, t) => {
  p.$flags$ |= 1;
  const n = e.childNodes;
  for (let s = n.length - 1; s >= 0; s--) {
    const l = n[s];
    l["s-hn"] !== A && l["s-ol"] && (ae(l).insertBefore(l, q(l)), l["s-ol"].remove(), l["s-ol"] = void 0, l["s-sh"] = void 0, W = !0), t && R(l, t);
  }
  p.$flags$ &= -2;
}, ce = (e, t, n, s, l, r) => {
  let o = e["s-cr"] && e["s-cr"].parentNode || e, c;
  for (o.shadowRoot && o.tagName === A && (o = o.shadowRoot); l <= r; ++l)
    s[l] && (c = M(null, n, l, e), c && (s[l].$elm$ = c, o.insertBefore(c, q(t))));
}, $e = (e, t, n) => {
  for (let s = t; s <= n; ++s) {
    const l = e[s];
    if (l) {
      const r = l.$elm$;
      ue(l), r && (F = !0, r["s-ol"] ? r["s-ol"].remove() : R(r, !0), r.remove());
    }
  }
}, je = (e, t, n, s, l = !1) => {
  let r = 0, o = 0, c = 0, i = 0, u = t.length - 1, f = t[0], $ = t[u], d = s.length - 1, a = s[0], h = s[d], y, g;
  for (; r <= u && o <= d; )
    if (f == null)
      f = t[++r];
    else if ($ == null)
      $ = t[--u];
    else if (a == null)
      a = s[++o];
    else if (h == null)
      h = s[--d];
    else if (U(f, a, l))
      E(f, a, l), f = t[++r], a = s[++o];
    else if (U($, h, l))
      E($, h, l), $ = t[--u], h = s[--d];
    else if (U(f, h, l))
      (f.$tag$ === "slot" || h.$tag$ === "slot") && R(f.$elm$.parentNode, !1), E(f, h, l), e.insertBefore(f.$elm$, $.$elm$.nextSibling), f = t[++r], h = s[--d];
    else if (U($, a, l))
      (f.$tag$ === "slot" || h.$tag$ === "slot") && R($.$elm$.parentNode, !1), E($, a, l), e.insertBefore($.$elm$, f.$elm$), $ = t[--u], a = s[++o];
    else {
      for (c = -1, i = r; i <= u; ++i)
        if (t[i] && t[i].$key$ !== null && t[i].$key$ === a.$key$) {
          c = i;
          break;
        }
      c >= 0 ? (g = t[c], g.$tag$ !== a.$tag$ ? y = M(t && t[o], n, c, e) : (E(g, a, l), t[c] = void 0, y = g.$elm$), a = s[++o]) : (y = M(t && t[o], n, o, e), a = s[++o]), y && ae(f.$elm$).insertBefore(y, q(f.$elm$));
    }
  r > u ? ce(e, s[d + 1] == null ? null : s[d + 1].$elm$, n, s, o, d) : o > d && $e(t, r, u);
}, U = (e, t, n = !1) => e.$tag$ === t.$tag$ ? e.$tag$ === "slot" ? e.$name$ === t.$name$ : n ? !0 : e.$key$ === t.$key$ : !1, q = (e) => e && e["s-ol"] || e, ae = (e) => (e["s-ol"] ? e["s-ol"] : e).parentNode, E = (e, t, n = !1) => {
  const s = t.$elm$ = e.$elm$, l = e.$children$, r = t.$children$, o = t.$tag$, c = t.$text$;
  let i;
  c === null ? (v = o === "svg" ? !0 : o === "foreignObject" ? !1 : v, o === "slot" || re(e, t, v), l !== null && r !== null ? je(s, l, t, r, n) : r !== null ? (e.$text$ !== null && (s.textContent = ""), ce(s, null, t, r, 0, r.length - 1)) : l !== null && $e(l, 0, l.length - 1), v && o === "svg" && (v = !1)) : (i = s["s-cr"]) ? i.parentNode.textContent = c : e.$text$ !== c && (s.data = c);
}, fe = (e) => {
  const t = e.childNodes;
  for (const n of t)
    if (n.nodeType === 1) {
      if (n["s-sr"]) {
        const s = n["s-sn"];
        n.hidden = !1;
        for (const l of t)
          if (l !== n) {
            if (l["s-hn"] !== n["s-hn"] || s !== "") {
              if (l.nodeType === 1 && (s === l.getAttribute("slot") || s === l["s-sn"])) {
                n.hidden = !0;
                break;
              }
            } else if (l.nodeType === 1 || l.nodeType === 3 && l.textContent.trim() !== "") {
              n.hidden = !0;
              break;
            }
          }
      }
      fe(n);
    }
}, k = [], de = (e) => {
  let t, n, s;
  for (const l of e.childNodes) {
    if (l["s-sr"] && (t = l["s-cr"]) && t.parentNode) {
      n = t.parentNode.childNodes;
      const r = l["s-sn"];
      for (s = n.length - 1; s >= 0; s--)
        if (t = n[s], !t["s-cn"] && !t["s-nr"] && t["s-hn"] !== l["s-hn"] && !T.experimentalSlotFixes)
          if (Z(t, r)) {
            let o = k.find((c) => c.$nodeToRelocate$ === t);
            F = !0, t["s-sn"] = t["s-sn"] || r, o ? (o.$nodeToRelocate$["s-sh"] = l["s-hn"], o.$slotRefNode$ = l) : (t["s-sh"] = l["s-hn"], k.push({
              $slotRefNode$: l,
              $nodeToRelocate$: t
            })), t["s-sr"] && k.map((c) => {
              Z(c.$nodeToRelocate$, t["s-sn"]) && (o = k.find((i) => i.$nodeToRelocate$ === t), o && !c.$slotRefNode$ && (c.$slotRefNode$ = o.$slotRefNode$));
            });
          } else k.some((o) => o.$nodeToRelocate$ === t) || k.push({
            $nodeToRelocate$: t
          });
    }
    l.nodeType === 1 && de(l);
  }
}, Z = (e, t) => e.nodeType === 1 ? e.getAttribute("slot") === null && t === "" || e.getAttribute("slot") === t : e["s-sn"] === t ? !0 : t === "", ue = (e) => {
  e.$attrs$ && e.$attrs$.ref && e.$attrs$.ref(null), e.$children$ && e.$children$.map(ue);
}, we = (e, t, n = !1) => {
  var s, l, r, o, c;
  const i = e.$hostElement$, u = e.$cmpMeta$, f = e.$vnode$ || w(null, null), $ = xe(t) ? t : j(null, null, t);
  if (A = i.tagName, u.$attrsToReflect$ && ($.$attrs$ = $.$attrs$ || {}, u.$attrsToReflect$.map(([d, a]) => $.$attrs$[a] = i[d])), n && $.$attrs$)
    for (const d of Object.keys($.$attrs$))
      i.hasAttribute(d) && !["key", "ref", "style", "class"].includes(d) && ($.$attrs$[d] = i[d]);
  $.$tag$ = null, $.$flags$ |= 4, e.$vnode$ = $, $.$elm$ = f.$elm$ = i.shadowRoot || i, L = i["s-sc"], D = i["s-cr"], le = (u.$flags$ & 1) !== 0, F = !1, E(f, $, n);
  {
    if (p.$flags$ |= 1, W) {
      de($.$elm$);
      for (const d of k) {
        const a = d.$nodeToRelocate$;
        if (!a["s-ol"]) {
          const h = S.createTextNode("");
          h["s-nr"] = a, a.parentNode.insertBefore(a["s-ol"] = h, a);
        }
      }
      for (const d of k) {
        const a = d.$nodeToRelocate$, h = d.$slotRefNode$;
        if (h) {
          const y = h.parentNode;
          let g = h.nextSibling;
          {
            let b = (s = a["s-ol"]) === null || s === void 0 ? void 0 : s.previousSibling;
            for (; b; ) {
              let m = (l = b["s-nr"]) !== null && l !== void 0 ? l : null;
              if (m && m["s-sn"] === a["s-sn"] && y === m.parentNode && (m = m.nextSibling, !m || !m["s-nr"])) {
                g = m;
                break;
              }
              b = b.previousSibling;
            }
          }
          (!g && y !== a.parentNode || a.nextSibling !== g) && a !== g && (!a["s-hn"] && a["s-ol"] && (a["s-hn"] = a["s-ol"].parentNode.nodeName), y.insertBefore(a, g), a.nodeType === 1 && (a.hidden = (r = a["s-ih"]) !== null && r !== void 0 ? r : !1));
        } else
          a.nodeType === 1 && (n && (a["s-ih"] = (o = a.hidden) !== null && o !== void 0 ? o : !1), a.hidden = !0);
      }
    }
    F && fe($.$elm$), p.$flags$ &= -2, k.length = 0;
  }
  if (T.experimentalScopedSlotChanges && u.$flags$ & 2)
    for (const d of $.$elm$.childNodes)
      d["s-hn"] !== A && !d["s-sh"] && (n && d["s-ih"] == null && (d["s-ih"] = (c = d.hidden) !== null && c !== void 0 ? c : !1), d.hidden = !0);
  D = void 0;
}, Me = (e, t) => {
}, he = (e, t) => (e.$flags$ |= 16, Me(e, e.$ancestorComponent$), rt(() => Pe(e, t))), Pe = (e, t) => {
  const n = e.$hostElement$, s = x("scheduleUpdate", e.$cmpMeta$.$tagName$), l = n;
  let r;
  return t ? r = _(l, "componentWillLoad") : r = _(l, "componentWillUpdate"), r = V(r, () => _(l, "componentWillRender")), s(), V(r, () => De(e, l, t));
}, V = (e, t) => Be(e) ? e.then(t) : t(), Be = (e) => e instanceof Promise || e && e.then && typeof e.then == "function", De = async (e, t, n) => {
  const s = e.$hostElement$, l = x("update", e.$cmpMeta$.$tagName$);
  s["s-rc"], n && Oe(e);
  const r = x("render", e.$cmpMeta$.$tagName$);
  He(e, t, s, n), r(), l(), Ne(e);
}, He = (e, t, n, s) => {
  try {
    I = t, t = t.render && t.render(), e.$flags$ &= -17, e.$flags$ |= 2, (T.hasRenderFn || T.reflect) && (T.vdomRender || T.reflect) && (T.hydrateServerSide || we(e, t, s));
  } catch (i) {
    O(i, e.$hostElement$);
  }
  return I = null, null;
}, Ne = (e) => {
  const t = e.$cmpMeta$.$tagName$, n = e.$hostElement$, s = x("postUpdate", t), l = n;
  e.$ancestorComponent$, _(l, "componentDidRender"), e.$flags$ & 64 ? (_(l, "componentDidUpdate"), s()) : (e.$flags$ |= 64, _(l, "componentDidLoad"), s());
}, _ = (e, t, n) => {
  if (e && e[t])
    try {
      return e[t](n);
    } catch (s) {
      O(s);
    }
}, We = (e, t) => C(e).$instanceValues$.get(t), ze = (e, t, n, s) => {
  const l = C(e), r = e, o = l.$instanceValues$.get(t), c = l.$flags$, i = r;
  n = Ae(n, s.$members$[t][0]);
  const u = Number.isNaN(o) && Number.isNaN(n);
  if (n !== o && !u) {
    l.$instanceValues$.set(t, n);
    {
      if (s.$watchers$ && c & 128) {
        const $ = s.$watchers$[t];
        $ && $.map((d) => {
          try {
            i[d](n, o, t);
          } catch (a) {
            O(a, r);
          }
        });
      }
      if ((c & 18) === 2) {
        if (i.componentShouldUpdate && i.componentShouldUpdate(n, o, t) === !1)
          return;
        he(l, !1);
      }
    }
  }
}, qe = (e, t, n) => {
  var s;
  const l = e.prototype;
  if (t.$members$) {
    e.watchers && (t.$watchers$ = e.watchers);
    const r = Object.entries(t.$members$);
    r.map(([o, [c]]) => {
      (c & 31 || c & 32) && Object.defineProperty(l, o, {
        get() {
          return We(this, o);
        },
        set(i) {
          ze(this, o, i, t);
        },
        configurable: !0,
        enumerable: !0
      });
    });
    {
      const o = /* @__PURE__ */ new Map();
      l.attributeChangedCallback = function(c, i, u) {
        p.jmp(() => {
          var f;
          const $ = o.get(c);
          if (this.hasOwnProperty($))
            u = this[$], delete this[$];
          else {
            if (l.hasOwnProperty($) && typeof this[$] == "number" && this[$] == u)
              return;
            if ($ == null) {
              const d = C(this), a = d == null ? void 0 : d.$flags$;
              if (a && !(a & 8) && a & 128 && u !== i) {
                const y = this, g = (f = t.$watchers$) === null || f === void 0 ? void 0 : f[c];
                g == null || g.forEach((b) => {
                  y[b] != null && y[b].call(y, u, i, c);
                });
              }
              return;
            }
          }
          this[$] = u === null && typeof this[$] == "boolean" ? !1 : u;
        });
      }, e.observedAttributes = Array.from(/* @__PURE__ */ new Set([
        ...Object.keys((s = t.$watchers$) !== null && s !== void 0 ? s : {}),
        ...r.filter(
          ([c, i]) => i[0] & 15
          /* MEMBER_FLAGS.HasAttribute */
        ).map(([c, i]) => {
          var u;
          const f = i[1] || c;
          return o.set(f, c), i[0] & 512 && ((u = t.$attrsToReflect$) === null || u === void 0 || u.push([c, f])), f;
        })
      ]));
    }
  }
  return e;
}, Ie = async (e, t, n, s) => {
  let l;
  if (!(t.$flags$ & 32) && (t.$flags$ |= 32, l = e.constructor, customElements.whenDefined(n.$tagName$).then(() => t.$flags$ |= 128), l.style)) {
    let o = l.style;
    typeof o != "string" && (o = o[t.$modeName$ = _e(e)]);
    const c = oe(n, t.$modeName$);
    if (!P.has(c)) {
      const i = x("registerStyles", n.$tagName$);
      Re(c, o, !!(n.$flags$ & 1)), i();
    }
  }
  t.$ancestorComponent$, he(t, !0);
}, ee = (e) => {
}, Qe = (e) => {
  if (!(p.$flags$ & 1)) {
    const t = C(e), n = t.$cmpMeta$, s = x("connectedCallback", n.$tagName$);
    t.$flags$ & 1 ? (pe(e, t, n.$listeners$), t != null && t.$lazyInstance$ ? ee(t.$lazyInstance$) : t != null && t.$onReadyPromise$ && t.$onReadyPromise$.then(() => ee(t.$lazyInstance$))) : (t.$flags$ |= 1, // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
    n.$flags$ & 12 && Xe(e), n.$members$ && Object.entries(n.$members$).map(([l, [r]]) => {
      if (r & 31 && e.hasOwnProperty(l)) {
        const o = e[l];
        delete e[l], e[l] = o;
      }
    }), Ie(e, t, n)), s();
  }
}, Xe = (e) => {
  const t = e["s-cr"] = S.createComment("");
  t["s-cn"] = !0, e.insertBefore(t, e.firstChild);
}, Ge = async (e) => {
  if (!(p.$flags$ & 1)) {
    const t = C(e);
    t.$rmListeners$ && (t.$rmListeners$.map((n) => n()), t.$rmListeners$ = void 0);
  }
}, Ke = (e, t) => {
  const n = {
    $flags$: t[0],
    $tagName$: t[1]
  };
  n.$members$ = t[2], n.$listeners$ = t[3], n.$watchers$ = e.$watchers$, n.$attrsToReflect$ = [];
  const s = e.prototype.connectedCallback, l = e.prototype.disconnectedCallback;
  return Object.assign(e.prototype, {
    __registerHost() {
      Ve(this, n);
    },
    connectedCallback() {
      Qe(this), s && s.call(this);
    },
    disconnectedCallback() {
      Ge(this), l && l.call(this);
    },
    __attachShadow() {
      this.attachShadow({
        mode: "open",
        delegatesFocus: !!(n.$flags$ & 16)
      });
    }
  }), e.is = n.$tagName$, qe(e, n);
}, pe = (e, t, n, s) => {
  n && n.map(([l, r, o]) => {
    const c = Ye(e, l), i = Je(t, o), u = Ze(l);
    p.ael(c, r, i, u), (t.$rmListeners$ = t.$rmListeners$ || []).push(() => p.rel(c, r, i, u));
  });
}, Je = (e, t) => (n) => {
  try {
    T.lazyLoad || e.$hostElement$[t](n);
  } catch (s) {
    O(s);
  }
}, Ye = (e, t) => t & 4 ? S : t & 8 ? B : t & 16 ? S.body : e, Ze = (e) => st ? {
  passive: (e & 1) !== 0,
  capture: (e & 2) !== 0
} : (e & 2) !== 0, ge = /* @__PURE__ */ new WeakMap(), C = (e) => ge.get(e), Ve = (e, t) => {
  const n = {
    $flags$: 0,
    $hostElement$: e,
    $cmpMeta$: t,
    $instanceValues$: /* @__PURE__ */ new Map()
  };
  return pe(e, n, t.$listeners$), ge.set(e, n);
}, te = (e, t) => t in e, O = (e, t) => (0, console.error)(e, t), P = /* @__PURE__ */ new Map(), et = [], B = typeof window < "u" ? window : {}, S = B.document || { head: {} }, tt = B.HTMLElement || class {
}, p = {
  $flags$: 0,
  $resourcesUrl$: "",
  jmp: (e) => e(),
  raf: (e) => requestAnimationFrame(e),
  ael: (e, t, n, s) => e.addEventListener(t, n, s),
  rel: (e, t, n, s) => e.removeEventListener(t, n, s),
  ce: (e, t) => new CustomEvent(e, t)
}, st = /* @__PURE__ */ (() => {
  let e = !1;
  try {
    S.addEventListener("e", null, Object.defineProperty({}, "passive", {
      get() {
        e = !0;
      }
    }));
  } catch {
  }
  return e;
})(), nt = (e) => Promise.resolve(e), lt = /* @__PURE__ */ (() => {
  try {
    return new CSSStyleSheet(), typeof new CSSStyleSheet().replaceSync == "function";
  } catch {
  }
  return !1;
})(), se = [], ye = [], ot = (e, t) => (n) => {
  e.push(n), H || (H = !0, t && p.$flags$ & 4 ? it(N) : p.raf(N));
}, ne = (e) => {
  for (let t = 0; t < e.length; t++)
    try {
      e[t](performance.now());
    } catch (n) {
      O(n);
    }
  e.length = 0;
}, N = () => {
  ne(se), ne(ye), (H = se.length > 0) && p.raf(N);
}, it = (e) => nt().then(e), rt = /* @__PURE__ */ ot(ye, !0), ct = ".sc-underline-icon-h{display:flex}", $t = ct, at = Ke(class extends tt {
  constructor() {
    super(), this.__registerHost(), this.width = "15", this.height = "15";
  }
  render() {
    return j("svg", { key: "42ce18b2a4ceef02d49d6e981728a8743ee3f687", width: this.width, height: this.height, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, j("path", { key: "1f552e6150723ffc768fb78538bb6adaa01c5926", d: "M19 4V10C19 13.866 15.866 17 12 17C8.13401 17 5 13.866 5 10V4M8.5 4V10C8.5 13.2218 10.6766 15.9352 13.6395 16.7501M4 21H20M3 4L10.5 4M17 4L21 4", stroke: "currentColor", "stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round" }));
  }
  static get style() {
    return $t;
  }
}, [2, "underline-icon", {
  width: [1],
  height: [1]
}]);
function dt() {
  if (typeof customElements > "u")
    return;
  ["underline-icon"].forEach((t) => {
    switch (t) {
      case "underline-icon":
        customElements.get(t) || customElements.define(t, at);
        break;
    }
  });
}
export {
  at as U,
  dt as d
};
