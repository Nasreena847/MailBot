{"file":"nylas-confirmation-email2.js","mappings":"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","names":[],"sources":["src/components/scheduler-editor/nylas-confirmation-email/nylas-confirmation-email.scss?tag=nylas-confirmation-email&encapsulation=shadow","src/components/scheduler-editor/nylas-confirmation-email/nylas-confirmation-email.tsx"],"sourcesContent":["@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  @include default-css-variables;\n  width: inherit;\n}\n\n.nylas-confirmation-email {\n  width: inherit;\n  display: flex;\n  flex-direction: column;\n  margin: 1rem;\n  border-radius: var(--nylas-border-radius-2x);\n  border: 1px solid var(--nylas-base-200);\n  text-align: left;\n\n  .header {\n    padding: 1rem;\n    display: grid;\n    grid-template-columns: 1fr auto;\n    border-bottom: 1px solid var(--nylas-base-200);\n\n    h3 {\n      border-radius: var(--nylas-border-radius-2x);\n      margin: 0;\n      font-size: 1rem;\n      font-weight: 600;\n      line-height: 20px;\n      color: var(--nylas-base-900);\n      text-align: left;\n    }\n\n    p {\n      margin: 0.25rem 0 0 0;\n      font-size: 0.875rem;\n      font-weight: 400;\n      line-height: 20px;\n      color: var(--nylas-base-600);\n      text-align: left;\n    }\n\n    .confirmation-email-toggle {\n      display: flex;\n      gap: 24px;\n      align-items: center;\n\n      .chevron {\n        display: flex;\n        align-self: center;\n        cursor: pointer;\n\n        &:hover,\n        &:active {\n          color: var(--nylas-primary);\n        }\n\n        &.open {\n          transform: rotate(90deg);\n        }\n\n        &.closed {\n          transform: rotate(270deg);\n        }\n\n        &.disabled {\n          cursor: not-allowed;\n          color: var(--nylas-base-300);\n\n          &:hover {\n            color: var(--nylas-base-300);\n          }\n        }\n      }\n    }\n  }\n\n  .nylas-confirmation-email__body {\n    display: grid;\n    grid-template-columns: 1fr auto;\n    background-color: var(--nylas-base-25);\n    border-radius: var(--nylas-border-radius-2x);\n\n    @media #{$mobile} {\n      grid-template-columns: 1fr;\n    }\n\n    .nylas-confirmation-email__section {\n      padding: 1rem;\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n      color: var(--nylas-base-800);\n\n      @media #{$mobile} {\n        border: none;\n      }\n\n      .nylas-confirmation-email__row {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        align-items: center;\n        gap: 1rem;\n\n        &.full-width-col {\n          grid-template-columns: 1fr;\n          border-top: 1px solid var(--nylas-base-200);\n          padding-top: 1.25rem;\n          margin: 0.25rem 0;\n        }\n\n        label {\n          display: flex;\n          align-items: center;\n\n          span.required {\n            color: var(--nylas-error, #cc4841);\n          }\n\n          span.label-icon {\n            margin-left: 4px;\n\n            tooltip-component {\n              display: flex;\n            }\n          }\n        }\n\n        p {\n          margin: 0.25rem 0 0 0;\n          font-size: 1rem;\n          font-weight: 500;\n          line-height: 24px;\n          color: var(--nylas-base-900);\n        }\n\n        .company-logo-container {\n          display: flex;\n          gap: 32px;\n          width: 100%;\n\n          .input-container {\n            display: flex;\n            flex-direction: column;\n            flex: 1;\n          }\n\n          .company-logo {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            width: 200px;\n            height: 100px;\n            border: var(--nylas-base-200) solid 1px;\n            border-radius: var(--nylas-border-radius-2x);\n            overflow: hidden;\n            padding: 10px;\n          }\n\n          .company-logo img {\n            max-height: 100%;\n            max-width: 100%;\n            object-fit: contain;\n            object-position: center;\n          }\n        }\n\n        span.selected-value {\n          font-weight: 500;\n        }\n      }\n\n      .subsection {\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n\n        h3 {\n          margin: 0;\n          font-size: 1rem;\n          font-weight: 600;\n          line-height: 20px;\n          color: var(--nylas-base-900);\n          text-align: left;\n        }\n\n        .input-container {\n          display: flex;\n          flex-direction: column;\n          gap: 0.25rem;\n\n          textarea {\n            padding: 12px 16px;\n            border-width: 1;\n            resize: vertical;\n            border-radius: 8px;\n            font-family: var(--nylas-font-family);\n            font-size: 16px;\n            line-height: 24px;\n            border: 1px solid var(--nylas-base-200);\n          }\n        }\n      }\n    }\n\n    .nylas-confirmation-email__preview {\n      width: 208px;\n      background: var(--nylas-base-25);\n      border-bottom-right-radius: var(--nylas-border-radius-2x);\n\n      @media #{$mobile} {\n        width: inherit;\n        border-bottom-left-radius: var(--nylas-border-radius-2x);\n      }\n\n      h4 {\n        font-size: 14px;\n        line-height: 24px;\n        color: var(--nylas-base-600);\n        font-family: var(--nylas-font-family);\n        font-weight: 500;\n        text-align: center;\n        margin: 0.75rem 0;\n      }\n\n      .preview-container {\n        padding: 0 2rem 1rem;\n\n        .slot {\n          background-color: transparent;\n          border-top: 1px solid var(--nylas-base-300);\n\n          &.active {\n            background-color: var(--nylas-base-100);\n          }\n\n          &:last-of-type {\n            border-bottom: 1px solid var(--nylas-base-300);\n          }\n        }\n\n        .event-slot {\n          background-color: var(--nylas-base-600);\n          border-top: 1px solid var(--nylas-base-300);\n        }\n      }\n    }\n\n    span.error-message {\n      color: var(--nylas-error);\n    }\n\n    span.help-text {\n      margin: 0.25rem 0 0 0;\n      font-size: 0.875rem;\n      font-weight: 400;\n      line-height: 20px;\n      color: var(--nylas-base-600);\n      text-align: left;\n    }\n  }\n\n  .nylas-confirmation-email__summary {\n    padding: 0.75rem 1rem;\n    display: grid;\n    grid-template-columns: auto 1fr;\n    column-gap: 1rem;\n\n    p {\n      margin: 0;\n      display: flex;\n      align-items: center;\n      column-gap: 4px;\n      font-size: 0.875rem;\n      font-weight: 400;\n      line-height: 21px;\n      color: var(--nylas-base-600);\n      text-align: left;\n\n      span.summary-icon {\n        display: flex;\n        justify-content: center;\n        min-width: 20px;\n      }\n    }\n  }\n}\n\nsp-divider {\n  background-color: var(--nylas-base-200);\n  height: 1px;\n  margin: 0.25rem 0;\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug, sanitize } from '@/utils/utils';\nimport { AttachInternals, Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport { Configuration, EmailTemplate, Participant } from '@nylas/core';\n\n/**\n * The `nylas-confirmation-email` component is a UI component that allows users to set buffer time before and after an event.\n *\n * @part nce__tab-heading - The nylas-confirmation-email main tab heading\n * @part nce - The nylas-confirmation-email container\n * @part nce__header - The header of the event communication section\n * @part nce__body - The body of the event communication section\n * @part nce__confirmation-email-toggle--container - The confirmation email drawer toggle container\n * @part nce__input-image-url - The input image URL container\n * @part nce__summary - The confirmation card summary container\n */\n@Component({\n  tag: 'nylas-confirmation-email',\n  styleUrl: 'nylas-confirmation-email.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class NylasConfirmationEmail {\n  @Element() host!: HTMLNylasConfirmationEmailElement;\n  /**\n   * The selected config\n   */\n  @Prop() selectedConfiguration?: Configuration;\n  /**\n   * The confirmation email template data to display\n   */\n  @Prop() confirmationEmailTemplate: EmailTemplate = {} as EmailTemplate;\n  /**\n   * Is the confirmation email card open\n   */\n  @Prop() isOpen: boolean = false;\n  /**\n   * List of participants\n   */\n  @Prop() participants: Participant[] = [];\n  /**\n   * The name of the component\n   */\n  @Prop() name: string = 'confirmation-email-template';\n  /**\n   * The element internals.\n   */\n  @AttachInternals() internals!: ElementInternals;\n\n  /**\n   * The confirmation email template state.\n   */\n  @State() confirmationEmail!: EmailTemplate;\n\n  /**\n   * The internal state to store the isOpen state.\n   */\n  @State() isConfirmationEmailOpen: boolean = this.isOpen;\n\n  /**\n   * The internal state to store the participants.\n   */\n  @State() participantsState: Participant[] = this.participants;\n\n  /**\n   * This event is fired when the email reminders change.\n   */\n  @Event() valueChanged!: EventEmitter<{\n    value: string;\n    name: string;\n    valueChanged?: (event: CustomEvent<{ value: string; name: string }>) => void;\n  }>;\n\n  // Lifecycle methods\n  connectedCallback() {\n    debug('nylas-confirmation-email', 'connectedCallback');\n  }\n\n  disconnectedCallback() {\n    debug('nylas-confirmation-email', 'disconnectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('nylas-confirmation-email', 'componentWillLoad');\n    // See comment in the @Watch('name') decorator for more information.\n    this.host.setAttribute('name', this.name);\n  }\n\n  componentDidLoad() {\n    debug('nylas-confirmation-email', 'componentDidLoad');\n    if (this.selectedConfiguration) {\n      this.selectedConfigurationChangedHandler(this.selectedConfiguration);\n    } else {\n      this.confirmationEmail = this.confirmationEmailTemplate;\n      this.isConfirmationEmailOpen = this.isOpen;\n      this.participantsState = this.participants;\n    }\n  }\n\n  /**\n   * When a name prop is passed, stencil does not automatically set the name attribute on the host element.\n   * Since this component is form-associated, the name attribute is required for form submission.\n   * This is a workaround to ensure that the name attribute is set on the host element.\n   */\n  @Watch('name')\n  elementNameChangedHandler(newValue: string) {\n    debug('nylas-confirmation-email', 'elementNameChangedHandler', newValue);\n    this.host.setAttribute('name', newValue);\n  }\n\n  @Watch('selectedConfiguration')\n  selectedConfigurationChangedHandler(newValue: Configuration) {\n    debug('nylas-confirmation-email', 'selectedConfigurationChangedHandler', newValue);\n    this.confirmationEmail = newValue?.scheduler?.email_template || this.confirmationEmailTemplate;\n    this.isConfirmationEmailOpen = !newValue?.event_booking?.reminders?.overrides?.length;\n    this.participantsState = newValue?.participants || this.participants;\n  }\n\n  @Listen('nylasFormInputChanged')\n  async nylasFormInputChangeHandler(event: CustomEvent<{ value: string; name: string; type?: string }>) {\n    const { name, value } = event.detail;\n    const type = event.detail?.type;\n    if (name === 'confirmation-email-title') {\n      this.confirmationEmail = { ...this.confirmationEmail, booking_confirmed: { ...(this.confirmationEmail?.booking_confirmed || {}), title: value } };\n      this.internals.setFormValue(JSON.stringify(this.confirmationEmail), this.name);\n      this.valueChanged.emit({ value: JSON.stringify(this.confirmationEmail), name: this.name });\n    } else if (name === 'confirmation-email-body' && type === 'multi_line_text') {\n      this.handleEmailBodyChange(event);\n    }\n  }\n\n  @Listen('valueChanged')\n  valueChangedHandler(event: CustomEvent<{ value: string; name: string }>) {\n    debug('nylas-confirmation-email', 'valueChangedHandler', event.detail);\n    const { value, name } = event.detail;\n\n    if (name === 'confirmation-email-logo') {\n      this.confirmationEmail = { ...this.confirmationEmail, logo: value };\n      this.internals.setFormValue(JSON.stringify(this.confirmationEmail), this.name);\n      this.valueChanged.emit({ value: JSON.stringify(this.confirmationEmail), name: this.name });\n    }\n  }\n\n  updateConfirmationFormValue() {\n    debug('nylas-confirmation-email', 'updateConfirmationFormValue');\n    this.internals.setFormValue(JSON.stringify(this.confirmationEmail), this.name);\n    this.valueChanged.emit({ value: JSON.stringify(this.confirmationEmail), name: this.name });\n  }\n\n  toggleConfirmationEmail() {\n    this.isConfirmationEmailOpen = !this.isConfirmationEmailOpen;\n  }\n\n  handleEmailBodyChange(event) {\n    const value = sanitize(event.detail.value);\n    this.confirmationEmail = { ...this.confirmationEmail, booking_confirmed: { ...(this.confirmationEmail?.booking_confirmed || {}), body: value } };\n    this.internals.setFormValue(JSON.stringify(this.confirmationEmail), this.name);\n    this.valueChanged.emit({ value: JSON.stringify(this.confirmationEmail), name: this.name });\n  }\n\n  @RegisterComponent<NylasConfirmationEmail, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-confirmation-email',\n    stateToProps: new Map([['schedulerConfig.selectedConfiguration', 'selectedConfiguration']]),\n    eventToProps: {\n      valueChanged: async (\n        event: CustomEvent<{ value: string; name: string; valueChanged?: (event: CustomEvent<{ value: string; name: string }>) => void }>,\n        _nylasSchedulerConfigConnector: NylasSchedulerConfigConnector,\n      ) => {\n        const { valueChanged } = event.detail;\n        // If a handler is passed, call it.\n        if (valueChanged) {\n          valueChanged(event);\n        }\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    const organizerName = this.participantsState.find(p => p.is_organizer)?.name;\n    return (\n      <Host>\n        <div class=\"nylas-confirmation-email\" part=\"nce\">\n          <div class=\"header\" part=\"nce__header\">\n            <div>\n              <h3>{this.confirmationEmail?.booking_confirmed?.title ?? `Booking confirmed with ${organizerName ? ` ${organizerName}` : ''}`}</h3>\n              <p>Booking confirmation email</p>\n            </div>\n            {this.isConfirmationEmailOpen ? (\n              <div class=\"confirmation-email-toggle\" part=\"nce__confirmation-email-toggle--container\">\n                <span class={`chevron ${this.isConfirmationEmailOpen ? 'open' : 'closed'} `} onClick={() => this.toggleConfirmationEmail()}>\n                  <chevron-icon width=\"24\" height=\"24\" />\n                </span>\n              </div>\n            ) : (\n              <button-component\n                variant={'basic'}\n                clickHandler={event => {\n                  event.preventDefault();\n                  this.toggleConfirmationEmail();\n                }}\n              >\n                <edit-icon width=\"16\" height=\"16\"></edit-icon>\n                Edit\n              </button-component>\n            )}\n          </div>\n\n          {this.isConfirmationEmailOpen ? (\n            <div class=\"nylas-confirmation-email__body\" part=\"nce__body\">\n              <div class=\"nylas-confirmation-email__section\">\n                <div class=\"nylas-confirmation-email__row\">\n                  <label>\n                    Send confirmation email\n                    <span class=\"label-icon\">\n                      <tooltip-component>\n                        <info-icon slot=\"tooltip-icon\" />\n                        <span slot=\"tooltip-content\">You and your guests will receive a confirmation email immediately upon booking.</span>\n                      </tooltip-component>\n                    </span>\n                  </label>\n                  <span class=\"selected-value\">Immediately upon booking</span>\n                </div>\n                <div class=\"nylas-confirmation-email__row\">\n                  <div class=\"subsection\">\n                    <div class=\"input-container\">\n                      <label>\n                        Company logo URL\n                        <span class=\"label-icon\">\n                          <tooltip-component>\n                            <info-icon slot=\"tooltip-icon\" />\n                            <span slot=\"tooltip-content\">\n                              This logo appears in the booking confirmation email. The URL must be publicly accessible. The image will be scaled down to a max size of 200px x\n                              100px.\n                            </span>\n                          </tooltip-component>\n                        </span>\n                      </label>\n\n                      {this.confirmationEmail && (\n                        <input-image-url\n                          name=\"confirmation-email-logo\"\n                          exportparts=\"iiu__logo-input-textfield: nce__input-image-url\"\n                          imageUrl={this.confirmationEmail?.logo ?? ''}\n                        />\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div class=\"nylas-confirmation-email__row full-width-col\">\n                  <div class=\"subsection\">\n                    <h3>Email message</h3>\n                    <div class=\"input-container\">\n                      <label htmlFor=\"title\">\n                        Custom email title\n                        <span class=\"label-icon\">\n                          <tooltip-component>\n                            <info-icon slot=\"tooltip-icon\" />\n                            <span slot=\"tooltip-content\">An email title is a headline within the body of the email. This doesn&apos;t change the subject line.</span>\n                          </tooltip-component>\n                        </span>\n                      </label>\n                      <input-component\n                        name=\"confirmation-email-title\"\n                        maxLength={60}\n                        placeholder={`Booking confirmed ${organizerName ? `with ${organizerName}` : ''}`}\n                        defaultValue={this.confirmationEmail?.booking_confirmed?.title ?? ''}\n                      ></input-component>\n                    </div>\n                    <div class=\"input-container\">\n                      {/* <label htmlFor=\"title\">Email body</label> */}\n                      <textarea-component\n                        label=\"Additional info\"\n                        name=\"confirmation-email-body\"\n                        id=\"confirmation-email-body\"\n                        placeholder=\"Default body\"\n                        tooltip=\"Scheduler adds the content of the box to the email body.\"\n                        maxLength={500}\n                        defaultValue={this.confirmationEmail?.booking_confirmed?.body ?? ''}\n                      ></textarea-component>\n\n                      {/* <textarea\n                        id=\"description\"\n                        part=\"nrt__textarea\"\n                        name=\"confirmation-email-body\"\n                        placeholder='Default body'\n                        value={this.confirmationEmail?.booking_confirmed?.body ?? ''}\n                        maxlength=\"500\"\n                        rows={2}\n                        onInput={e => this.handleEmailBodyChange(e)}\n                      ></textarea> */}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div class=\"nylas-confirmation-email__summary\" part=\"nce__summary\">\n              <p>\n                <span class=\"summary-icon\">\n                  <person-clipboard-icon></person-clipboard-icon>\n                </span>\n                All host & guests\n              </p>\n              <p>\n                <span class=\"summary-icon\">\n                  <clock-icon></clock-icon>\n                </span>\n                Immediately on booking\n              </p>\n            </div>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}