import { proxyCustomElement, HTMLElement, createEvent, h } from '@stencil/core/internal/client';

const radioButtonGroupCss = ".radio-group{display:flex;flex-direction:column;gap:0.5rem;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:\"Inter\", sans-serif}.radio-group slot[name=label]{display:flex;color:var(--nylas-base-800, #293056);font-size:14px;font-style:normal;font-weight:400;line-height:150%;font-size:16px}.radio-group slot[name=label].error{color:var(--nylas-error)}.radio-group slot[name=label] span.required{color:var(--nylas-error);padding:0 0.25rem}.radio-group slot[name=label] p{margin:0}.radio-group slot[name=label] p.error{color:var(--nylas-error)}.radio-group slot[name=label] .error{color:var(--nylas-error)}.radio-group span.error{color:var(--nylas-error);font-size:14px;font-weight:400;line-height:20px;font-family:var(--nylas-font-family)}.radio-group label{display:flex;font-family:var(--nylas-font-family);cursor:pointer}.radio-group label .radio-option{display:flex;align-items:flex-start;gap:0.5rem}.radio-group label .radio-option input[type=radio]{cursor:pointer}.radio-group label .radio-option input[type=radio i]{width:20px;height:20px;color:var(--nylas-primary)}.radio-group label .radio-option p{display:flex;flex-direction:column;gap:0.5rem;margin:0}.radio-group label .radio-option p .title{font-size:16px;font-weight:500;line-height:20px;color:var(--nylas-base-800)}.radio-group label .radio-option p .description{font-size:14px;font-weight:400;line-height:20px;color:var(--nylas-base-600)}";

const RadioButtonGroup = proxyCustomElement(class RadioButtonGroup extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.nylasFormRadioChanged = createEvent(this, "nylasFormRadioChanged", 7);
        this.componentType = 'radio-group';
        this.name = 'radio-group';
        this.options = [];
        this.defaultSelectedValue = '';
        this.label = undefined;
        this.required = false;
        this.selectedValue = undefined;
        this.error = '';
    }
    handleDefaultSelectedValueChange(newValue) {
        this.selectedValue = newValue;
    }
    componentDidLoad() {
        this.selectedValue = this.defaultSelectedValue;
    }
    handleBookingFormSubmitted(event) {
        if (this.required && !this.selectedValue) {
            this.error = `${this.label} is required.`;
            return;
        }
        if (this.error) {
            event.preventDefault();
        }
    }
    componentWillLoad() {
        this.el.setAttribute('component-type', this.componentType);
    }
    handleChange(value) {
        this.error = '';
        this.selectedValue = value;
        this.nylasFormRadioChanged.emit({
            value,
            name: this.name,
            label: this.label,
        });
    }
    render() {
        return (h("div", { key: '20c4be1bdb2f8fc16cba7cd91b97f618e185e24f', class: "radio-group" }, h("slot", { key: '4a54edf907afa1e3e9e6191b21bdceb913503a2e', name: "label" }, this.label && (h("p", { class: { error: !!this.error } }, h("span", { class: "label" }, this.label), this.required && h("span", { class: "required" }, "*")))), this.options.map(option => (h("label", null, h("div", { class: "radio-option" }, h("input", { type: "radio", name: this.name, value: option.value, checked: this.selectedValue === option.value, onChange: () => this.handleChange(option.value) }), h("p", null, h("span", { class: "title" }, option.label), h("span", { class: "description" }, option.description)))))), this.error && h("span", { class: "error help-text" }, this.error)));
    }
    get el() { return this; }
    static get watchers() { return {
        "defaultSelectedValue": ["handleDefaultSelectedValueChange"]
    }; }
    static get style() { return radioButtonGroupCss; }
}, [1, "radio-button-group", {
        "name": [1],
        "options": [16],
        "defaultSelectedValue": [1, "default-selected-value"],
        "label": [1],
        "required": [4],
        "selectedValue": [32],
        "error": [32]
    }, [[4, "bookingFormSubmitted", "handleBookingFormSubmitted"]], {
        "defaultSelectedValue": ["handleDefaultSelectedValueChange"]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["radio-button-group"];
    components.forEach(tagName => { switch (tagName) {
        case "radio-button-group":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, RadioButtonGroup);
            }
            break;
    } });
}

export { RadioButtonGroup as R, defineCustomElement as d };

//# sourceMappingURL=radio-button-group2.js.map