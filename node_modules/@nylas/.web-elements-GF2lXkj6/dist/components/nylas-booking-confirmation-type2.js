import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';
import { R as RegisterComponent } from './register-component.js';
import { a as debug } from './utils.js';
import { d as defineCustomElement$5 } from './chevron.js';
import { d as defineCustomElement$4 } from './info.js';
import { d as defineCustomElement$3 } from './search.js';
import { d as defineCustomElement$2 } from './select-dropdown2.js';
import { d as defineCustomElement$1 } from './toolitp-component.js';

const nylasBookingConfirmationTypeCss = ":host{display:block;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:\"Inter\", sans-serif;width:inherit}.nylas-booking-confirmation-type{width:inherit;display:flex;flex-direction:column;margin-bottom:1rem}.nylas-booking-confirmation-type .nylas-booking-confirmation-type__dropdown span.label{display:flex;align-items:center;gap:4px;color:var(--nylas-base-800)}.nylas-booking-confirmation-type .nylas-booking-confirmation-type__dropdown span.label tooltip-component{display:flex}.nylas-booking-confirmation-type .nylas-booking-confirmation-type__dropdown select-dropdown::part(sd_dropdown){width:100%}.nylas-booking-confirmation-type .nylas-booking-confirmation-type__dropdown select-dropdown::part(sd_dropdown-button){width:100%;display:flex;justify-content:space-between;align-items:center;border:1px solid var(--nylas-base-200);border-radius:var(--nylas-border-radius-2x);padding:1rem}.nylas-booking-confirmation-type .nylas-booking-confirmation-type__dropdown select-dropdown::part(sd_dropdown-content){width:100%;max-width:unset}.nylas-booking-confirmation-type .nylas-booking-confirmation-type__dropdown select-dropdown::part(sd_dropdown-button-selected-label){max-width:calc(100% - 2rem);font-family:var(--nylas-font-family);font-size:16px;line-height:24px}";

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
const NylasBookingConfirmationType = proxyCustomElement(class NylasBookingConfirmationType extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.valueChanged = createEvent(this, "valueChanged", 7);
        this.internals = this.attachInternals();
        this.selectedConfiguration = undefined;
        this.name = 'confirmation-type';
        this.bookingType = 'booking';
        this.showComponent = this.selectedConfiguration?.event_booking?.booking_type !== 'custom-confirmation';
        this.selectedBookingType = undefined;
        this.showDropdown = undefined;
    }
    elementNameChangedHandler(newValue) {
        debug('nylas-booking-confirmation-type', 'elementNameChangedHandler', newValue);
        this.host.setAttribute('name', newValue);
    }
    selectedConfigurationChangedHandler(newValue) {
        debug('nylas-booking-confirmation-type', 'selectedConfigurationChangedHandler', newValue);
        if (newValue?.event_booking?.booking_type) {
            this.selectedBookingType = newValue?.event_booking?.booking_type;
            this.showDropdown = newValue?.event_booking?.booking_type !== 'custom-confirmation' && !!newValue?.scheduler?.organizer_confirmation_url;
        }
    }
    connectedCallback() {
        debug('nylas-booking-confirmation-type', 'connectedCallback');
    }
    disconnectedCallback() {
        debug('nylas-booking-confirmation-type', 'disconnectedCallback');
    }
    componentWillLoad() {
        debug('nylas-booking-confirmation-type', 'componentWillLoad');
        this.host.setAttribute('name', this.name);
    }
    componentDidLoad() {
        debug('nylas-booking-confirmation-type', 'componentDidLoad');
        if (this.selectedConfiguration) {
            this.selectedConfigurationChangedHandler(this.selectedConfiguration);
        }
        else {
            this.selectedBookingType = this.bookingType || 'booking';
        }
        this.internals.setFormValue(this.selectedBookingType.toString(), this.name);
        this.showDropdown = this.selectedConfiguration?.event_booking?.booking_type !== 'custom-confirmation' && !!this.selectedConfiguration?.scheduler?.organizer_confirmation_url;
    }
    componentWillUpdate() {
        debug('nylas-booking-confirmation-type', 'componentWillUpdate');
    }
    componentDidUpdate() {
        debug('nylas-booking-confirmation-type', 'componentDidUpdate');
    }
    componentWillRender() {
        debug('nylas-booking-confirmation-type', 'componentWillRender');
    }
    componentDidRender() {
        debug('nylas-booking-confirmation-type', 'componentDidRender');
    }
    nylasFormDropdownChangedHandler(event) {
        debug('nylas-booking-confirmation-type', 'nylasFormDropdownChangedHandler', event.detail);
        const valueChanged = (event) => {
            const { value } = event.detail;
            this.selectedBookingType = value;
            this.internals.setFormValue(value.toString(), this.name);
        };
        this.valueChanged.emit({ ...event.detail, valueChanged });
    }
    render() {
        const bookingOptions = [
            {
                label: 'Automatically accept bookings',
                value: 'booking',
            },
            {
                label: 'Manually accept bookings',
                value: 'organizer-confirmation',
            },
        ];
        return (h(Host, { key: 'bb3093d5abf52581a6b29eabf2c520ae1da1a425' }, this.showDropdown && (h("div", { class: "nylas-booking-confirmation-type", part: "nbct" }, bookingOptions.length > 0 && (h("div", { class: "nylas-booking-confirmation-type__dropdown" }, h("span", { class: "label" }, "When a booking is requested", h("tooltip-component", null, h("info-icon", { slot: "tooltip-icon" }), h("span", { slot: "tooltip-content" }, "Manually accept bookings allows you to review and either accept or decline each booking request."))), this.selectedBookingType && (h("select-dropdown", { name: "booking-type", options: bookingOptions, withSearch: false, exportparts: "sd_dropdown: nbct__dropdown, sd_dropdown-button: nbct__dropdown-button, sd_dropdown-content: nbct__dropdown-content", defaultSelectedOption: bookingOptions.find(cal => cal.value == this.selectedBookingType) }))))))));
    }
    static get formAssociated() { return true; }
    get host() { return this; }
    static get watchers() { return {
        "name": ["elementNameChangedHandler"],
        "selectedConfiguration": ["selectedConfigurationChangedHandler"]
    }; }
    static get style() { return nylasBookingConfirmationTypeCss; }
}, [65, "nylas-booking-confirmation-type", {
        "selectedConfiguration": [16],
        "name": [1],
        "bookingType": [1, "booking-type"],
        "showComponent": [4, "show-component"],
        "selectedBookingType": [32],
        "showDropdown": [32]
    }, [[0, "nylasFormDropdownChanged", "nylasFormDropdownChangedHandler"]], {
        "name": ["elementNameChangedHandler"],
        "selectedConfiguration": ["selectedConfigurationChangedHandler"]
    }]);
__decorate([
    RegisterComponent({
        name: 'nylas-booking-confirmation-type',
        stateToProps: new Map([['schedulerConfig.selectedConfiguration', 'selectedConfiguration']]),
        eventToProps: {
            valueChanged: async (event, _nylasSchedulerConfigConnector) => {
                const { valueChanged } = event.detail;
                if (valueChanged) {
                    valueChanged(event);
                }
            },
        },
        fireRegisterEvent: true,
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NylasBookingConfirmationType.prototype, "render", null);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["nylas-booking-confirmation-type", "chevron-icon", "info-icon", "search-icon", "select-dropdown", "tooltip-component"];
    components.forEach(tagName => { switch (tagName) {
        case "nylas-booking-confirmation-type":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, NylasBookingConfirmationType);
            }
            break;
        case "chevron-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$5();
            }
            break;
        case "info-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$4();
            }
            break;
        case "search-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$3();
            }
            break;
        case "select-dropdown":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
        case "tooltip-component":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}

export { NylasBookingConfirmationType as N, defineCustomElement as d };

//# sourceMappingURL=nylas-booking-confirmation-type2.js.map