import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';
import { R as RegisterComponent } from './register-component.js';
import { a as debug, s as sanitize } from './utils.js';
import { d as defineCustomElement$b } from './button-component2.js';
import { d as defineCustomElement$a } from './chevron.js';
import { d as defineCustomElement$9 } from './clock.js';
import { d as defineCustomElement$8 } from './edit.js';
import { d as defineCustomElement$7 } from './info.js';
import { d as defineCustomElement$6 } from './input-component2.js';
import { d as defineCustomElement$5 } from './input-image-url2.js';
import { d as defineCustomElement$4 } from './loading.js';
import { d as defineCustomElement$3 } from './person-clipboard.js';
import { d as defineCustomElement$2 } from './textarea-component2.js';
import { d as defineCustomElement$1 } from './toolitp-component.js';

const nylasConfirmationEmailCss = ":host{display:block;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:\"Inter\", sans-serif;width:inherit}.nylas-confirmation-email{width:inherit;display:flex;flex-direction:column;margin:1rem;border-radius:var(--nylas-border-radius-2x);border:1px solid var(--nylas-base-200);text-align:left}.nylas-confirmation-email .header{padding:1rem;display:grid;grid-template-columns:1fr auto;border-bottom:1px solid var(--nylas-base-200)}.nylas-confirmation-email .header h3{border-radius:var(--nylas-border-radius-2x);margin:0;font-size:1rem;font-weight:600;line-height:20px;color:var(--nylas-base-900);text-align:left}.nylas-confirmation-email .header p{margin:0.25rem 0 0 0;font-size:0.875rem;font-weight:400;line-height:20px;color:var(--nylas-base-600);text-align:left}.nylas-confirmation-email .header .confirmation-email-toggle{display:flex;gap:24px;align-items:center}.nylas-confirmation-email .header .confirmation-email-toggle .chevron{display:flex;align-self:center;cursor:pointer}.nylas-confirmation-email .header .confirmation-email-toggle .chevron:hover,.nylas-confirmation-email .header .confirmation-email-toggle .chevron:active{color:var(--nylas-primary)}.nylas-confirmation-email .header .confirmation-email-toggle .chevron.open{transform:rotate(90deg)}.nylas-confirmation-email .header .confirmation-email-toggle .chevron.closed{transform:rotate(270deg)}.nylas-confirmation-email .header .confirmation-email-toggle .chevron.disabled{cursor:not-allowed;color:var(--nylas-base-300)}.nylas-confirmation-email .header .confirmation-email-toggle .chevron.disabled:hover{color:var(--nylas-base-300)}.nylas-confirmation-email .nylas-confirmation-email__body{display:grid;grid-template-columns:1fr auto;background-color:var(--nylas-base-25);border-radius:var(--nylas-border-radius-2x)}@media screen and (max-width: 768px){.nylas-confirmation-email .nylas-confirmation-email__body{grid-template-columns:1fr}}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section{padding:1rem;display:flex;flex-direction:column;gap:1rem;color:var(--nylas-base-800)}@media screen and (max-width: 768px){.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section{border:none}}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .nylas-confirmation-email__row{display:grid;grid-template-columns:1fr auto;align-items:center;gap:1rem}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .nylas-confirmation-email__row.full-width-col{grid-template-columns:1fr;border-top:1px solid var(--nylas-base-200);padding-top:1.25rem;margin:0.25rem 0}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .nylas-confirmation-email__row label{display:flex;align-items:center}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .nylas-confirmation-email__row label span.required{color:var(--nylas-error, #cc4841)}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .nylas-confirmation-email__row label span.label-icon{margin-left:4px}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .nylas-confirmation-email__row label span.label-icon tooltip-component{display:flex}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .nylas-confirmation-email__row p{margin:0.25rem 0 0 0;font-size:1rem;font-weight:500;line-height:24px;color:var(--nylas-base-900)}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .nylas-confirmation-email__row .company-logo-container{display:flex;gap:32px;width:100%}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .nylas-confirmation-email__row .company-logo-container .input-container{display:flex;flex-direction:column;flex:1}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .nylas-confirmation-email__row .company-logo-container .company-logo{display:flex;justify-content:center;align-items:center;width:200px;height:100px;border:var(--nylas-base-200) solid 1px;border-radius:var(--nylas-border-radius-2x);overflow:hidden;padding:10px}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .nylas-confirmation-email__row .company-logo-container .company-logo img{max-height:100%;max-width:100%;object-fit:contain;object-position:center}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .nylas-confirmation-email__row span.selected-value{font-weight:500}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .subsection{display:flex;flex-direction:column;gap:1rem}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .subsection h3{margin:0;font-size:1rem;font-weight:600;line-height:20px;color:var(--nylas-base-900);text-align:left}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .subsection .input-container{display:flex;flex-direction:column;gap:0.25rem}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__section .subsection .input-container textarea{padding:12px 16px;border-width:1;resize:vertical;border-radius:8px;font-family:var(--nylas-font-family);font-size:16px;line-height:24px;border:1px solid var(--nylas-base-200)}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__preview{width:208px;background:var(--nylas-base-25);border-bottom-right-radius:var(--nylas-border-radius-2x)}@media screen and (max-width: 768px){.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__preview{width:inherit;border-bottom-left-radius:var(--nylas-border-radius-2x)}}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__preview h4{font-size:14px;line-height:24px;color:var(--nylas-base-600);font-family:var(--nylas-font-family);font-weight:500;text-align:center;margin:0.75rem 0}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__preview .preview-container{padding:0 2rem 1rem}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__preview .preview-container .slot{background-color:transparent;border-top:1px solid var(--nylas-base-300)}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__preview .preview-container .slot.active{background-color:var(--nylas-base-100)}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__preview .preview-container .slot:last-of-type{border-bottom:1px solid var(--nylas-base-300)}.nylas-confirmation-email .nylas-confirmation-email__body .nylas-confirmation-email__preview .preview-container .event-slot{background-color:var(--nylas-base-600);border-top:1px solid var(--nylas-base-300)}.nylas-confirmation-email .nylas-confirmation-email__body span.error-message{color:var(--nylas-error)}.nylas-confirmation-email .nylas-confirmation-email__body span.help-text{margin:0.25rem 0 0 0;font-size:0.875rem;font-weight:400;line-height:20px;color:var(--nylas-base-600);text-align:left}.nylas-confirmation-email .nylas-confirmation-email__summary{padding:0.75rem 1rem;display:grid;grid-template-columns:auto 1fr;column-gap:1rem}.nylas-confirmation-email .nylas-confirmation-email__summary p{margin:0;display:flex;align-items:center;column-gap:4px;font-size:0.875rem;font-weight:400;line-height:21px;color:var(--nylas-base-600);text-align:left}.nylas-confirmation-email .nylas-confirmation-email__summary p span.summary-icon{display:flex;justify-content:center;min-width:20px}sp-divider{background-color:var(--nylas-base-200);height:1px;margin:0.25rem 0}";

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
const NylasConfirmationEmail = proxyCustomElement(class NylasConfirmationEmail extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.valueChanged = createEvent(this, "valueChanged", 7);
        this.internals = this.attachInternals();
        this.selectedConfiguration = undefined;
        this.confirmationEmailTemplate = {};
        this.isOpen = false;
        this.participants = [];
        this.name = 'confirmation-email-template';
        this.confirmationEmail = undefined;
        this.isConfirmationEmailOpen = this.isOpen;
        this.participantsState = this.participants;
    }
    connectedCallback() {
        debug('nylas-confirmation-email', 'connectedCallback');
    }
    disconnectedCallback() {
        debug('nylas-confirmation-email', 'disconnectedCallback');
    }
    componentWillLoad() {
        debug('nylas-confirmation-email', 'componentWillLoad');
        this.host.setAttribute('name', this.name);
    }
    componentDidLoad() {
        debug('nylas-confirmation-email', 'componentDidLoad');
        if (this.selectedConfiguration) {
            this.selectedConfigurationChangedHandler(this.selectedConfiguration);
        }
        else {
            this.confirmationEmail = this.confirmationEmailTemplate;
            this.isConfirmationEmailOpen = this.isOpen;
            this.participantsState = this.participants;
        }
    }
    elementNameChangedHandler(newValue) {
        debug('nylas-confirmation-email', 'elementNameChangedHandler', newValue);
        this.host.setAttribute('name', newValue);
    }
    selectedConfigurationChangedHandler(newValue) {
        debug('nylas-confirmation-email', 'selectedConfigurationChangedHandler', newValue);
        this.confirmationEmail = newValue?.scheduler?.email_template || this.confirmationEmailTemplate;
        this.isConfirmationEmailOpen = !newValue?.event_booking?.reminders?.overrides?.length;
        this.participantsState = newValue?.participants || this.participants;
    }
    async nylasFormInputChangeHandler(event) {
        const { name, value } = event.detail;
        const type = event.detail?.type;
        if (name === 'confirmation-email-title') {
            this.confirmationEmail = { ...this.confirmationEmail, booking_confirmed: { ...(this.confirmationEmail?.booking_confirmed || {}), title: value } };
            this.internals.setFormValue(JSON.stringify(this.confirmationEmail), this.name);
            this.valueChanged.emit({ value: JSON.stringify(this.confirmationEmail), name: this.name });
        }
        else if (name === 'confirmation-email-body' && type === 'multi_line_text') {
            this.handleEmailBodyChange(event);
        }
    }
    valueChangedHandler(event) {
        debug('nylas-confirmation-email', 'valueChangedHandler', event.detail);
        const { value, name } = event.detail;
        if (name === 'confirmation-email-logo') {
            this.confirmationEmail = { ...this.confirmationEmail, logo: value };
            this.internals.setFormValue(JSON.stringify(this.confirmationEmail), this.name);
            this.valueChanged.emit({ value: JSON.stringify(this.confirmationEmail), name: this.name });
        }
    }
    updateConfirmationFormValue() {
        debug('nylas-confirmation-email', 'updateConfirmationFormValue');
        this.internals.setFormValue(JSON.stringify(this.confirmationEmail), this.name);
        this.valueChanged.emit({ value: JSON.stringify(this.confirmationEmail), name: this.name });
    }
    toggleConfirmationEmail() {
        this.isConfirmationEmailOpen = !this.isConfirmationEmailOpen;
    }
    handleEmailBodyChange(event) {
        const value = sanitize(event.detail.value);
        this.confirmationEmail = { ...this.confirmationEmail, booking_confirmed: { ...(this.confirmationEmail?.booking_confirmed || {}), body: value } };
        this.internals.setFormValue(JSON.stringify(this.confirmationEmail), this.name);
        this.valueChanged.emit({ value: JSON.stringify(this.confirmationEmail), name: this.name });
    }
    render() {
        const organizerName = this.participantsState.find(p => p.is_organizer)?.name;
        return (h(Host, { key: '45c17e9e7aee29bb1c2f434c547bacc8eb119347' }, h("div", { key: '47ea049446b8367af0b37d53a800df7f8f52e1f9', class: "nylas-confirmation-email", part: "nce" }, h("div", { key: '3d8af814db748d28f89fb2e4e6bf4cecb07484cc', class: "header", part: "nce__header" }, h("div", { key: '76c89e5f36c21588a3b081c0515eecda50a6779d' }, h("h3", { key: '241c08c263ac3ebfd50edf55f4bfcf9c7a7e7792' }, this.confirmationEmail?.booking_confirmed?.title ?? `Booking confirmed with ${organizerName ? ` ${organizerName}` : ''}`), h("p", { key: '999546d36a35d90b1dc4ccee069dbdf0bf58e433' }, "Booking confirmation email")), this.isConfirmationEmailOpen ? (h("div", { class: "confirmation-email-toggle", part: "nce__confirmation-email-toggle--container" }, h("span", { class: `chevron ${this.isConfirmationEmailOpen ? 'open' : 'closed'} `, onClick: () => this.toggleConfirmationEmail() }, h("chevron-icon", { width: "24", height: "24" })))) : (h("button-component", { variant: 'basic', clickHandler: event => {
                event.preventDefault();
                this.toggleConfirmationEmail();
            } }, h("edit-icon", { width: "16", height: "16" }), "Edit"))), this.isConfirmationEmailOpen ? (h("div", { class: "nylas-confirmation-email__body", part: "nce__body" }, h("div", { class: "nylas-confirmation-email__section" }, h("div", { class: "nylas-confirmation-email__row" }, h("label", null, "Send confirmation email", h("span", { class: "label-icon" }, h("tooltip-component", null, h("info-icon", { slot: "tooltip-icon" }), h("span", { slot: "tooltip-content" }, "You and your guests will receive a confirmation email immediately upon booking.")))), h("span", { class: "selected-value" }, "Immediately upon booking")), h("div", { class: "nylas-confirmation-email__row" }, h("div", { class: "subsection" }, h("div", { class: "input-container" }, h("label", null, "Company logo URL", h("span", { class: "label-icon" }, h("tooltip-component", null, h("info-icon", { slot: "tooltip-icon" }), h("span", { slot: "tooltip-content" }, "This logo appears in the booking confirmation email. The URL must be publicly accessible. The image will be scaled down to a max size of 200px x 100px.")))), this.confirmationEmail && (h("input-image-url", { name: "confirmation-email-logo", exportparts: "iiu__logo-input-textfield: nce__input-image-url", imageUrl: this.confirmationEmail?.logo ?? '' }))))), h("div", { class: "nylas-confirmation-email__row full-width-col" }, h("div", { class: "subsection" }, h("h3", null, "Email message"), h("div", { class: "input-container" }, h("label", { htmlFor: "title" }, "Custom email title", h("span", { class: "label-icon" }, h("tooltip-component", null, h("info-icon", { slot: "tooltip-icon" }), h("span", { slot: "tooltip-content" }, "An email title is a headline within the body of the email. This doesn't change the subject line.")))), h("input-component", { name: "confirmation-email-title", maxLength: 60, placeholder: `Booking confirmed ${organizerName ? `with ${organizerName}` : ''}`, defaultValue: this.confirmationEmail?.booking_confirmed?.title ?? '' })), h("div", { class: "input-container" }, h("textarea-component", { label: "Additional info", name: "confirmation-email-body", id: "confirmation-email-body", placeholder: "Default body", tooltip: "Scheduler adds the content of the box to the email body.", maxLength: 500, defaultValue: this.confirmationEmail?.booking_confirmed?.body ?? '' }))))))) : (h("div", { class: "nylas-confirmation-email__summary", part: "nce__summary" }, h("p", null, h("span", { class: "summary-icon" }, h("person-clipboard-icon", null)), "All host & guests"), h("p", null, h("span", { class: "summary-icon" }, h("clock-icon", null)), "Immediately on booking"))))));
    }
    static get formAssociated() { return true; }
    get host() { return this; }
    static get watchers() { return {
        "name": ["elementNameChangedHandler"],
        "selectedConfiguration": ["selectedConfigurationChangedHandler"]
    }; }
    static get style() { return nylasConfirmationEmailCss; }
}, [65, "nylas-confirmation-email", {
        "selectedConfiguration": [16],
        "confirmationEmailTemplate": [16],
        "isOpen": [4, "is-open"],
        "participants": [16],
        "name": [1],
        "confirmationEmail": [32],
        "isConfirmationEmailOpen": [32],
        "participantsState": [32]
    }, [[0, "nylasFormInputChanged", "nylasFormInputChangeHandler"], [0, "valueChanged", "valueChangedHandler"]], {
        "name": ["elementNameChangedHandler"],
        "selectedConfiguration": ["selectedConfigurationChangedHandler"]
    }]);
__decorate([
    RegisterComponent({
        name: 'nylas-confirmation-email',
        stateToProps: new Map([['schedulerConfig.selectedConfiguration', 'selectedConfiguration']]),
        eventToProps: {
            valueChanged: async (event, _nylasSchedulerConfigConnector) => {
                const { valueChanged } = event.detail;
                if (valueChanged) {
                    valueChanged(event);
                }
            },
        },
        fireRegisterEvent: true,
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NylasConfirmationEmail.prototype, "render", null);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["nylas-confirmation-email", "button-component", "chevron-icon", "clock-icon", "edit-icon", "info-icon", "input-component", "input-image-url", "loading-icon", "person-clipboard-icon", "textarea-component", "tooltip-component"];
    components.forEach(tagName => { switch (tagName) {
        case "nylas-confirmation-email":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, NylasConfirmationEmail);
            }
            break;
        case "button-component":
            if (!customElements.get(tagName)) {
                defineCustomElement$b();
            }
            break;
        case "chevron-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$a();
            }
            break;
        case "clock-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$9();
            }
            break;
        case "edit-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$8();
            }
            break;
        case "info-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$7();
            }
            break;
        case "input-component":
            if (!customElements.get(tagName)) {
                defineCustomElement$6();
            }
            break;
        case "input-image-url":
            if (!customElements.get(tagName)) {
                defineCustomElement$5();
            }
            break;
        case "loading-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$4();
            }
            break;
        case "person-clipboard-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$3();
            }
            break;
        case "textarea-component":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
        case "tooltip-component":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}

export { NylasConfirmationEmail as N, defineCustomElement as d };

//# sourceMappingURL=nylas-confirmation-email2.js.map