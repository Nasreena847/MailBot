import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const iconCss = ".sc-underline-icon-h{display:flex}";

const UnderlineIcon = proxyCustomElement(class UnderlineIcon extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.width = '15';
        this.height = '15';
    }
    render() {
        return (h("svg", { key: '42ce18b2a4ceef02d49d6e981728a8743ee3f687', width: this.width, height: this.height, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, h("path", { key: '1f552e6150723ffc768fb78538bb6adaa01c5926', d: "M19 4V10C19 13.866 15.866 17 12 17C8.13401 17 5 13.866 5 10V4M8.5 4V10C8.5 13.2218 10.6766 15.9352 13.6395 16.7501M4 21H20M3 4L10.5 4M17 4L21 4", stroke: "currentColor", "stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round" })));
    }
    static get style() { return iconCss; }
}, [2, "underline-icon", {
        "width": [1],
        "height": [1]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["underline-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "underline-icon":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, UnderlineIcon);
            }
            break;
    } });
}

export { UnderlineIcon as U, defineCustomElement as d };

//# sourceMappingURL=underline.js.map