{"file":"nylas-organizer-confirmation-card2.js","mappings":"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","names":["i18next"],"sources":["src/components/scheduler/nylas-organizer-confirmation-card/nylas-organizer-confirmation-card.scss?tag=nylas-organizer-confirmation-card&encapsulation=shadow","src/components/scheduler/nylas-organizer-confirmation-card/nylas-organizer-confirmation-card.tsx"],"sourcesContent":["@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  @include default-css-variables;\n}\n\n.event-card-wrapper {\n  height: inherit;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  font-family: var(--nylas-font-family);\n  background-color: var(--nylas-base-0);\n  color: var(--nylas-base-900);\n  border-radius: var(--nylas-border-radius-3x);\n  position: relative;\n  margin-top: 1rem;\n  width: 424px;\n\n  @media #{$mobile} {\n    width: 100%;\n    border-radius: 0px;\n  }\n\n  box-shadow:\n    0px 1px 4px rgba(0, 0, 0, 0.1),\n    0px 3px 6px rgba(0, 0, 0, 0.06);\n}\n\n.calendar-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  position: absolute;\n  top: -1.25rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: var(--nylas-base-0);\n  border: 1px solid var(--nylas-base-200);\n  color: var(--nylas-base-700);\n}\n\n.booked-event-header {\n  margin: 1.5rem 4rem;\n  overflow-wrap: anywhere;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  font-size: 1rem;\n  font-weight: 400;\n\n  h2 {\n    color: var(--nylas-base-600);\n    margin-top: 1.5rem;\n    margin-bottom: 0.25rem;\n    font-size: 1.125rem;\n    font-weight: 600;\n  }\n}\n\n.manage-booking-description {\n  border-top: 1px solid var(--nylas-base-200);\n\n  p {\n    font-size: 16px;\n    margin: 1rem;\n    padding: 0.5rem 1rem;\n    font-weight: 400;\n    color: var(--nylas-base-800);\n  }\n}\n\n.footer {\n  padding: 0.5rem;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 0.5rem;\n  box-sizing: border-box;\n  background-color: var(--nylas-base-25);\n  width: 100%;\n  border-radius: 0 0 var(--nylas-border-radius-2x) var(--nylas-border-radius-2x);\n\n  &.no-template-cols {\n    grid-template-columns: 1fr;\n  }\n\n  &.no-footer {\n    display: none;\n  }\n}\n\nsp-divider {\n  background-color: var(--nylas-base-200);\n  height: 1px;\n}\n\ncalendar-check-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\nbutton-component {\n  --dot-color: var(--nylas-base-700);\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { Component, Element, EventEmitter, h, Host, Method, Prop, State } from '@stencil/core';\nimport { ConfigSettings, NylasSchedulerConnector } from '../../..';\nimport { NylasScheduling } from '../nylas-scheduling/nylas-scheduling';\nimport { debug } from '@/utils/utils';\nimport { Event } from '@stencil/core';\nimport { NylasSchedulerErrorResponse } from '@nylas/core';\nimport i18next from '@/utils/i18n';\n\n/**\n * The `nylas-organizer-confirmation-card` component is a UI component that displays the booked event card.\n *\n * @part nmcc - The booked event card host.\n * @part nmcc__card - The booked event card.\n * @part nmcc__title - The title of the booked event card.\n * @part nmcc__description - The description of the booked event card.\n * @part nmcc__button-outline - The cancel & reschedule button CTA.\n * @part nmcc__cancel-cta - The cancel button CTA.\n * @part nmcc__reschedule-cta - The reschedule button CTA.\n */\n@Component({\n  tag: 'nylas-organizer-confirmation-card',\n  styleUrl: 'nylas-organizer-confirmation-card.scss',\n  shadow: true,\n})\nexport class NylasOrganizerConfirmationCard {\n  /**\n   * The host element.\n   */\n  @Element() host!: HTMLNylasOrganizerConfirmationCardElement;\n  /**\n   * Booking flow type.\n   */\n  @Prop() readonly organizerConfirmationBookingId?: string;\n\n  /**\n   * The config settings for the scheduler.\n   */\n  @Prop() readonly configSettings?: ConfigSettings;\n\n  /**\n   * The loading state prop. Used to display loading state when fetching availability.\n   */\n  @Prop() readonly isLoading?: boolean;\n\n  /**\n   * The selected language.\n   */\n  @Prop({ attribute: 'selected-language' }) readonly selectedLanguage: string = navigator.language;\n\n  /**\n   * The state to identify which action is being performed.\n   */\n  @State() action: 'confirm' | 'reject' | null = null;\n\n  /**\n   * Reject booking button clicked event.\n   */\n  @Event() readonly rejectBookingButtonClicked!: EventEmitter<{ bookingId: string; host: HTMLNylasOrganizerConfirmationCardElement }>;\n\n  /**\n   * Reschedule button clicked event.\n   * */\n  @Event() readonly confirmBookingButtonClicked!: EventEmitter<{\n    bookingId: string;\n    host: HTMLNylasOrganizerConfirmationCardElement;\n    errorHandler?: (error: NylasSchedulerErrorResponse) => void;\n  }>;\n\n  /**\n   * This event is fired when an error occurs while rescheduling the booking.\n   */\n  @Event() readonly confirmBookingError!: EventEmitter<NylasSchedulerErrorResponse>;\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  async componentWillLoad() {\n    debug(`[nylas-organizer-confirmation-card] Component will load`);\n  }\n\n  async componentDidLoad() {\n    debug(`[nylas-organizer-confirmation-card] Component did load`);\n  }\n\n  private handleConfirmBookingButtonClicked = () => {\n    this.action = 'confirm';\n    const errorHandler = (error: NylasSchedulerErrorResponse) => {\n      this.confirmBookingError.emit(error);\n    };\n    if (this.organizerConfirmationBookingId && !this.isLoading) {\n      this.confirmBookingButtonClicked.emit({ bookingId: this.organizerConfirmationBookingId, host: this.host, errorHandler });\n    }\n  };\n\n  private handleRejectBookingButtonClicked = () => {\n    this.action = 'reject';\n    if (this.organizerConfirmationBookingId && !this.isLoading) {\n      this.rejectBookingButtonClicked.emit({ bookingId: this.organizerConfirmationBookingId, host: this.host });\n    }\n  };\n\n  @Method()\n  async resetAction() {\n    this.action = null;\n  }\n\n  @RegisterComponent<NylasOrganizerConfirmationCard, NylasSchedulerConnector, Exclude<NylasScheduling['stores'], undefined>>({\n    name: 'nylas-organizer-confirmation-card',\n    stateToProps: new Map([\n      ['scheduler.organizerConfirmationBookingId', 'organizerConfirmationBookingId'],\n      ['scheduler.configSettings', 'configSettings'],\n      ['scheduler.isLoading', 'isLoading'],\n      ['scheduler.selectedLanguage', 'selectedLanguage'],\n    ]),\n    eventToProps: {\n      rejectBookingButtonClicked: async (\n        event: CustomEvent<{ bookingId: string; host: HTMLNylasOrganizerConfirmationCardElement }>,\n        nylasSchedulerConnector: NylasSchedulerConnector,\n      ) => {\n        nylasSchedulerConnector.scheduler.setReject(event.detail.bookingId);\n      },\n      confirmBookingButtonClicked: async (\n        event: CustomEvent<{ bookingId: string; host: HTMLNylasOrganizerConfirmationCardElement; errorHandler?: (error: NylasSchedulerErrorResponse) => void }>,\n        nylasSchedulerConnector: NylasSchedulerConnector,\n      ) => {\n        const { host } = event.detail;\n        const result = await nylasSchedulerConnector.scheduler.updateBooking({\n          bookingId: event.detail.bookingId,\n          status: 'confirmed',\n        });\n        const { errorHandler } = event.detail;\n        if (errorHandler && (!result || 'error' in result)) {\n          errorHandler(result);\n        }\n        await host.resetAction();\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host part=\"nmcc\">\n        <div class=\"event-card-wrapper\" part=\"nmccc__card\">\n          <div class=\"calendar-icon\">\n            <calendar-check-icon />\n          </div>\n          <div class=\"booked-event-header\">\n            <h2 slot=\"card-title\" part=\"nmcc__title\">\n              {!!this.organizerConfirmationBookingId && `${i18next.t('bookingPendingTitle')}!`}\n            </h2>\n          </div>\n          <div class=\"manage-booking-description\">\n            <p>{i18next.t('bookingPendingnDescription')}</p>\n          </div>\n          <div\n            class={{\n              'footer': true,\n              'no-footer': this.configSettings?.scheduler?.hide_cancellation_options && this.configSettings?.scheduler?.hide_rescheduling_options,\n              'no-template-cols': this.configSettings?.scheduler?.hide_cancellation_options || this.configSettings?.scheduler?.hide_rescheduling_options,\n            }}\n          >\n            {!this.configSettings?.scheduler?.hide_cancellation_options && (\n              <button-component\n                variant={'destructive'}\n                onClick={this.handleRejectBookingButtonClicked}\n                isLoading={this.isLoading && this.action === 'reject'}\n                part=\"nmcc__button-outline nmcc__cancel-cta\"\n              >\n                {`${i18next.t('rejectBookingButton')}`}\n              </button-component>\n            )}\n            {!this.configSettings?.scheduler?.hide_rescheduling_options && (\n              <button-component\n                variant={'basic'}\n                onClick={this.handleConfirmBookingButtonClicked}\n                isLoading={this.isLoading && this.action === 'confirm'}\n                part=\"nmcc__button-outline nmcc__reschedule-cta\"\n              >\n                {`${i18next.t('confirmBookingButton')}`}\n              </button-component>\n            )}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}