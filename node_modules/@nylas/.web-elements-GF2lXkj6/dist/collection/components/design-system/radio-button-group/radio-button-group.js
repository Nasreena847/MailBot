import { h } from "@stencil/core";
export class RadioButtonGroup {
    constructor() {
        this.componentType = 'radio-group';
        this.name = 'radio-group';
        this.options = [];
        this.defaultSelectedValue = '';
        this.label = undefined;
        this.required = false;
        this.selectedValue = undefined;
        this.error = '';
    }
    handleDefaultSelectedValueChange(newValue) {
        this.selectedValue = newValue;
    }
    componentDidLoad() {
        this.selectedValue = this.defaultSelectedValue;
    }
    handleBookingFormSubmitted(event) {
        if (this.required && !this.selectedValue) {
            this.error = `${this.label} is required.`;
            return;
        }
        if (this.error) {
            event.preventDefault();
        }
    }
    componentWillLoad() {
        this.el.setAttribute('component-type', this.componentType);
    }
    handleChange(value) {
        this.error = '';
        this.selectedValue = value;
        this.nylasFormRadioChanged.emit({
            value,
            name: this.name,
            label: this.label,
        });
    }
    render() {
        return (h("div", { key: '20c4be1bdb2f8fc16cba7cd91b97f618e185e24f', class: "radio-group" }, h("slot", { key: '4a54edf907afa1e3e9e6191b21bdceb913503a2e', name: "label" }, this.label && (h("p", { class: { error: !!this.error } }, h("span", { class: "label" }, this.label), this.required && h("span", { class: "required" }, "*")))), this.options.map(option => (h("label", null, h("div", { class: "radio-option" }, h("input", { type: "radio", name: this.name, value: option.value, checked: this.selectedValue === option.value, onChange: () => this.handleChange(option.value) }), h("p", null, h("span", { class: "title" }, option.label), h("span", { class: "description" }, option.description)))))), this.error && h("span", { class: "error help-text" }, this.error)));
    }
    static get is() { return "radio-button-group"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["radio-button-group.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["radio-button-group.css"]
        };
    }
    static get properties() {
        return {
            "name": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The name of the radio group. This is used to identify the radio group when submitting a form."
                },
                "attribute": "name",
                "reflect": false,
                "defaultValue": "'radio-group'"
            },
            "options": {
                "type": "unknown",
                "mutable": false,
                "complexType": {
                    "original": "{ label: string; value: string; description?: string }[]",
                    "resolved": "{ label: string; value: string; description?: string | undefined; }[]",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The list of options in the radio group.\nEach option has a label and a value and an optional description."
                },
                "defaultValue": "[]"
            },
            "defaultSelectedValue": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The default selected value of the radio group."
                },
                "attribute": "default-selected-value",
                "reflect": false,
                "defaultValue": "''"
            },
            "label": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string | undefined",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "The label of the radio group. This is displayed above the radio group.\nLabel is optional. You can also use the slot 'label' to add a label."
                },
                "attribute": "label",
                "reflect": false
            },
            "required": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Whether the radio group is required. If true, the radio group must have a value when submitting a form.\nDefault is false. If the radio group is required and the value is empty, an error message is displayed."
                },
                "attribute": "required",
                "reflect": false,
                "defaultValue": "false"
            }
        };
    }
    static get states() {
        return {
            "selectedValue": {},
            "error": {}
        };
    }
    static get events() {
        return [{
                "method": "nylasFormRadioChanged",
                "name": "nylasFormRadioChanged",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "This event is fired when the selected value changes."
                },
                "complexType": {
                    "original": "{\n    value: string;\n    name: string;\n    label?: string;\n  }",
                    "resolved": "{ value: string; name: string; label?: string | undefined; }",
                    "references": {}
                }
            }];
    }
    static get elementRef() { return "el"; }
    static get watchers() {
        return [{
                "propName": "defaultSelectedValue",
                "methodName": "handleDefaultSelectedValueChange"
            }];
    }
    static get listeners() {
        return [{
                "name": "bookingFormSubmitted",
                "method": "handleBookingFormSubmitted",
                "target": "document",
                "capture": false,
                "passive": false
            }];
    }
}
//# sourceMappingURL=radio-button-group.js.map
