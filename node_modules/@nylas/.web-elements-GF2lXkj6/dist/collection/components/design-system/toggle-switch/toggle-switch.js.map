{"version":3,"file":"toggle-switch.js","sourceRoot":"","sources":["../../../../src/components/design-system/toggle-switch/toggle-switch.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAgB/E,MAAM,OAAO,qBAAqB;;oBAIT,eAAe;uBAIX,KAAK;qBAIR,EAAE;yBAKI,IAAI,CAAC,OAAO;;IAY1C,iBAAiB;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;IAChC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;YAC/B,OAAO,EAAE,IAAI,CAAC,SAAS;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,OAAO,CACL,8DAAO,KAAK,EAAC,QAAQ,EAAC,IAAI,EAAC,UAAU;YACnC,8DAAO,IAAI,EAAC,UAAU,EAAC,IAAI,EAAC,UAAU,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,GAAI;YACvH,4DAAK,KAAK,EAAC,cAAc,EAAC,IAAI,EAAC,WAAW,GAAO,CAC3C,CACT,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Prop, State, Event, EventEmitter } from '@stencil/core';\n\n/**\n * The `toggle-switch` component is a UI component that allows users to toggle a switch.\n * This component is used in the scheduling form to input toggle switch type inputs.\n * Use it as a replacement for checkboxes when you want to present a switch in the UI.\n *\n * @part ts_label - The label of the toggle switch\n * @part ts_input - The input of the toggle switch\n * @part ts_slider - The slider of the toggle switch\n */\n@Component({\n  tag: 'toggle-switch',\n  styleUrl: 'toggle-switch.scss',\n  shadow: true,\n})\nexport class ToggleSwitchComponent {\n  /**\n   * The name of the toggle switch. This is used to identify the toggle switch when submitting a form.\n   */\n  @Prop() name: string = 'toggle-switch';\n  /**\n   * The default value of the toggle switch. This is the value that is displayed when the toggle switch is rendered.\n   */\n  @Prop() checked: boolean = false;\n  /**\n   * The label of the toggle switch. This is displayed next to the toggle switch.\n   */\n  @Prop() label: string = '';\n\n  /**\n   * The checked state of the toggle switch.\n   */\n  @State() isChecked: boolean = this.checked;\n\n  /**\n   * This event is fired when the toggle switch is toggled.\n   */\n  @Event() nylasFormSwitchToggled!: EventEmitter<{\n    checked: boolean;\n    name: string;\n    label: string;\n  }>;\n\n  // Lifecycle events\n  componentWillLoad() {\n    this.isChecked = this.checked;\n  }\n\n  toggleCheck() {\n    this.isChecked = !this.isChecked;\n    this.nylasFormSwitchToggled.emit({\n      checked: this.isChecked,\n      name: this.name,\n      label: this.label,\n    });\n  }\n\n  render() {\n    return (\n      <label class=\"switch\" part=\"ts_label\">\n        <input type=\"checkbox\" part=\"ts_input\" name={this.name} checked={this.isChecked} onChange={() => this.toggleCheck()} />\n        <div class=\"slider round\" part=\"ts_slider\"></div>\n      </label>\n    );\n  }\n}\n"]}