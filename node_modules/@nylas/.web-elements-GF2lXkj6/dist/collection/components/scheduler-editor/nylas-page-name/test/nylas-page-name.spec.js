import { newSpecPage } from "@stencil/core/testing";
import { NylasPageName } from "../nylas-page-name";
import { InputComponent } from "../../../design-system/input-component/input-component";
import { h } from "@stencil/core";
describe('nylas-page-name', () => {
    it('renders', async () => {
        const page = await newSpecPage({
            components: [NylasPageName],
            html: '<nylas-page-name></nylas-page-name>',
        });
        await page.waitForChanges();
        expect(page.root).toMatchSnapshot();
    });
    it('should allow typing "&" in the input', async () => {
        const page = await newSpecPage({
            components: [NylasPageName, InputComponent],
            template: () => {
                return (h("nylas-page-name", null, h("input-component", { name: "page-name" })));
            },
        });
        await page.waitForChanges();
        expect(page.root).toMatchSnapshot();
        const inputComponent = page?.root?.shadowRoot?.querySelector('input-component');
        const input = inputComponent?.shadowRoot?.querySelector('input');
        expect(input).not.toBeNull();
        const dispatchEvent = (element, eventType, value) => {
            const event = new Event(eventType, {
                bubbles: true,
                cancelable: true,
            });
            Object.defineProperty(event, 'target', { value: element, enumerable: true });
            element.value = value;
            element.dispatchEvent(event);
        };
        dispatchEvent(input, 'input', 'Test & Test');
        expect(input.value).toBe('Test & Test');
    });
});
//# sourceMappingURL=nylas-page-name.spec.js.map
