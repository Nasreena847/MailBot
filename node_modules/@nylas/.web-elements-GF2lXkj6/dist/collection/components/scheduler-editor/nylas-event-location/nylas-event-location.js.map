{"version":3,"file":"nylas-event-location.js","sourceRoot":"","sources":["../../../../src/components/scheduler-editor/nylas-event-location/nylas-event-location.tsx"],"names":[],"mappings":"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","sourcesContent":["import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug, sanitize } from '@/utils/utils';\nimport { AttachInternals, Component, Host, State, h, Element, Prop, Watch, Event, EventEmitter, Listen } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport { Conference, Configuration } from '@nylas/core';\nimport { CONFERENCE_PROVIDER_MAP, PROVIDER_CONFERENCE_MAP } from '@/common/constants';\nimport { User } from '@/common/nylas-api-request';\n\n/**\n * The `nylas-event-location` component is a form input for the location of an event.\n *\n * @part nel - The event location container\n * @part nel__location - The event location input\n * @part nel__dropdown - The dropdown container\n * @part nel__dropdown-button - The dropdown button\n * @part nel__dropdown-content - The dropdown content\n */\n@Component({\n  tag: 'nylas-event-location',\n  styleUrl: 'nylas-event-location.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class NylasEventLocation {\n  /*\n   * The host element <nylas-event-location>\n   */\n  @Element() host!: HTMLElement;\n  /**\n   * The name of the event location input.\n   */\n  @Prop() name: string = 'location';\n\n  /**\n   * The current user\n   */\n  @Prop() currentUser?: User;\n  /**\n   * The users provider\n   */\n  @Prop() userProvider?: string;\n  /**\n   * The event conferencing stored in the configuration\n   */\n  @Prop() eventConferencing?: Conference;\n  /**\n   * The conference providers where the key is the provider name ('zoom') and the value is the grant id.\n   * We currently support same provider ('google', 'microsoft') for all participants and 'zoom' for cross-provider conferencing.\n   */\n  @Prop() conferenceProviders?: Record<string, string>;\n\n  /**\n   * The selected config\n   */\n  @Prop() selectedConfiguration?: Configuration;\n\n  /**\n   * The event location stored in the configuration\n   */\n  @Prop() eventLocation?: string;\n  /**\n   * The selected event location state. This defaults to the event location from the configuration or an empty string.\n   */\n  @State() location: string = this.eventLocation ?? '';\n  /**\n   * The grant id for the conferencing of non-default conferencing options.\n   */\n  @State() grantId: string = this.eventConferencing ? this.setDefaultGrantID(this.eventConferencing) : '';\n  /**\n   * The selected location option. This defaults to 'none'.\n   */\n  @State() selectedLocationOption: string = this.eventConferencing ? this.setDefaultLocationOption(this.eventConferencing, this.location) : '';\n  /**\n   * The current user provider state.\n   */\n  @State() userProviderState: string = this.userProvider ?? '';\n  /**\n   * The element internals.\n   */\n  @AttachInternals() internals!: ElementInternals;\n\n  /**\n   * When a name prop is passed, stencil does not automatically set the name attribute on the host element.\n   * Since this component is form-associated, the name attribute is required for form submission.\n   * This is a workaround to ensure that the name attribute is set on the host element.\n   */\n  @Watch('name')\n  elementNameChangedHandler(newValue: string) {\n    debug('nylas-event-location', 'elementNameChangedHandler', newValue);\n    this.host.setAttribute('name', newValue);\n  }\n\n  @Watch('selectedConfiguration')\n  selectedConfigurationChangedHandler(newValue: Configuration) {\n    debug('nylas-custom-booking-flow', 'selectedConfigurationChangedHandler', newValue);\n    const configLocation = newValue?.event_booking?.location;\n    const configConferencing = newValue?.event_booking?.conferencing;\n    if (configConferencing?.provider) {\n      this.selectedLocationOption = this.setDefaultLocationOption(configConferencing, configLocation ?? '');\n      this.grantId = this.setDefaultGrantID(configConferencing);\n      this.location = configLocation ? configLocation : '';\n    } else if (configLocation) {\n      this.selectedLocationOption = configLocation ? 'custom' : 'none';\n      this.location = configLocation;\n    } else {\n      this.selectedLocationOption = 'none';\n      this.location = '';\n    }\n  }\n\n  /**\n   * This event is fired when the value of the event location changes.\n   */\n  @Event() valueChanged!: EventEmitter<{\n    value: string;\n    name: string;\n  }>;\n\n  connectedCallback() {\n    debug('nylas-event-location', 'connectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('nylas-event-location', 'componentWillLoad');\n    this.host.setAttribute('name', this.name);\n  }\n\n  componentDidLoad() {\n    debug('nylas-event-location', 'componentDidLoad');\n    if (this.selectedConfiguration) {\n      this.selectedConfigurationChangedHandler(this.selectedConfiguration);\n    }\n    if (this.currentUser?.provider) {\n      this.userProviderState = this.currentUser.provider;\n    }\n  }\n\n  disconnectedCallback() {\n    debug('nylas-event-location', 'disconnectedCallback');\n  }\n\n  @Listen('nylasFormDropdownChanged')\n  nylasFormDropdownChangedHandler(event: CustomEvent<{ value: string }>) {\n    this.selectedLocationOption = event.detail.value;\n    let payload;\n    switch (this.selectedLocationOption) {\n      case 'none':\n        this.location = '';\n        this.setFormValue('', this.name);\n        this.valueChanged.emit({ value: '', name: this.name });\n        this.valueChanged.emit({ value: JSON.stringify({}), name: 'conference' });\n        break;\n      case 'custom':\n        this.valueChanged.emit({ value: JSON.stringify({}), name: 'conference' });\n        break;\n      case 'google':\n        this.location = '';\n        this.setFormValue('', this.name);\n        const googleConfGrantId = this.conferenceProviders?.['google'];\n        payload = {\n          provider: PROVIDER_CONFERENCE_MAP.google,\n          autocreate: googleConfGrantId\n            ? {\n                conf_grant_id: googleConfGrantId,\n              }\n            : {},\n        };\n        this.valueChanged.emit({ value: JSON.stringify(payload), name: 'conference' });\n        this.valueChanged.emit({ value: '', name: this.name });\n        break;\n      case 'microsoft':\n        this.location = '';\n        this.setFormValue('', this.name);\n        const microsoftConfGrantId = this.conferenceProviders?.['microsoft'];\n        payload = {\n          provider: PROVIDER_CONFERENCE_MAP.microsoft,\n          autocreate: microsoftConfGrantId\n            ? {\n                conf_grant_id: microsoftConfGrantId,\n              }\n            : {},\n        };\n        this.valueChanged.emit({ value: JSON.stringify(payload), name: 'conference' });\n        this.valueChanged.emit({ value: '', name: this.name });\n        break;\n      case 'zoom':\n        this.location = '';\n        this.setFormValue('', this.name);\n        const zoomConfGrantId = this.conferenceProviders?.['zoom'];\n        payload = {\n          provider: PROVIDER_CONFERENCE_MAP.zoom,\n          autocreate: zoomConfGrantId\n            ? {\n                conf_grant_id: zoomConfGrantId,\n              }\n            : {},\n        };\n        this.valueChanged.emit({ value: JSON.stringify(payload), name: 'conference' });\n        this.valueChanged.emit({ value: '', name: this.name });\n        break;\n    }\n  }\n\n  setDefaultLocationOption(eventConferencing: Conference, eventLocation: string) {\n    if (eventConferencing != null && eventConferencing?.provider != null && eventConferencing?.autocreate != null) {\n      return CONFERENCE_PROVIDER_MAP[eventConferencing?.provider];\n    }\n    return eventLocation ? 'custom' : 'none';\n  }\n  setDefaultGrantID(eventConferencing: Conference) {\n    if (eventConferencing != null && eventConferencing?.autocreate != null) {\n      return eventConferencing?.autocreate?.conf_grant_id;\n    }\n    return '';\n  }\n\n  setFormValue(value: string, name: string) {\n    if (typeof this.internals.setFormValue === 'function') {\n      this.internals.setFormValue(value, name);\n    }\n  }\n\n  handleChange(event) {\n    const value = sanitize(event.target.value);\n    this.location = value;\n    this.setFormValue(value, this.name);\n    this.valueChanged.emit({ value: value, name: this.name });\n  }\n\n  @RegisterComponent<NylasEventLocation, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-event-location',\n    stateToProps: new Map([\n      ['schedulerConfig.selectedConfiguration', 'selectedConfiguration'],\n      ['schedulerConfig.conferenceProviders', 'conferenceProviders'],\n      ['schedulerConfig.currentUser', 'currentUser'],\n    ]),\n    eventToProps: {},\n    fireRegisterEvent: true,\n  })\n  render() {\n    const locationOptions = [\n      { value: 'none', label: 'None' },\n      { value: 'custom', label: 'Custom location' },\n    ];\n    switch (this.userProviderState) {\n      case 'google':\n        locationOptions.push({ value: 'google', label: 'Google Meet' });\n        break;\n      case 'microsoft':\n        locationOptions.push({ value: 'microsoft', label: 'Microsoft Teams' });\n        break;\n    }\n\n    if (this.conferenceProviders?.['zoom']) {\n      locationOptions.push({ value: 'zoom', label: 'Zoom Meeting' });\n    }\n    const newLocationOptions = [...locationOptions];\n    const defaultOption = locationOptions.find(i => i.value == this.selectedLocationOption);\n\n    const icons = {\n      none: <location-off-icon />,\n      custom: <location-icon />,\n      google: <google-meet-icon />,\n      microsoft: <microsoft-teams-icon />,\n      zoom: <zoom-icon />,\n    };\n    const locationIcon = icons[this.selectedLocationOption];\n    return (\n      <Host>\n        <div class=\"nylas-event-location\" part=\"nel\">\n          <label htmlFor=\"location\">\n            Event meeting or location\n            <span class=\"label-icon\">\n              <tooltip-component>\n                <info-icon slot=\"tooltip-icon\" />\n                <span slot=\"tooltip-content\">Select a conferencing option or add a custom location.</span>\n              </tooltip-component>\n            </span>\n          </label>\n          <div class=\"location-input\">\n            {defaultOption?.label && (\n              <select-dropdown\n                withSearch={false}\n                name=\"location\"\n                options={newLocationOptions}\n                defaultSelectedOption={defaultOption}\n                exportparts=\"sd_dropdown: nel__dropdown, sd_dropdown-button: nel__dropdown-button, sd_dropdown-content: nel__dropdown-content\"\n              >\n                <span slot=\"select-icon\">{locationIcon}</span>\n              </select-dropdown>\n            )}\n            {this.selectedLocationOption === 'custom' && (\n              <input type=\"text\" part=\"nel__location\" id=\"location\" name=\"location\" maxlength=\"1024\" value={this.location} onInput={e => this.handleChange(e)} />\n            )}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}