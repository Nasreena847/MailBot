{"version":3,"file":"nylas-booking-form-config.js","sourceRoot":"","sources":["../../../../src/components/scheduler-editor/nylas-booking-form-config/nylas-booking-form-config.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;AAEhE,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACtC,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAgB,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAE9H,OAAO,EAAE,wBAAwB,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AAE3E,OAAO,QAAQ,MAAM,6CAA6C,CAAC;AAgCnE,MAAM,OAAO,sBAAsB;;;oBAYV,qBAAqB;;;;IA0B5C,yBAAyB,CAAC,QAAgB;QACxC,KAAK,CAAC,uBAAuB,EAAE,2BAA2B,EAAE,QAAQ,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED,iBAAiB;QACf,KAAK,CAAC,2BAA2B,EAAE,mBAAmB,CAAC,CAAC;IAC1D,CAAC;IAED,oBAAoB;QAClB,KAAK,CAAC,2BAA2B,EAAE,sBAAsB,CAAC,CAAC;IAC7D,CAAC;IAED,iBAAiB;QACf,KAAK,CAAC,2BAA2B,EAAE,mBAAmB,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,YAAY,GAAG;YACnB;gBACE,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,WAAW;gBAClB,GAAG,EAAE,WAAW;gBAChB,SAAS,EAAE,YAAY;gBACvB,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,KAAK;gBACb,KAAK,EAAE,CAAC;aACT;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,YAAY;gBACnB,GAAG,EAAE,YAAY;gBACjB,SAAS,EAAE,OAAO;gBAClB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,KAAK;gBACb,QAAQ,EAAE,IAAI;gBACd,KAAK,EAAE,CAAC;aACT;SACF,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC;IACtC,CAAC;IAED,gBAAgB;QACd,KAAK,CAAC,2BAA2B,EAAE,kBAAkB,CAAC,CAAC;QACvD,MAAM,gBAAgB,GACpB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,EAAE,SAAS,EAAE,iBAAiB,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAI,KAA0B,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;YAClJ,IAAI,CAAC,eAAe;YACpB,EAAE,CAAC;QACL,IAAI,CAAC,UAAU,GAAG;YAChB,GAAG,IAAI,CAAC,UAAU;YAClB,GAAG,gBAAgB;iBAChB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;iBACjC,GAAG,CAAC,CAAC,CAAmB,EAAE,CAAC,EAAE,EAAE;gBAC9B,MAAM,EAAE,SAAS,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;gBACvE,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;gBAChB,OAAO,EAAE,GAAG,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;YAC5C,CAAC,CAAC;SACL,CAAC;QAEF,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC;QACjE,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE;YACzB,SAAS,EAAE,GAAG;YACd,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,WAAW;YACtB,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;YACjC,MAAM,EAAE,QAAQ;YAChB,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC;SACxD,CAAC,CAAC;IACL,CAAC;IAGD,YAAY,CAAC,QAAoC;QAC/C,MAAM,gBAAgB,GAAG,QAAQ,CAAC;QAElC,MAAM,YAAY,GAAG,gBAAgB;aAClC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;aACxB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;aACjC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACZ,MAAM,KAAK,GAAqB;gBAC9B,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,QAAQ,EAAE,CAAC,CAAC,QAAQ;gBACpB,KAAK,EAAE,CAAC,CAAC,KAAK;gBACd,KAAK,EAAE,CAAC,GAAG,CAAC;gBACZ,OAAO,EAAE,CAAC,CAAC,OAAO;gBAClB,GAAG,EAAE,CAAC,CAAC,GAAG;aACX,CAAC;YACF,OAAO,EAAE,GAAG,KAAK,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEL,MAAM,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;YACtD,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG;gBACf,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,KAAK,EAAE,KAAK,CAAC,KAAK;gBAClB,OAAO,EAAE,KAAK,CAAC,OAAO;gBACtB,KAAK,EAAE,KAAK,CAAC,KAAK;aACnB,CAAC;YACF,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAAE,CAAC,CAAC;QACP,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACrB,KAAK,EAAE,YAAY;YACnB,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC,CAAC;IACL,CAAC;IAGD,+BAA+B,CAC7B,KAGE;QAEF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC;QACrC,IAAI,IAAI,KAAK,WAAW,EAAE,CAAC;YACzB,MAAM,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC;YACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAChE,MAAM,QAAQ,GAAG,EAAE,GAAG,KAAK,EAAE,KAAK,EAAE,QAAQ,GAAG,CAAC,EAAE,CAAC;YACnD,MAAM,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5F,IAAI,sBAAsB,IAAI,sBAAsB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAChE,MAAM,KAAK,GAAG,GAAG,KAAK,CAAC,KAAK,IAAI,sBAAsB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACpE,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;gBACvB,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACvC,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC;YACrB,CAAC;YACD,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACnD,CAAC;IACH,CAAC;IAGD,4BAA4B,CAAC,KAAmD;QAC9E,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC;QAC9B,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClD,IAAI,WAAW,EAAE,CAAC;YAChB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC;QAC7E,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,KAAK,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAED,UAAU,CAAC,KAAK;QACd,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;QACrC,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAC9E,MAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;gBAC5C,IAAI,CAAC,CAAC,KAAK,KAAK,QAAQ,EAAE,CAAC;oBACzB,OAAO;wBACL,GAAG,CAAC;wBACJ,KAAK,EAAE,QAAQ;qBAChB,CAAC;gBACJ,CAAC;gBACD,IAAI,CAAC,CAAC,KAAK,KAAK,QAAQ,EAAE,CAAC;oBACzB,OAAO;wBACL,GAAG,CAAC;wBACJ,KAAK,EAAE,QAAQ;qBAChB,CAAC;gBACJ,CAAC;gBACD,OAAO,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC7B,CAAC;IACH,CAAC;IAED,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC;gBACf,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;YACvB,CAAC;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IACD,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC;gBAChB,KAAK,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;YACnC,CAAC;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gBAAgB,CAAC,KAAK,EAAE,KAAK;QAC3B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC;gBAChB,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC7B,CAAC;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IACD,cAAc,CAAC,KAAK;QAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC;gBAChB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;oBACnB,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;gBACrB,CAAC;gBACD,KAAK,CAAC,OAAO,GAAG,CAAC,GAAG,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YACzC,CAAC;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,UAAU,EAAE,KAAK;QACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,CAAC,KAAK,UAAU,EAAE,CAAC;gBACrB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;oBACnB,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;gBACrB,CAAC;gBACD,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;YAC9D,CAAC;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iBAAiB,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK;QACxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,CAAC,KAAK,UAAU,EAAE,CAAC;gBACrB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;oBACnB,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;gBACrB,CAAC;gBACD,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBACzC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC;wBAChB,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;oBACzB,CAAC;oBACD,OAAO,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;YACL,CAAC;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAOD,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,4DAAK,KAAK,EAAC,2BAA2B;gBACpC,4DAAK,KAAK,EAAC,QAAQ,EAAC,IAAI,EAAC,cAAc;oBACrC,4DAAK,KAAK,EAAC,aAAa;wBACtB,4EAAqB;wBACrB,qGAA6C,CACzC;oBACN,4DAAK,KAAK,EAAC,eAAe;wBACxB,wEACE,IAAI,EAAC,WAAW,EAChB,WAAW,EAAC,iIAAiI,EAC7I,OAAO,EAAE,wBAAwB,EACjC,UAAU,EAAE,KAAK,EACjB,WAAW,EAAE,KAAK,EAClB,kBAAkB,EAAC,eAAe;4BAElC,6DAAM,IAAI,EAAC,aAAa;gCACtB,kEAAW,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,GAAa,CACzC,CACS,CACd,CACF;gBACN,4DAAK,KAAK,EAAC,SAAS;oBAClB,4DAAK,EAAE,EAAC,QAAQ,EAAC,KAAK,EAAC,mBAAmB,EAAC,IAAI,EAAC,yBAAyB,IACtE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;wBAChC,OAAO,CACL,WAAK,KAAK,EAAE,wBAAwB,KAAK,CAAC,QAAQ,IAAI,OAAO,EAAE,EAAE,IAAI,EAAC,kBAAkB,EAAC,GAAG,EAAE,CAAC;4BAC7F,WAAK,KAAK,EAAC,mBAAmB,EAAC,IAAI,EAAC,yBAAyB;gCAC3D,YAAM,KAAK,EAAC,UAAU;oCACpB,qBAAe,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,GAAiB,CACjD;gCACP,WAAK,KAAK,EAAC,wBAAwB;oCACjC,cAAK,KAAK,CAAC,KAAK,CAAM;oCACtB,aAAI,KAAK,CAAC,SAAS,CAAK,CACpB;gCACN,WAAK,KAAK,EAAC,2BAA2B;oCACpC,YAAM,KAAK,EAAE,aAAa,IAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAQ;oCAC5E,CAAC,KAAK,CAAC,QAAQ,IAAI,CAClB,cACE,OAAO,EAAE,GAAG,EAAE;4CACZ,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wCACtB,CAAC;wCAED,qBAAc,CACP,CACV;oCACD,YACE,KAAK,EAAE,WAAW,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,EACpD,OAAO,EAAE,GAAG,EAAE;4CACZ,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wCACtB,CAAC;wCAED,oBAAc,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,GAAG,CAClC,CACH,CACF;4BACN,WAAK,KAAK,EAAE,sBAAsB,CAAC,KAAK,CAAC,MAAM,IAAI,QAAQ,EAAE,EAAE,IAAI,EAAC,0BAA0B;gCAC5F,WAAK,KAAK,EAAC,QAAQ;oCACjB,uBAAiB,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAC,OAAO,EAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAK,CAAC,KAAK;wCAC7I,WAAK,KAAK,EAAC,gBAAgB,EAAC,IAAI,EAAC,kBAAkB;4CACjD,aACE,IAAI,EAAC,UAAU,EACf,IAAI,EAAE,YAAY,KAAK,CAAC,KAAK,EAAE,EAC/B,EAAE,EAAE,YAAY,KAAK,CAAC,KAAK,EAAE,EAC7B,OAAO,EAAE,GAAG,EAAE;oDACZ,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gDACxB,CAAC,EACD,OAAO,EAAE,KAAK,CAAC,QAAQ,EACvB,QAAQ,EAAE,KAAK,CAAC,QAAQ,GACxB;4CAEF,aAAO,OAAO,EAAE,YAAY,KAAK,CAAC,KAAK,EAAE,gBAAa,UAAU,eAExD,CACJ,CACU,CACd;gCACL,KAAK,CAAC,OAAO,IAAI,SAAS,IAAI,CAC7B,WAAK,KAAK,EAAC,mBAAmB;oCAC5B,4BAAoB;oCACpB,WAAK,KAAK,EAAC,SAAS,IACjB,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;wCAC1B,OAAO,CACL,WAAK,KAAK,EAAC,QAAQ;4CACjB,uBAAiB,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,GAAG,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,IACvH,CAAC,GAAG,CAAC,IAAI,CACR,WAAK,KAAK,EAAC,gBAAgB,EAAC,IAAI,EAAC,kBAAkB;gDACjD,cACE,OAAO,EAAE,GAAG,EAAE;wDACZ,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oDAC/B,CAAC;oDAED,qBAAc,CACP,CACL,CACP,CACe,CACd,CACP,CAAC;oCACJ,CAAC,CAAC,CACE;oCACN,cACE,OAAO,EAAE,GAAG,EAAE;4CACZ,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;wCACzB,CAAC,EACD,IAAI,EAAC,qBAAqB;wCAE1B,0BAAmB;yDACZ,CACL,CACP,CACG,CACF,CACP,CAAC;oBACJ,CAAC,CAAC,CACE,CACF,CACF,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF;AA3HC;IALC,iBAAiB,CAA4G;QAC5H,IAAI,EAAE,2BAA2B;QACjC,YAAY,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,uCAAuC,EAAE,uBAAuB,CAAC,CAAC,CAAC;QAC3F,iBAAiB,EAAE,IAAI;KACxB,CAAC;;;;oDA2HD","sourcesContent":["import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug } from '@/utils/utils';\nimport { AttachInternals, Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport { DEFAULT_FORM_FIELD_TYPES, FIELD_TYPES } from '@/common/constants';\nimport { Configuration } from '@nylas/core';\nimport Sortable from 'sortablejs/modular/sortable.complete.esm.js';\n\ninterface AdditionalFields {\n  type: string;\n  required: boolean;\n  label: string;\n  order: number;\n  options?: string[];\n  key: string;\n}\ninterface AdditionalFieldsInternal extends AdditionalFields {\n  isOpen: boolean;\n  readonly?: boolean;\n  typeLabel: string;\n}\n/**\n * The `nylas-booking-form-config` component is a form input for adding additional fields to the booking form.\n * @part nbfc__header - The header of the booking form\n * @part nbfc__add_field - The add field selection container\n * @part nbfc__add_field-button - The add field  selection button\n * @part nbfc__add_field-content - The add field  selection dropdown content\n * @part nbfc__additional_fields - The aditional fields container\n * @part nbfc__form-field - The single form container\n * @part nbfc__form-field-header - The single form header\n * @part nbfc__form-field-content - The single form content\n */\n@Component({\n  tag: 'nylas-booking-form-config',\n  styleUrl: 'nylas-booking-form-config.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class NylasBookingFormConfig {\n  /**\n   * The element <nylas-booking-form-config> itself.\n   */\n  @Element() host!: HTMLNylasBookingFormConfigElement;\n  /**\n   * The selected configuration.\n   */\n  @Prop() selectedConfiguration?: Configuration;\n  /**\n   * The name of the booking form config.\n   */\n  @Prop() name: string = 'booking-form-config';\n\n  /**\n   * The additional fields to be displayed on the booking form.\n   */\n  @Prop() additonalFields?: AdditionalFields[];\n  /**\n   * This event is fired when the selected availability / open hours change.\n   */\n  @Event() valueChanged!: EventEmitter<{\n    value: Record<string, AdditionalFields>;\n    name: string;\n  }>;\n\n  /**\n   * The element internals.\n   */\n  @AttachInternals() internals!: ElementInternals;\n\n  @State() formFields!: AdditionalFieldsInternal[];\n  /**\n   * When a name prop is passed, stencil does not automatically set the name attribute on the host element.\n   * Since this component is form-associated, the name attribute is required for form submission.\n   * This is a workaround to ensure that the name attribute is set on the host element.\n   */\n  @Watch('name')\n  elementNameChangedHandler(newValue: string) {\n    debug('nylas-calendar-picker', 'elementNameChangedHandler', newValue);\n    this.host.setAttribute('name', newValue);\n  }\n\n  connectedCallback() {\n    debug('nylas-booking-form-config', 'connectedCallback');\n  }\n\n  disconnectedCallback() {\n    debug('nylas-booking-form-config', 'disconnectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('nylas-booking-form-config', 'componentWillLoad');\n    this.host.setAttribute('name', this.name);\n    const staticFields = [\n      {\n        type: 'text',\n        label: 'Your name',\n        key: 'your_name',\n        typeLabel: 'Short text',\n        readonly: true,\n        required: true,\n        isOpen: false,\n        order: 0,\n      },\n      {\n        type: 'email',\n        label: 'Your Email',\n        key: 'your_email',\n        typeLabel: 'Email',\n        readonly: true,\n        isOpen: false,\n        required: true,\n        order: 1,\n      },\n    ];\n    this.formFields = [...staticFields];\n  }\n\n  componentDidLoad() {\n    debug('nylas-booking-form-config', 'componentDidLoad');\n    const additionalFields =\n      Object.entries(this.selectedConfiguration?.scheduler?.additional_fields || {}).map(([id, field]) => ({ ...(field as AdditionalFields), key: id })) ||\n      this.additonalFields ||\n      [];\n    this.formFields = [\n      ...this.formFields,\n      ...additionalFields\n        .sort((a, b) => a.order - b.order)\n        .map((f: AdditionalFields, i) => {\n          const { typeLabel } = FIELD_TYPES.find(field => field.type === f.type);\n          f.order = i + 2;\n          return { ...f, isOpen: false, typeLabel };\n        }),\n    ];\n\n    const container = this.host.shadowRoot?.getElementById('fields');\n    Sortable.create(container, {\n      animation: 150,\n      swap: true, // Enable swap plugin\n      swapClass: 'highlight', // The class applied to the hovered swap item\n      onEnd: this.swapFields.bind(this),\n      filter: '.fixed', // Disable dragging for elements with the 'fixed' class\n      onMove: evt => !evt.related.classList.contains('fixed'), // Prevent moving if target has 'fixed' class\n    });\n  }\n\n  @Watch('formFields')\n  watchHandler(newValue: AdditionalFieldsInternal[]) {\n    const additionalFields = newValue;\n    // Remove readonly fields, sort by order\n    const sortedFields = additionalFields\n      .filter(f => !f.readonly)\n      .sort((a, b) => a.order - b.order)\n      .map((f, i) => {\n        const field: AdditionalFields = {\n          type: f.type,\n          required: f.required,\n          label: f.label,\n          order: i + 1,\n          options: f.options,\n          key: f.key,\n        };\n        return { ...field };\n      });\n    // Map fields to object\n    const addFieldsMap = sortedFields.reduce((acc, field) => {\n      acc[field.key] = {\n        type: field.type,\n        required: field.required,\n        order: field.order,\n        options: field.options,\n        label: field.label,\n      };\n      return acc;\n    }, {});\n    this.valueChanged.emit({\n      value: addFieldsMap,\n      name: this.name,\n    });\n  }\n\n  @Listen('nylasFormDropdownChanged')\n  nylasFormDropdownChangedHandler(\n    event: CustomEvent<{\n      value: string;\n      name: string;\n    }>,\n  ) {\n    const { name, value } = event.detail;\n    if (name === 'add-field') {\n      const field = FIELD_TYPES.find(f => f.type === value);\n      const maxOrder = Math.max(...this.formFields.map(f => f.order));\n      const newField = { ...field, order: maxOrder + 1 }; // Copy object + Ensure unique order\n      const existingFieldWithLabel = this.formFields.filter(f => f.label.startsWith(field.label));\n      if (existingFieldWithLabel && existingFieldWithLabel.length > 0) {\n        const label = `${field.label} ${existingFieldWithLabel.length + 1}`;\n        newField.label = label;\n        const key = label.split(' ').join('_');\n        newField.key = key;\n      }\n      this.formFields = [...this.formFields, newField];\n    }\n  }\n\n  @Listen('nylasFormInputChanged')\n  nylasFormInputChangedHandler(event: CustomEvent<{ value: string; name: string }>) {\n    const { name } = event.detail;\n    const [fieldIndex, optionIndex] = name.split('_');\n    if (optionIndex) {\n      this.fieldOptionChange(parseInt(fieldIndex), parseInt(optionIndex), event);\n    } else {\n      this.fieldLabelChange(parseInt(fieldIndex), event);\n    }\n  }\n\n  swapFields(event) {\n    const { oldIndex, newIndex } = event;\n    if (oldIndex !== undefined && newIndex !== undefined && oldIndex !== newIndex) {\n      const newArray = [...this.formFields].map(f => {\n        if (f.order === oldIndex) {\n          return {\n            ...f,\n            order: newIndex,\n          };\n        }\n        if (f.order === newIndex) {\n          return {\n            ...f,\n            order: oldIndex,\n          };\n        }\n        return f;\n      });\n      this.formFields = newArray;\n    }\n  }\n\n  fieldToggle(index) {\n    this.formFields = this.formFields.map((f, i) => {\n      if (index == i) {\n        f.isOpen = !f.isOpen;\n      }\n      return f;\n    });\n  }\n  fieldRemove(index) {\n    this.formFields = this.formFields.filter((_, i) => i !== index);\n  }\n\n  fieldRequired(index) {\n    this.formFields = this.formFields.map((field, i) => {\n      if (i === index) {\n        field.required = !field.required;\n      }\n      return field;\n    });\n  }\n  fieldLabelChange(index, event) {\n    const target = event.detail;\n    this.formFields = this.formFields.map((field, i) => {\n      if (i === index) {\n        field.label = target.value;\n      }\n      return field;\n    });\n  }\n  fieldOptionAdd(index) {\n    this.formFields = this.formFields.map((field, i) => {\n      if (i === index) {\n        if (!field.options) {\n          field.options = [];\n        }\n        field.options = [...field.options, ''];\n      }\n      return field;\n    });\n  }\n\n  fieldOptionRemove(fieldIndex, index) {\n    this.formFields = this.formFields.map((field, i) => {\n      if (i === fieldIndex) {\n        if (!field.options) {\n          field.options = [];\n        }\n        field.options = field.options.filter((_, i) => i !== index);\n      }\n      return field;\n    });\n  }\n  fieldOptionChange(fieldIndex, index, event) {\n    this.formFields = this.formFields.map((field, i) => {\n      if (i === fieldIndex) {\n        if (!field.options) {\n          field.options = [];\n        }\n        field.options = field.options.map((o, i) => {\n          if (i === index) {\n            o = event.detail.value;\n          }\n          return o;\n        });\n      }\n      return field;\n    });\n  }\n\n  @RegisterComponent<NylasBookingFormConfig, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-booking-form-config',\n    stateToProps: new Map([['schedulerConfig.selectedConfiguration', 'selectedConfiguration']]),\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host>\n        <div class=\"nylas-booking-form-config\">\n          <div class=\"header\" part=\"nbfc__header\">\n            <div class=\"header_text\">\n              <h3>Booking form</h3>\n              <p>Add custom fields to the booking form.</p>\n            </div>\n            <div class=\"header_action\">\n              <select-dropdown\n                name=\"add-field\"\n                exportparts=\"sd_dropdown: nbfc__add_field, sd_dropdown-button: nbfc__add_field-button, sd_dropdown-content: nbfc__add_field-dropdown-content\"\n                options={DEFAULT_FORM_FIELD_TYPES}\n                withSearch={false}\n                withChevron={false}\n                dropdownButtonText=\"Add new field\"\n              >\n                <span slot=\"select-icon\">\n                  <plus-icon width=\"15\" height=\"15\"></plus-icon>\n                </span>\n              </select-dropdown>\n            </div>\n          </div>\n          <div class=\"content\">\n            <div id=\"fields\" class=\"additional_fields\" part=\"nbfc__additional_fields\">\n              {this.formFields.map((field, i) => {\n                return (\n                  <div class={`form-field draggable ${field.readonly && 'fixed'}`} part=\"nbfc__form_field\" key={i}>\n                    <div class=\"form-field_header\" part=\"nbfc__form_field-header\">\n                      <span class=\"dragable\">\n                        <dragable-icon width=\"24\" height=\"25\"></dragable-icon>\n                      </span>\n                      <div class=\"form-field_header_text\">\n                        <h4>{field.label}</h4>\n                        <p>{field.typeLabel}</p>\n                      </div>\n                      <div class=\"form-field_header_actions\">\n                        <span class={`is-required`}>{field.required ? 'Required' : 'Optional'}</span>\n                        {!field.readonly && (\n                          <button\n                            onClick={() => {\n                              this.fieldRemove(i);\n                            }}\n                          >\n                            <close-icon />\n                          </button>\n                        )}\n                        <span\n                          class={`chevron ${field.isOpen ? 'open' : 'closed'}`}\n                          onClick={() => {\n                            this.fieldToggle(i);\n                          }}\n                        >\n                          <chevron-icon width=\"24\" height=\"24\" />\n                        </span>\n                      </div>\n                    </div>\n                    <div class={`form-field_content ${!field.isOpen && 'hidden'}`} part=\"nbfc__form_field-content\">\n                      <div class=\"inputs\">\n                        <input-component class={'label-input'} name={`${i}`} key={i} label=\"Label\" required={false} readOnly={field.readonly} defaultValue={field.label}>\n                          <div class=\"required-input\" slot=\"additional-input\">\n                            <input\n                              type=\"checkbox\"\n                              name={`required_${field.order}`}\n                              id={`required_${field.order}`}\n                              onClick={() => {\n                                this.fieldRequired(i);\n                              }}\n                              checked={field.required}\n                              disabled={field.readonly}\n                            />\n\n                            <label htmlFor={`required_${field.order}`} aria-label=\"Required\">\n                              Required\n                            </label>\n                          </div>\n                        </input-component>\n                      </div>\n                      {field.options != undefined && (\n                        <div class=\"options-container\">\n                          <h4>ALL OPTIONS</h4>\n                          <div class=\"options\">\n                            {field.options.map((o, j) => {\n                              return (\n                                <div class=\"option\">\n                                  <input-component key={j} name={`${i}_${j}`} label={field.typeLabel + ' option ' + (j + 1)} required={true} defaultValue={o}>\n                                    {j > 1 && (\n                                      <div class=\"required-input\" slot=\"additional-input\">\n                                        <button\n                                          onClick={() => {\n                                            this.fieldOptionRemove(i, j);\n                                          }}\n                                        >\n                                          <close-icon />\n                                        </button>\n                                      </div>\n                                    )}\n                                  </input-component>\n                                </div>\n                              );\n                            })}\n                          </div>\n                          <button\n                            onClick={() => {\n                              this.fieldOptionAdd(i);\n                            }}\n                            part=\"nap__add-time-range\"\n                          >\n                            <add-circle-icon /> Add an option\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}