{"version":3,"file":"nylas-form-card.js","sourceRoot":"","sources":["../../../../src/components/scheduler-editor/nylas-form-card/nylas-form-card.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;AAEhE,OAAO,EAAE,oBAAoB,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC5D,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAY7E,MAAM,OAAO,aAAa;IAIxB,iBAAiB;QACf,KAAK,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;IACjD,CAAC;IAED,iBAAiB;QACf,KAAK,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;IACjD,CAAC;IAED,gBAAgB;QACd,KAAK,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,CAAC;IAChD,CAAC;IAED,oBAAoB;QAClB,KAAK,CAAC,kBAAkB,EAAE,sBAAsB,CAAC,CAAC;QAClD,MAAM,KAAK,GAAG,CAAC,cAAc,EAAE,iBAAiB,EAAE,SAAS,CAAC,CAAC;QAC7D,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAOD,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,4DAAK,KAAK,EAAC,iBAAiB,EAAC,IAAI,EAAC,KAAK;gBACrC,4DAAK,KAAK,EAAC,yBAAyB,EAAC,IAAI,EAAC,aAAa;oBACrD,6DAAM,IAAI,EAAC,cAAc,GAAQ;oBACjC,6DAAM,IAAI,EAAC,iBAAiB,GAAQ,CAChC;gBACN,4DAAK,KAAK,EAAC,0BAA0B;oBACnC,6DAAM,IAAI,EAAC,SAAS,GAAQ,CACxB,CACF,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;CACF;AAfC;IALC,iBAAiB,CAAmG;QACnH,IAAI,EAAE,iBAAiB;QACvB,YAAY,EAAE,EAAE;QAChB,iBAAiB,EAAE,IAAI;KACxB,CAAC;;;;2CAeD","sourcesContent":["import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { checkForMissingSlots, debug } from '@/utils/utils';\nimport { AttachInternals, Component, Element, Host, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\n\n/**\n * The `nylas-form-card` component is a card that can be used to display a form. It is a simple wrapper around a card with a header and content area.\n */\n@Component({\n  tag: 'nylas-form-card',\n  styleUrl: 'nylas-form-card.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class NylasFormCard {\n  @Element() host!: HTMLElement;\n  @AttachInternals() internals!: ElementInternals;\n\n  connectedCallback() {\n    debug('nylas-event-card', 'connectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('nylas-event-card', 'componentWillLoad');\n  }\n\n  componentDidLoad() {\n    debug('nylas-event-card', 'componentDidLoad');\n  }\n\n  disconnectedCallback() {\n    debug('nylas-event-card', 'disconnectedCallback');\n    const slots = ['header-title', 'header-subtitle', 'content'];\n    checkForMissingSlots(slots, this.host);\n  }\n\n  @RegisterComponent<NylasFormCard, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-form-card',\n    eventToProps: {},\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host>\n        <div class=\"nylas-form-card\" part=\"nfc\">\n          <div class=\"nylas-form-card__header\" part=\"nfc__header\">\n            <slot name=\"header-title\"></slot>\n            <slot name=\"header-subtitle\"></slot>\n          </div>\n          <div class=\"nylas-form-card__content\">\n            <slot name=\"content\"></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}