{"version":3,"file":"nylas-editor-tabs.js","sourceRoot":"","sources":["../../../../src/components/scheduler-editor/nylas-editor-tabs/nylas-editor-tabs.tsx"],"names":[],"mappings":"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","sourcesContent":["import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug, mergeDeep, parsePreviewLink } from '@/utils/utils';\nimport { AdditionalFields, Appearance, AvailabilityMethod, BookingType, Calendar, Conference, Configuration, EmailTemplate, OpenHours, Participant, Reminders } from '@nylas/core';\nimport { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport TabContents, { Tab } from './tab-contents';\nimport { User } from '@/common/nylas-api-request';\nimport { DEFAULT_OPEN_HOURS } from '@/common/constants';\nimport { DataResponseReturnType } from '@/common/types';\n\ntype SchedulerEventDetail = {\n  config: Partial<Configuration>;\n  action: 'create' | 'edit';\n  resetLoadingState?: (e: CustomEvent) => void;\n  setError?: (error: Error) => void;\n};\n\n/**\n * The `nylas-editor-tabs` component is a UI component that displays the editor tabs for the scheduler editor.\n * @part nap__title - [nylas-additional-participants] The title of the component.\n * @part nap__subtitle - [nylas-additional-participants] The subtitle of the component.\n * @part nap__content - [nylas-additional-participants] The content of the component.\n * @part nap__input - [nylas-additional-participants] The input of the component.\n * @part nap__remove-participant - [nylas-additional-participants] The remove participant button of the component.\n * @part nap__add-participant - [nylas-additional-participants] The add participant button of the component.\n * @part nap__header - [nylas-availability-picker] The header of the availability picker\n * @part nap__select-timezone - [nylas-availability-picker] The timezone selection container\n * @part nap__select-timezone-button -[nylas-availability-picker]  The timezone selection button\n * @part nap__select-timezone-dropdown-content -[nylas-availability-picker] The timezone selection dropdown content\n * @part nap__availability - [nylas-availability-picker] The availability container\n * @part nap__day - [nylas-availability-picker] The day container\n * @part nap__time-ranges - [nylas-availability-picker] The time ranges container\n * @part nap__time-range - [nylas-availability-picker] The time range container\n * @part nap__add-time-range - [nylas-availability-picker] The add time range button\n * @part nap__time-picker-container -[nylas-availability-picker]  The time picker container\n * @part nap__time-picker-input - [nylas-availability-picker]  The time picker input\n * @part nap__time-picker-times - [nylas-availability-picker] The time picker times\n * @part nbcp - [nylas-booking-calendar-picker] The booking calendar picker container\n * @part nbcp__header - [nylas-booking-calendar-picker] The header of the booking calendar picker\n * @part nbcp__input-label - [nylas-booking-calendar-picker] The input label of the booking calendar picker\n * @part nbcp__dropdown - [nylas-booking-calendar-picker] The dropdown container\n * @part nbcp__dropdown-button - [nylas-booking-calendar-picker] The dropdown button\n * @part nbcp__dropdown-content - [nylas-booking-calendar-picker] The dropdown content\n * @part nbt - [nylas-buffer-time] The buffer time container\n * @part nbt__header - [nylas-buffer-time] The header of the buffer time\n * @part nbt__body - [nylas-buffer-time] The body of the buffer time\n * @part nbt__dropdown-before - [nylas-buffer-time] The before buffer dropdown container\n * @part nbt__dropdown-button-before - [nylas-buffer-time] The before buffer dropdown button\n * @part nbt__dropdown-content-before - [nylas-buffer-time] The before buffer dropdown content\n * @part nbt__dropdown-after - [nylas-buffer-time] The after buffer dropdown container\n * @part nbt__dropdown-button-after - [nylas-buffer-time] The after buffer dropdown button\n * @part nbt__dropdown-content-after - [nylas-buffer-time] The after buffer dropdown content\n * @part nbt__preview - [nylas-buffer-time] The buffer time preview\n * @part ncp - [nylas-calendar-picker] The calendar picker container\n * @part ncp__header - [nylas-calendar-picker] The header of the calendar picker\n * @part ncp__dropdown - [nylas-calendar-picker] The dropdown container\n * @part ncp__dropdown-button - [nylas-calendar-picker] The dropdown button\n * @part ncp__dropdown-content - [nylas-calendar-picker] The dropdown content\n * @part ncbf - [nylas-custom-booking-flow] The custom booking flow container\n * @part ncbf__header - [nylas-custom-booking-flow] The header of the custom booking flow\n * @part ncbf__dropdown - [nylas-custom-booking-flow] The dropdown container\n * @part ncbf__dropdown-button - [nylas-custom-booking-flow] The dropdown button\n * @part ncbf__dropdown-content - [nylas-custom-booking-flow] The dropdown content\n * @part nedesc - [nylas-event-description] The event description container\n * @part nedesc__textarea - [nylas-event-description] The event description textarea\n * @part ned - [nylas-event-duration] The event duration container\n * @part ned__dropdown - [nylas-event-duration] The dropdown container for the duration increment\n * @part ned__dropdown-button - [nylas-event-duration] The dropdown button for the duration increment\n * @part ned__dropdown-content - [nylas-event-duration] The dropdown content for the duration increment\n * @part ned__input_dropdown - [nylas-event-duration] The input dropdown container for the duration minutes\n * @part ned__input_dropdown-input - [nylas-event-duration] The input for the duration minutes\n * @part ned__input_dropdown-content - [nylas-event-duration] The dropdown content for the input duration minutes\n * @part net - [nylas-event-title] The event title container\n * @part net__title - [nylas-event-title] The event title input\n * @part net__dropdown-content - [nylas-event-title] The token options container\n * @part nlfb - [nylas-limit-future-bookings] The limit future bookings container\n * @part nlfb__number-dropdown - [nylas-limit-future-bookings] The number dropdown container\n * @part nlfb__number-dropdown-button - [nylas-limit-future-bookings] The number dropdown button\n * @part nlfb__number-dropdown-content - [nylas-limit-future-bookings] The number dropdown content\n * @part nlfb__period-dropdown - [nylas-limit-future-bookings] The period dropdown container\n * @part nlfb__period-dropdown-button - [nylas-limit-future-bookings] The period dropdown button\n * @part nlfb__period-dropdown-content - [nylas-limit-future-bookings] The period dropdown content\n * @part nel - [nylas-event-location] The event location container\n * @part nel__location - [nylas-event-location] The event location input\n * @part nel__dropdown - [nylas-event-location] The dropdown container\n * @part nel__dropdown-button - [nylas-event-location] The dropdown button\n * @part nel__dropdown-content - [nylas-event-location] The dropdown content\n * @part nmbn - [nylas-min-booking-notice] The minimum booking notice container\n * @part nmbn__number-dropdown - [nylas-min-booking-notice] The number dropdown container\n * @part nmbn__number-dropdown-button - [nylas-min-booking-notice] The number dropdown button\n * @part nmbn__number-dropdown-content -[nylas-min-booking-notice] The number dropdown content\n * @part nmbn__period-dropdown - [nylas-min-booking-notice] The period dropdown container\n * @part nmbn__period-dropdown-button - [nylas-min-booking-notice] The period dropdown button\n * @part nmbn__period-dropdown-content - [nylas-min-booking-notice] The period dropdown content\n * @part nmcn - [nylas-min-cancellation-notice] The minimum cancellation notice container\n * @part nmcn__number-dropdown - [nylas-min-cancellation-notice] The number dropdown container\n * @part nmcn__number-dropdown-button - [nylas-min-cancellation-notice] The number dropdown button\n * @part nmcn__number-dropdown-content - [nylas-min-cancellation-notice] The number dropdown content\n * @part nmcn__period-dropdown - [nylas-min-cancellation-notice] The period dropdown container\n * @part nmcn__period-dropdown-button - [nylas-min-cancellation-notice] The period dropdown button\n * @part nmcn__period-dropdown-content - [nylas-min-cancellation-notice] The period dropdown content\n * @part ncpolicy - [nylas-cancellation-policy] The cancellation policy container\n * @part ncpolicy__textarea - [nylas-cancellation-policy] The cancellation policy textarea\n * @part nti - [nylas-timeslot-interval] The timeslot interval container\n * @part nti__header - [nylas-timeslot-interval] The header of the timeslot interval picker\n * @part nti__input-label - [nylas-timeslot-interval] The input label of the timeslot interval picker\n * @part nti__dropdown - [nylas-timeslot-interval] The dropdown container\n * @part nti__dropdown-button - [nylas-timeslot-interval] The dropdown button\n * @part nti__dropdown-content - [nylas-timeslot-interval] The dropdown content\n * @part npca - [nylas-participants-custom-availability] The participants custom availability container\n * @part npca__header - [nylas-participants-custom-availability] The header of the participants custom availability\n * @part npca__content - [nylas-participants-custom-availability] The content of the participants custom availability\n * @part npca__participant-container - [nylas-participants-custom-availability] The participant container\n * @part npca__participant-title - [nylas-participants-custom-availability] The participant title\n * @part npca__participant-toggle--container - [nylas-participants-custom-availability] The participant toggle container\n * @part npca__toggle-label - [nylas-participants-custom-availability] The toggle label\n * @part npca__toggle-input - [nylas-participants-custom-availability] The toggle input\n * @part npca__toggle-slider - [nylas-participants-custom-availability] The toggle slider\n * @part ncbs - [nylas-customize-booking-settings] The booking calendar picker container\n * @part ncbs__header - [nylas-customize-booking-settings] The header of the booking calendar picker\n * @part ncbs__settings - [nylas-customize-booking-settings] The settings container\n * @part ncbs__settings-div - [nylas-customize-booking-settings] The div inside the settings container that contains the checkbox and tooltip for each setting\n * @part ncbs__additional_guests - [nylas-customize-booking-settings] The additional guests setting\n * @part ncbs__cancellation_options - [nylas-customize-booking-settings] The cancellation options setting\n * @part ncbs__rescheduling_options - [nylas-customize-booking-settings] The rescheduling options setting\n * @part nsm - [nylas-scheduling-method] The booking calendar picker container\n * @part nsm__header - [nylas-scheduling-method] The header of the booking calendar picker\n * @part nsm__input-label - [nylas-scheduling-method] The input label of the booking calendar picker\n * @part nsm__dropdown - [nylas-scheduling-method] The dropdown container\n * @part nsm__dropdown-button - [nylas-scheduling-method] The dropdown button\n * @part nsm__dropdown-content - [nylas-scheduling-method] The dropdown content\n * @part npn - The nylas-page-name container\n * @part npn__body - The body of the event communication section\n * @part npn__header - The header of the event communication section\n * @part npn__drawer-toggle--container - The card's drawer toggle container\n * @part npn__input-textfield - The page name textfield\n */\n@Component({\n  tag: 'nylas-editor-tabs',\n  styleUrl: 'nylas-editor-tabs.scss',\n  scoped: true,\n})\nexport class NylasEditorTabs {\n  /**\n   * The form reference to access the form data.\n   */\n  private formRef!: HTMLFormElement;\n  /**\n   * The host element.\n   */\n  @Element() host!: HTMLNylasEditorTabsElement;\n  /**\n   * The list of calendars to use in the editor when configuring availability.\n   */\n  @Prop() calendars?: Calendar[];\n  /**\n   * The selected configuration to use in the editor when editing an existing configuration or creating a new one.\n   */\n  @Prop() selectedConfiguration?: Configuration;\n\n  /**\n   * The current logged in user.\n   */\n  @Prop() currentUser?: User;\n  /**\n   * The scheduler preview link to use when the user clicks on the preview button.\n   * You can use a placeholder `{config.id}` to replace the configuration id anywhere in the link.\n   */\n  @Prop({ attribute: 'scheduler-preview-link' }) schedulerPreviewLink: string = '';\n  /**\n   * The mode of the editor.\n   * - `app`: The editor is used as a standalone app.\n   * - `composable`: The editor is used as a composable component.\n   */\n  @Prop() mode?: 'app' | 'composable' = 'app';\n\n  /**\n   * This optional prop is used to hide tabs in the editor. Available tabs are:\n   * eventInfo, availability, participants, bookingOptions, bookingForm\n   */\n  @Prop() hideEditorTabs?: Tab[] = [];\n\n  /**\n   * The action to perform in the editor.\n   * - `create`: Create a new configuration.\n   * - `edit`: Edit an existing configuration.\n   */\n  @State() action: 'create' | 'edit' = 'create';\n  /**\n   * The active tab in the editor.\n   */\n  @State() activeTab: Tab = Tab.EventInfo;\n  /**\n   * The loading state of the editor.\n   */\n  @State() isLoading: boolean = false;\n  /**\n   * The unsaved changes state of the editor.\n   */\n  @State() hasUnsavedChanges: boolean = false;\n  /**\n   * The changes saved state of the editor.\n   */\n  @State() changesSaved: boolean = false;\n  /**\n   * The form state of the editor.\n   */\n  @State() formState: Partial<{\n    title: string;\n    description: string;\n    duration: string;\n    availability?: {\n      timezone: string;\n      openHours?: OpenHours[];\n    };\n    additionalFields?: Record<string, AdditionalFields>;\n    calendarIds: string[];\n    participantCalendars?: { [key: string]: string[] };\n    participants?: Participant[];\n    participantOpenHours?: { [key: string]: OpenHours[] };\n    participantBookingCalendars?: { [key: string]: string };\n    bookingCalendar?: string;\n    location?: string;\n    conferencing?: Conference;\n    bookingType?: string;\n    buffer?: { before: number; after: number };\n    cancellationPolicy?: string;\n    availableDaysInFuture?: number;\n    minCancellationNotice?: number;\n    minBookingNotice?: number;\n    timeslotInterval?: {\n      interval?: number;\n      roundTo?: number;\n    };\n    additionalGuestsHidden?: boolean;\n    hideCancellationOptions?: boolean;\n    hideReschedulingOptions?: boolean;\n    reminders?: Reminders;\n    emailTemplate?: EmailTemplate;\n    redirectUrl?: string;\n    availabilityMethod?: AvailabilityMethod;\n    slug: string;\n    appearance: Appearance;\n    name: string;\n  }> = {};\n  /**\n   * The error state of the editor.\n   */\n  @State() error?: string = '';\n  /**\n   * Event emitted when the configuration is created/updated (after the request is complete). This fires for both create and edit actions.\n   */\n  @Event() schedulerConfigChanged!: EventEmitter<SchedulerEventDetail>;\n  /**\n   * Event emitted when the user clicks the cancel button.\n   */\n  @Event() cancelButtonClick!: EventEmitter<void>;\n  /**\n   * Event emitted on form submission.\n   */\n  @Event({ bubbles: true, cancelable: true }) formSubmitted!: EventEmitter<void>;\n  /**\n   * Event emitted when the user clicks the preview button.\n   */\n  @Event() previewButtonClicked!: EventEmitter<HTMLNylasEditorTabsElement>;\n  /**\n   *\n   * Event emitted when the value of a form field changes.\n   */\n  @Event() schedulerEditorFormUpdated!: EventEmitter<{ value: string; name: string }>;\n\n  @Watch('selectedConfiguration')\n  configChangedHandler(newConfig: Configuration) {\n    debug('[nylas-editor-tabs]', 'configChangedHandler', newConfig, this.selectedConfiguration);\n    this.formState = {\n      ...this.getFormStateFromConfig(newConfig),\n    };\n    if (newConfig?.id) {\n      this.action = 'edit';\n    } else {\n      this.action = 'create';\n    }\n  }\n\n  @Watch('currentUser')\n  userChangedHandler(newUser: User) {\n    // Actively watch for changes in the current user to update the form state.\n    debug('[nylas-editor-tabs]', 'userChangedHandler', newUser);\n    if (newUser) {\n      this.formState = {\n        ...this.getFormStateFromConfig(this.selectedConfiguration),\n      };\n    }\n  }\n\n  connectedCallback() {\n    debug('[nylas-editor-tabs]', 'connectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('[nylas-editor-tabs]', 'componentWillLoad');\n    this.formState = this.getFormStateFromConfig(this.selectedConfiguration);\n  }\n\n  componentDidLoad() {\n    debug('[nylas-editor-tabs]', 'componentDidLoad');\n    if (this.selectedConfiguration?.id) {\n      this.configChangedHandler(this.selectedConfiguration);\n    }\n    const firstVisibleTab = (this.host.querySelector('button.tab:not(.hide)') as HTMLButtonElement)?.name as Tab;\n\n    if (firstVisibleTab) {\n      this.activeTab = firstVisibleTab;\n    }\n  }\n\n  disconnectedCallback() {\n    debug('[nylas-editor-tabs]', 'disconnectedCallback');\n  }\n\n  @Listen('valueChanged')\n  handleValueChanged(event: CustomEvent) {\n    debug('[nylas-editor-tabs]', 'handleValueChanged', event);\n    const { name, value } = event.detail;\n    this.setFormState(value, name);\n    this.formState = { ...this.formState };\n    this.hasUnsavedChanges = true;\n    this.error = '';\n    this.schedulerEditorFormUpdated.emit({\n      value: event.detail.value,\n      name: event.detail.name,\n    });\n  }\n\n  getFormStateFromConfig(config?: Configuration) {\n    let organizerParticipant = config?.participants?.find(p => p.is_organizer);\n    // If the config is round robin, there is no organizer set in the config, in that case flag the current user as the organizer.\n    if (!organizerParticipant && config?.availability?.availability_rules?.availability_method !== 'collective') {\n      organizerParticipant = config?.participants?.find(p => p.email === this.currentUser?.email);\n      if (organizerParticipant) {\n        organizerParticipant.is_organizer = true;\n      }\n    }\n    if (config?.appearance) {\n      console.info(\n        'Appearance settings have been returned from the given configuration; please remember to grab them from the configSettingsLoaded event and apply them as desired.',\n      );\n    }\n    return {\n      title: config?.event_booking?.title ?? '',\n      description: config?.event_booking?.description ?? '',\n      duration: config?.availability?.duration_minutes?.toString() ?? '30',\n      availability: {\n        timezone: config?.event_booking?.timezone ?? Intl.DateTimeFormat().resolvedOptions().timeZone,\n        openHours: config?.availability?.availability_rules?.default_open_hours ?? DEFAULT_OPEN_HOURS,\n      },\n      additionalFields: config?.scheduler?.additional_fields ?? {},\n      conferencing: config?.event_booking?.conferencing ?? {},\n      calendarIds: organizerParticipant?.availability?.calendar_ids ?? [],\n      participants: config?.participants ?? [],\n      bookingCalendar: organizerParticipant?.booking?.calendar_id ?? organizerParticipant?.email ?? '',\n      location: config?.event_booking?.location ?? '',\n      bookingType: config?.event_booking?.booking_type ?? 'booking',\n      buffer: config?.availability?.availability_rules?.buffer ?? { before: 0, after: 0 },\n      cancellationPolicy: config?.scheduler?.cancellation_policy ?? '',\n      availableDaysInFuture: config?.scheduler?.available_days_in_future ?? 30,\n      minCancellationNotice: config?.scheduler?.min_cancellation_notice ?? 0,\n      minBookingNotice: config?.scheduler?.min_booking_notice ?? 60,\n      timeslotInterval: {\n        interval: config?.availability?.interval_minutes ?? config?.availability?.duration_minutes,\n        roundTo: config?.availability?.round_to,\n      },\n      additionalGuestsHidden: config?.scheduler?.hide_additional_guests ?? false,\n      hideCancellationOptions: config?.scheduler?.hide_cancellation_options ?? false,\n      hideReschedulingOptions: config?.scheduler?.hide_rescheduling_options ?? false,\n      participantBookingCalendars:\n        config?.participants?.reduce((acc, p) => {\n          if (p.booking?.calendar_id) {\n            acc[p.email] = p.booking?.calendar_id;\n          }\n          return acc;\n        }) ?? {},\n      participantCalendars:\n        config?.participants?.reduce((acc, p) => {\n          acc[p.email] = p.availability?.calendar_ids;\n          return acc;\n        }, {}) ?? {},\n      reminders: config?.event_booking?.reminders,\n      emailTemplate: config?.scheduler?.email_template,\n      redirectUrl: config?.scheduler?.confirmation_redirect_url,\n      slug: config?.slug,\n      appearance: config?.appearance,\n      name: config?.name,\n    };\n  }\n\n  setFormState(value, key) {\n    switch (key) {\n      case 'title':\n        this.formState.title = value.toString();\n        break;\n      case 'description':\n        this.formState.description = value.toString();\n        break;\n      case 'duration':\n        this.formState.duration = value.toString();\n        break;\n      case 'availability':\n        this.formState.availability = JSON.parse(value.toString());\n        break;\n      case 'participants':\n        this.formState.participants = JSON.parse(value.toString());\n        break;\n      case 'booking-calendar':\n        this.formState.bookingCalendar = value.toString();\n        break;\n      case 'participant-booking-calendars':\n        this.formState.participantBookingCalendars = JSON.parse(value.toString());\n        break;\n      case 'location':\n        this.formState.location = value.toString();\n        break;\n      case 'conference':\n        this.formState.conferencing = JSON.parse(value.toString());\n        break;\n      case 'confirmation-type':\n        this.formState.bookingType = value.toString();\n        break;\n      case 'buffer-time':\n        this.formState.buffer = JSON.parse(value.toString());\n        break;\n      case 'limit-future-bookings':\n        this.formState.availableDaysInFuture = parseInt(value.toString());\n        break;\n      case 'min-cancellation-notice':\n        this.formState.minCancellationNotice = parseInt(value.toString());\n        break;\n      case 'min-booking-notice':\n        this.formState.minBookingNotice = parseInt(value.toString());\n        break;\n      case 'cancellation-policy':\n        this.formState.cancellationPolicy = value.toString();\n        break;\n      case 'timeslot-interval':\n        this.formState.timeslotInterval = JSON.parse(value.toString());\n        break;\n      case 'customize-booking-settings':\n        const settings = JSON.parse(value.toString());\n        this.formState.additionalGuestsHidden = settings.additionalGuestsHidden;\n        this.formState.hideCancellationOptions = settings.hideCancellationOptions;\n        this.formState.hideReschedulingOptions = settings.hideReschedulingOptions;\n        break;\n      case 'participant-custom-availability':\n        const participantOpenHours = JSON.parse(value.toString());\n        this.formState.participantOpenHours = participantOpenHours;\n        break;\n      case 'additional-fields':\n        this.formState.additionalFields = value;\n        break;\n      case 'connected-calendars':\n        this.formState.participantCalendars = JSON.parse(value.toString());\n        break;\n      case 'confirmation-email-template':\n        this.formState.emailTemplate = JSON.parse(value.toString());\n        break;\n      case 'reminder-overrides':\n        this.formState.reminders = { overrides: JSON.parse(value.toString()) };\n        break;\n      case 'confirmation-redirect':\n        this.formState.redirectUrl = value.toString();\n        break;\n      case 'availability-method':\n        this.formState.availabilityMethod = value.toString();\n        break;\n      case 'custom-event-slug':\n        this.formState.slug = JSON.parse(value.toString());\n        break;\n      case 'page-styling':\n        this.formState.appearance = JSON.parse(value.toString());\n        break;\n      case 'page-name':\n        this.formState.name = JSON.parse(value.toString());\n        break;\n    }\n    this.schedulerEditorFormUpdated.emit({\n      value,\n      name: key,\n    });\n  }\n\n  updateFormState() {\n    const formData = new FormData(this.formRef);\n    formData.forEach((value, key) => {\n      this.setFormState(value, key);\n    });\n\n    this.formState = { ...this.formState };\n    return this.formState;\n  }\n\n  setActiveTab(e: Event, tabName: Tab) {\n    e.preventDefault();\n    this.updateFormState();\n    this.activeTab = tabName;\n  }\n\n  setError = (error: Error) => {\n    this.error = error.message;\n  };\n\n  formSubmissionHandler = async (event: Event) => {\n    event.preventDefault();\n    const formEvent = await this.formSubmitted.emit();\n    debug('[nylas-editor-tabs]', 'formSubmissionHandler', formEvent);\n    const valid = this.formRef.checkValidity();\n    if (!valid || formEvent.defaultPrevented) {\n      this.error = this.formRef.validationMessage || 'Please fix the form errors.';\n      return;\n    }\n    this.isLoading = true;\n    this.hasUnsavedChanges = false;\n    const formState = this.updateFormState();\n    const {\n      title,\n      description,\n      duration,\n      availability,\n      bookingCalendar,\n      location,\n      bookingType,\n      buffer,\n      availableDaysInFuture,\n      minCancellationNotice,\n      minBookingNotice,\n      cancellationPolicy,\n      timeslotInterval,\n      additionalGuestsHidden,\n      hideCancellationOptions,\n      hideReschedulingOptions,\n      participants,\n      participantOpenHours,\n      additionalFields,\n      participantCalendars,\n      conferencing,\n      participantBookingCalendars,\n      reminders,\n      emailTemplate,\n      redirectUrl,\n      availabilityMethod,\n      slug,\n      appearance,\n      name,\n    } = formState;\n    const organizer = this.selectedConfiguration?.participants?.find(p => p.is_organizer) || participants?.find(p => p.is_organizer);\n    const organizerCalendars = participantCalendars && organizer?.email ? participantCalendars[organizer?.email] : [];\n    const organizerBookingCalendar = organizer?.booking?.calendar_id || bookingCalendar;\n    const durationMinutes = duration ? parseInt(duration) : 30;\n\n    const participantsList =\n      participants && participants?.length > 0\n        ? participants\n        : [\n            {\n              name: organizer?.name ?? this.currentUser?.name ?? '',\n              email: organizer?.email ?? this.currentUser?.email ?? '',\n              is_organizer: true,\n              timezone: availability?.timezone ?? Intl.DateTimeFormat().resolvedOptions().timeZone,\n              availability: {\n                calendar_ids: organizerCalendars.length ? organizerCalendars : ['primary'],\n                open_hours: [],\n              },\n              booking: {\n                calendar_id: bookingCalendar && bookingCalendar !== '' ? bookingCalendar : 'primary',\n              },\n            },\n          ];\n\n    const configObject: Partial<Configuration> = {\n      ...(this.selectedConfiguration?.id && { id: this.selectedConfiguration.id }),\n      version: this.selectedConfiguration?.version ?? '1.0.0',\n      slug: slug,\n      name: name,\n      availability: {\n        duration_minutes: durationMinutes,\n        interval_minutes: timeslotInterval?.interval ?? durationMinutes,\n        round_to: timeslotInterval?.roundTo,\n        availability_rules: {\n          availability_method: availabilityMethod ? availabilityMethod : this.selectedConfiguration?.availability?.availability_rules?.availability_method ?? 'collective',\n          buffer: buffer || { before: 0, after: 0 },\n          default_open_hours: availability?.openHours ?? this.selectedConfiguration?.availability?.availability_rules?.default_open_hours ?? DEFAULT_OPEN_HOURS,\n          round_robin_group_id: this.selectedConfiguration?.availability?.availability_rules?.round_robin_group_id ?? '',\n        },\n      },\n      participants: [\n        ...participantsList?.map(p => {\n          if (p.is_organizer) {\n            return {\n              name: p.name ?? '',\n              email: p.email,\n              is_organizer: true,\n              timezone: participantOpenHours?.[p.email]?.[0]?.timezone ?? p.availability?.open_hours?.[0]?.timezone ?? Intl.DateTimeFormat().resolvedOptions().timeZone,\n              availability: {\n                calendar_ids: participantCalendars?.[p.email] ? participantCalendars?.[p.email] : organizerCalendars?.length ? organizerCalendars : ['primary'],\n                open_hours: participantOpenHours?.[p.email] ?? p.availability?.open_hours ?? [],\n              },\n              booking: {\n                calendar_id: participantBookingCalendars?.[p.email] ? participantBookingCalendars?.[p.email] : organizerBookingCalendar ? organizerBookingCalendar : 'primary',\n              },\n            };\n          }\n          return {\n            ...p,\n            timezone: participantOpenHours?.[p.email]?.[0]?.timezone ?? p.availability?.open_hours?.[0]?.timezone ?? Intl.DateTimeFormat().resolvedOptions().timeZone,\n            availability: p.availability\n              ? {\n                  calendar_ids: participantCalendars?.[p.email] ?? p.availability?.calendar_ids ?? ['primary'],\n                  open_hours: participantOpenHours?.[p.email] ?? p.availability?.open_hours ?? [],\n                }\n              : undefined,\n            booking: participantBookingCalendars?.[p.email] ? { calendar_id: participantBookingCalendars?.[p.email] } : p?.booking ?? undefined,\n          };\n        }),\n      ],\n      event_booking: {\n        title: title?.toString() ?? '',\n        description: description?.toString() ?? '',\n        location: location?.toString() ?? '',\n        booking_type: (bookingType?.toString() as BookingType) ?? 'booking',\n        timezone: availability?.timezone ?? Intl.DateTimeFormat().resolvedOptions().timeZone,\n        conferencing: conferencing,\n        reminders: reminders,\n      },\n      scheduler: {\n        cancellation_policy: cancellationPolicy ?? '',\n        available_days_in_future: availableDaysInFuture ?? 30,\n        min_cancellation_notice: minCancellationNotice ?? 0,\n        min_booking_notice: minBookingNotice ?? 60,\n        hide_additional_guests: additionalGuestsHidden ?? false,\n        hide_cancellation_options: hideCancellationOptions ?? false,\n        hide_rescheduling_options: hideReschedulingOptions ?? false,\n        additional_fields: additionalFields,\n        email_template: emailTemplate,\n        confirmation_redirect_url: redirectUrl,\n      },\n      appearance: appearance,\n    };\n\n    const configObjectWithDeveloperSettings = mergeDeep(configObject, this.selectedConfiguration);\n\n    const finalConfig = this.action === 'create' ? configObjectWithDeveloperSettings : configObject;\n\n    if (this.isConfigRoundRobin(finalConfig)) {\n      // If the config is round robin, no participant should be flagged as the organizer\n      finalConfig.participants = finalConfig.participants.map(p => ({ ...p, is_organizer: undefined }));\n    }\n    const resetLoadingState = (_e: CustomEvent) => {\n      this.isLoading = false;\n      this.changesSaved = true;\n      setTimeout(() => {\n        this.changesSaved = false;\n      }, 5000);\n    };\n    const hasError = this.checkForClientSideErrors(finalConfig);\n    if (hasError) {\n      return;\n    }\n    this.schedulerConfigChanged.emit({ config: finalConfig, resetLoadingState, setError: this.setError, action: this.action });\n  };\n\n  isConfigRoundRobin = (config: Configuration) => {\n    return config.availability?.availability_rules?.availability_method === 'max-availability' || config.availability?.availability_rules?.availability_method === 'max-fairness';\n  };\n\n  checkForClientSideErrors = config => {\n    // Check additional Fields in config\n    let hasError = false;\n    let errorMessage = '';\n    const additionalFields = config.scheduler?.additional_fields;\n    const isOrganizerConfirmationType = config.event_booking?.booking_type === 'organizer-confirmation';\n    const organizerConfirmationUrl = config.scheduler?.organizer_confirmation_url;\n    if (additionalFields) {\n      errorMessage = 'Booking form error: ';\n      Object.entries(additionalFields).forEach(entry => {\n        const field = entry[1] as AdditionalFields;\n        if (field.label === '') {\n          errorMessage += `Label is required for field of type ${field.type}.`;\n          hasError = true;\n          return;\n        }\n        if (field.options) {\n          for (const option of field.options) {\n            if (option === '') {\n              errorMessage += `Empty option detected inside ${field.label} of type ${field.type}.`;\n              hasError = true;\n              break;\n            }\n          }\n        }\n      });\n    }\n    if (isOrganizerConfirmationType && !organizerConfirmationUrl) {\n      errorMessage += 'Organizer confirmation URL is required when using organizer confirmation booking type.';\n      hasError = true;\n    }\n    if (hasError) {\n      this.isLoading = false;\n      this.setError(new Error(errorMessage));\n    }\n    return hasError;\n  };\n\n  hideTab(tab: Tab) {\n    return this.hideEditorTabs?.includes(tab) || false;\n  }\n\n  @RegisterComponent<NylasEditorTabs, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-editor-tabs',\n    stateToProps: new Map([\n      ['schedulerConfig.calendars', 'calendars'],\n      ['schedulerConfig.selectedConfiguration', 'selectedConfiguration'],\n      ['schedulerConfig.currentUser', 'currentUser'],\n      ['schedulerConfig.hideEditorTabs', 'hideEditorTabs'],\n    ]),\n    eventToProps: {\n      schedulerConfigChanged: async (event: CustomEvent<SchedulerEventDetail>, nylasSchedulerConfigConnector: NylasSchedulerConfigConnector) => {\n        const { resetLoadingState, setError, action, config } = event.detail;\n\n        const checkForErrors = (response: DataResponseReturnType) => {\n          const [data, error] = response;\n          if (!data && error && setError) {\n            setError(error as Error);\n          }\n          if (resetLoadingState) {\n            resetLoadingState(event);\n          }\n        };\n\n        // If we have an ID, we are updating an existing configuration\n        if (action === 'edit') {\n          const response = await nylasSchedulerConfigConnector.schedulerConfig.updateConfiguration(config);\n          checkForErrors(response);\n        } else {\n          const response = await nylasSchedulerConfigConnector.schedulerConfig.createConfiguration(config);\n          checkForErrors(response);\n        }\n      },\n      cancelButtonClick: async (_, nylasSchedulerConfigConnector) => {\n        nylasSchedulerConfigConnector.schedulerConfigStore.state.action = null;\n      },\n      previewButtonClicked: async (_, nylasSchedulerConfigConnector) => {\n        debug('[nylas-editor-tabs]', 'previewButtonClicked', nylasSchedulerConfigConnector);\n      },\n      formSubmitted: async (_, nylasSchedulerConfigConnector) => {\n        debug('[nylas-editor-tabs]', 'formSubmitted', nylasSchedulerConfigConnector);\n      },\n      schedulerEditorFormUpdated: async (event: CustomEvent<{ value: string; name: string }>, _nylasSchedulerConfigConnector) => {\n        debug('[nylas-editor-tabs]', 'schedulerEditorFormUpdated', event);\n      },\n    },\n    localPropsToProp: new Map([['schedulerPreviewLink', 'schedulerPreviewLink']]),\n    fireRegisterEvent: true,\n  })\n  render() {\n    debug('[nylas-editor-tabs]', 'render', this.formState);\n    // TODO: Remove this check when the feature is ready to be released\n    // const showInDevelopmentTabs = localStorage.getItem('nylas') === 'Nylas Developer';\n\n    return (\n      <Host>\n        <form onSubmit={this.formSubmissionHandler} class=\"scheduler-editor\" ref={el => (this.formRef = el as HTMLFormElement)} noValidate>\n          {this.mode === 'app' ? (\n            <div class=\"form-contents\">\n              <div class=\"tabs\">\n                <button\n                  name={Tab.EventInfo}\n                  class={{ tab: true, active: this.activeTab == Tab.EventInfo, hide: this.hideTab(Tab.EventInfo) }}\n                  part=\"editortab__event-info\"\n                  onClick={e => this.setActiveTab(e, Tab.EventInfo)}\n                >\n                  <calendar-info-icon width=\"16\" height=\"16\" />\n                  Event info\n                </button>\n                <button\n                  name={Tab.Availability}\n                  class={{ tab: true, active: this.activeTab == Tab.Availability, hide: this.hideTab(Tab.Availability) }}\n                  part=\"editortab__availability\"\n                  onClick={e => this.setActiveTab(e, Tab.Availability)}\n                >\n                  <calendar-patterns-icon width=\"16\" height=\"16\" />\n                  Availability\n                </button>\n                <button\n                  name={Tab.Participants}\n                  class={{ tab: true, active: this.activeTab == Tab.Participants, hide: this.hideTab(Tab.Participants) }}\n                  part=\"editortab__participants\"\n                  onClick={e => this.setActiveTab(e, Tab.Participants)}\n                >\n                  <people-icon width=\"16\" height=\"16\" />\n                  Participants\n                </button>\n                <button\n                  name={Tab.BookingOptions}\n                  class={{ tab: true, active: this.activeTab == Tab.BookingOptions, hide: this.hideTab(Tab.BookingOptions) }}\n                  part=\"editortab__booking-options\"\n                  onClick={e => this.setActiveTab(e, Tab.BookingOptions)}\n                >\n                  <flow-icon width=\"16\" height=\"16\" />\n                  Booking options\n                </button>\n                <button\n                  name={Tab.BookingForm}\n                  class={{ tab: true, active: this.activeTab == 'bookingForm', hide: this.hideTab(Tab.BookingForm) }}\n                  part=\"editortab__booking-form\"\n                  onClick={e => this.setActiveTab(e, Tab.BookingForm)}\n                >\n                  {this.activeTab == Tab.BookingForm ? <calendar-agenda-fill-icon width=\"16\" height=\"16\" /> : <calendar-agenda-icon width=\"16\" height=\"16\" />}\n                  Booking form\n                </button>\n                <button\n                  name={Tab.Communications}\n                  class={{ tab: true, active: this.activeTab == 'communications', hide: this.hideTab(Tab.Communications) }}\n                  onClick={e => this.setActiveTab(e, Tab.Communications)}\n                >\n                  {this.activeTab == Tab.Communications ? <envelope-fill-icon width=\"16\" height=\"16\" /> : <envelope-icon width=\"16\" height=\"16\" />}\n                  Communications\n                </button>\n                <button\n                  name={Tab.PageStyles}\n                  class={{ tab: true, active: this.activeTab == 'pageStyles', hide: this.hideTab(Tab.PageStyles) }}\n                  onClick={e => this.setActiveTab(e, Tab.PageStyles)}\n                >\n                  {this.activeTab == Tab.PageStyles ? <paintbrush-fill-icon width=\"16\" height=\"16\" /> : <paintbrush-icon width=\"16\" height=\"16\" />}\n                  Page styles\n                </button>\n              </div>\n              <div class=\"tab-content\">\n                <TabContents\n                  formState={this.formState}\n                  activeTab={this.activeTab}\n                  currentUser={this.currentUser}\n                  calendars={this.calendars}\n                  id={this.selectedConfiguration?.id ?? 'new'}\n                />\n              </div>\n            </div>\n          ) : (\n            <div class=\"composable\" key={this.selectedConfiguration?.id}>\n              <slot></slot>\n            </div>\n          )}\n\n          <div class=\"footer\" part=\"editor__footer\">\n            <div class=\"preview\" part=\"editor__footer-preview\">\n              {this.schedulerPreviewLink !== '' && this.action === 'edit' && (\n                <button-component\n                  type=\"button\"\n                  disabled={this.isLoading}\n                  clickHandler={event => {\n                    event.preventDefault();\n                    const previewEvent = this.previewButtonClicked.emit(this.host);\n                    if (!previewEvent.defaultPrevented) {\n                      window.open(parsePreviewLink(this.schedulerPreviewLink, this.selectedConfiguration), '_blank');\n                    }\n                  }}\n                  variant={'basic'}\n                >\n                  Preview\n                </button-component>\n              )}\n            </div>\n            <div class=\"buttons\" part=\"editor__footer-buttons\">\n              <p\n                class={{\n                  'unsaved-changes': this.hasUnsavedChanges && !this.changesSaved,\n                  'saved-changes': this.changesSaved,\n                  'error': this.error !== '',\n                  'error-full-width': this.error !== '' && this.action === 'create',\n                }}\n              >\n                {this.error !== '' ? this.error : ''}\n                {this.error == '' && this.hasUnsavedChanges && !this.changesSaved ? 'Unsaved changes' : this.error == '' && this.changesSaved ? 'Changes saved!' : ''}\n              </p>\n              <button-component\n                type=\"button\"\n                disabled={this.isLoading}\n                clickHandler={event => {\n                  event.preventDefault();\n                  this.cancelButtonClick.emit();\n                  this.error = '';\n                }}\n                variant={'basic'}\n                part=\"editor__footer-cancel\"\n              >\n                Back\n              </button-component>\n              <button-component type=\"submit\" disabled={this.isLoading} part=\"editor__footer-cta\">\n                {this.isLoading ? (\n                  <span>\n                    Saving\n                    <loading-icon />{' '}\n                  </span>\n                ) : this.action === 'create' ? (\n                  'Create'\n                ) : (\n                  'Save changes'\n                )}\n              </button-component>\n            </div>\n          </div>\n        </form>\n      </Host>\n    );\n  }\n}\n"]}