{"version":3,"file":"nylas-timeslot-interval.js","sourceRoot":"","sources":["../../../../src/components/scheduler-editor/nylas-timeslot-interval/nylas-timeslot-interval.tsx"],"names":[],"mappings":"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","sourcesContent":["import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug } from '@/utils/utils';\nimport { AttachInternals, Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport { Configuration } from '@nylas/core';\n\nconst defaultRoundToMinutes = 15;\n/**\n * The `nylas-timeslot-interval` component allows users to set their time slot interval preferences.\n * This component provides an option to set both `interval_minutes` and `round_to` in the configuration.\n *\n * @part nti - The timeslot interval container\n * @part nti__header - The header of the timeslot interval picker\n * @part nti__input-label - The input label of the timeslot interval picker\n * @part nti__dropdown - The dropdown container\n * @part nti__dropdown-button - The dropdown button\n * @part nti__dropdown-content - The dropdown content\n */\n@Component({\n  tag: 'nylas-timeslot-interval',\n  styleUrl: 'nylas-timeslot-interval.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class NylasTimeslotInterval {\n  @Element() host!: HTMLNylasTimeslotIntervalElement;\n  /**\n   * The selected config\n   */\n  @Prop() selectedConfiguration?: Configuration;\n  /**\n   * The name of the calendar picker.\n   */\n  @Prop() name: string = 'timeslot-picker';\n\n  /**\n   * The event duration in minutes.\n   */\n  @Prop() eventDurationMinutes?: number = this.selectedConfiguration?.availability?.duration_minutes;\n  /**\n   * @deprecated The default interval minutes.\n   */\n  @Prop() defaultIntervalMinutes: number = this.selectedConfiguration?.availability?.interval_minutes ?? this.eventDurationMinutes ?? 10;\n  /**\n   * @deprecated The round to option in minutes as set in the configuration.\n   */\n  @Prop() defaultRoundTo?: number = this.selectedConfiguration?.availability?.round_to ?? undefined;\n\n  /**\n   * The element internals.\n   */\n  @AttachInternals() internals!: ElementInternals;\n\n  /**\n   * The internal event duration minutes state.\n   */\n  @State() internalEventDurationMinutes!: number;\n\n  /**\n   * The selected interval minutes.\n   */\n  @State() selectedInterval!: number;\n\n  /**\n   * The selected round to minutes.\n   */\n  @State() selectedRoundTo!: boolean;\n\n  /***\n   * The state to store that component is ready to render.\n   */\n  @State() componentLoaded: boolean = false;\n\n  /**\n   * This event is fired when the selected booking calendar changes.\n   */\n  @Event() valueChanged!: EventEmitter<{\n    value: string;\n    name: string;\n  }>;\n\n  /**\n   * When a name prop is passed, stencil does not automatically set the name attribute on the host element.\n   * Since this component is form-associated, the name attribute is required for form submission.\n   * This is a workaround to ensure that the name attribute is set on the host element.\n   */\n  @Watch('name')\n  elementNameChangedHandler(newValue: string) {\n    debug('nylas-timeslot-interval', 'elementNameChangedHandler', newValue);\n    this.host.setAttribute('name', newValue);\n  }\n\n  @Watch('selectedConfiguration')\n  selectedConfigurationChangedHandler(newValue: Configuration) {\n    debug('nylas-timeslot-interval', 'selectedConfigurationChangedHandler', newValue);\n    this.internalEventDurationMinutes = newValue?.availability?.duration_minutes ?? this.eventDurationMinutes ?? 30;\n    const internalIntervalMinutes = newValue.availability?.interval_minutes ?? this.internalEventDurationMinutes ?? 30;\n    this.selectedInterval = newValue.availability?.interval_minutes ?? internalIntervalMinutes ?? 10;\n    const roundToMinutes = newValue.availability?.round_to || null;\n    this.selectedRoundTo = roundToMinutes && roundToMinutes === internalIntervalMinutes ? true : false;\n  }\n\n  // Lifecycle methods\n  connectedCallback() {\n    debug('nylas-timeslot-interval', 'connectedCallback');\n  }\n\n  disconnectedCallback() {\n    debug('nylas-timeslot-interval', 'disconnectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('nylas-timeslot-interval', 'componentWillLoad');\n    // See comment in the @Watch('name') decorator for more information.\n    this.host.setAttribute('name', this.name);\n  }\n\n  componentDidLoad() {\n    debug('nylas-timeslot-interval', 'componentDidLoad');\n    if (this.selectedConfiguration) {\n      this.selectedConfigurationChangedHandler(this.selectedConfiguration);\n    } else {\n      this.internalEventDurationMinutes = this.eventDurationMinutes ?? 30;\n      const internalIntervalMinutes = this.internalEventDurationMinutes;\n      this.selectedInterval = internalIntervalMinutes ?? 10;\n      this.selectedRoundTo = false;\n    }\n    this.componentLoaded = true;\n  }\n\n  componentWillUpdate() {\n    debug('nylas-timeslot-interval', 'componentWillUpdate');\n  }\n\n  componentDidUpdate() {\n    debug('nylas-timeslot-interval', 'componentDidUpdate');\n  }\n\n  componentWillRender() {\n    debug('nylas-timeslot-interval', 'componentWillRender');\n  }\n\n  componentDidRender() {\n    debug('nylas-timeslot-interval', 'componentDidRender');\n  }\n\n  @Listen('nylasFormDropdownChanged')\n  nylasFormDropdownChangedHandler(event: CustomEvent<{ value: string; name: string }>) {\n    debug('nylas-timeslot-interval', 'nylasFormDropdownChangedHandler', event.detail);\n    const value = event.detail.value;\n    if (value === 'duration') {\n      this.selectedInterval = this.internalEventDurationMinutes ?? 10;\n    } else {\n      this.selectedInterval = parseInt(event.detail.value);\n    }\n\n    this.valueChanged.emit({\n      value: JSON.stringify({\n        interval: this.selectedInterval,\n        roundTo: this.selectedRoundTo ? this.selectedInterval : defaultRoundToMinutes,\n      }),\n      name: this.name,\n    });\n    if (typeof this.internals.setFormValue === 'function') {\n      this.internals.setFormValue(JSON.stringify({ interval: this.selectedInterval, roundTo: this.selectedRoundTo ? this.selectedInterval : defaultRoundToMinutes }), this.name);\n    }\n  }\n\n  @Listen('nylasFormRadioChanged')\n  nylasFormRadioChangedHandler(event: CustomEvent<{ value: string; name: string }>) {\n    debug('nylas-timeslot-interval', 'nylasFormRadioChangedHandler', event.detail);\n    const value = event.detail.value;\n    if (value === 'no-rounding') {\n      this.selectedRoundTo = false;\n    } else {\n      this.selectedRoundTo = true;\n    }\n\n    this.valueChanged.emit({\n      value: JSON.stringify({\n        interval: this.selectedInterval,\n        roundTo: this.selectedRoundTo ? this.selectedInterval : defaultRoundToMinutes,\n      }),\n      name: this.name,\n    });\n    if (typeof this.internals.setFormValue === 'function') {\n      this.internals.setFormValue(JSON.stringify({ interval: this.selectedInterval, roundTo: this.selectedRoundTo ? this.selectedInterval : defaultRoundToMinutes }), this.name);\n    }\n  }\n\n  @RegisterComponent<NylasTimeslotInterval, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-timeslot-interval',\n    stateToProps: new Map([['schedulerConfig.selectedConfiguration', 'selectedConfiguration']]),\n    fireRegisterEvent: true,\n  })\n  render() {\n    const intervalPreferenceOptions = [\n      { value: 'duration', label: 'Length of the booking' },\n      { value: '5', label: '5 mins' },\n      { value: '10', label: '10 mins' },\n      { value: '15', label: '15 mins' },\n      { value: '20', label: '20 mins' },\n      { value: '30', label: '30 mins' },\n      { value: '45', label: '45 mins' },\n      { value: '60', label: '60 mins' },\n    ];\n\n    const defaultSelectedInterval =\n      typeof this.selectedInterval !== 'undefined'\n        ? this.selectedInterval == this.internalEventDurationMinutes\n          ? intervalPreferenceOptions[0]\n          : intervalPreferenceOptions.find(op => op.value == this.selectedInterval.toString()) ?? intervalPreferenceOptions[0]\n        : undefined;\n\n    return (\n      <Host>\n        <div class=\"nylas-timeslot-interval\" part=\"nti\">\n          <div class=\"header\" part=\"nti__header\">\n            <h3>Time slot settings</h3>\n          </div>\n\n          <div class=\"nylas-timeslot-interval__dropdown\">\n            <span class=\"label\" part=\"nti__input-label\">\n              Time slot interval.\n            </span>\n            {defaultSelectedInterval?.label && (\n              <select-dropdown\n                name=\"interval-minutes\"\n                options={intervalPreferenceOptions}\n                withSearch={false}\n                exportparts=\"sd_dropdown: nti__dropdown, sd_dropdown-button: nti__dropdown-button, sd_dropdown-content: nti__dropdown-content\"\n                defaultSelectedOption={defaultSelectedInterval}\n              />\n            )}\n            <span slot=\"label\" class=\"label\" part=\"nti__input-label\">\n              Time slot rounding type\n              <tooltip-component>\n                <info-icon slot=\"tooltip-icon\" />\n                <span slot=\"tooltip-content\">Select if you want to round the time slots to the nearest interval.</span>\n              </tooltip-component>\n            </span>\n            {this.componentLoaded && (\n              <radio-button-group\n                name=\"interval-preference\"\n                defaultSelectedValue={this.selectedRoundTo ? 'rounding' : 'no-rounding'}\n                options={[\n                  { value: 'no-rounding', label: 'Default', description: 'Time slots will be rounded to the nearest quarter-hour.' },\n                  {\n                    value: 'rounding',\n                    label: 'Interval rounding',\n                    description: 'Time slots will begin at times rounded to the interval value.',\n                  },\n                ]}\n              />\n            )}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}