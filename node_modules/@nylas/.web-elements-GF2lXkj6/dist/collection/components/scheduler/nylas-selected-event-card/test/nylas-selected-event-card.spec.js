import { newSpecPage } from "@stencil/core/testing";
import { NylasSelectedEventCard } from "../nylas-selected-event-card";
import { h } from "@stencil/core";
function formatTime(date) {
    if (!(date instanceof Date) || isNaN(date.getTime())) {
        return '';
    }
    let hours = date.getHours();
    const minutes = date.getMinutes();
    const ampm = hours >= 12 ? 'PM' : 'AM';
    hours = hours % 12;
    hours = hours ? hours : 12;
    const formattedMinutes = minutes < 10 ? '0' + minutes.toString() : minutes.toString();
    const formattedTime = `${hours.toString().padStart(2, '0')}:${formattedMinutes.toString().padStart(2, '0')} ${ampm}`;
    return formattedTime;
}
describe('nylas-selected-event-card', () => {
    beforeEach(() => {
        jest.clearAllMocks();
        const originalIntl = Intl;
        global.Intl = {
            ...originalIntl,
            DateTimeFormat: jest.fn().mockImplementation(() => ({
                resolvedOptions: () => ({
                    timeZone: 'America/New_York',
                }),
                format: jest.fn(x => formatTime(x)),
                supportedLocalesOf: jest.fn(),
            })),
        };
    });
    it('renders correctly with initial props', async () => {
        const page = await newSpecPage({
            components: [NylasSelectedEventCard],
            html: `<nylas-selected-event-card></nylas-selected-event-card>`,
        });
        expect(page.root).toMatchSnapshot();
    });
    it('updates time display when selectedTimeslot changes', async () => {
        const selectedTimeslot = { start_time: new Date('2021-01-01T09:00:00Z'), end_time: new Date('2021-01-01T10:00:00Z'), emails: [] };
        const selectedDate = new Date('2021-01-01T00:00:00Z');
        const page = await newSpecPage({
            components: [NylasSelectedEventCard],
            template: () => {
                return h("nylas-selected-event-card", { selectedTimeslot: selectedTimeslot, selectedDate: selectedDate });
            },
        });
        if (!page.root) {
            throw new Error('Component did not render.');
        }
        await page.waitForChanges();
        const dateDisplay = page?.root?.shadowRoot?.querySelector('[part="nsec__date"]');
        expect(dateDisplay.textContent).toContain('Thursday, December 31, 2020');
        const timeDisplay = page?.root?.shadowRoot?.querySelector('[part="nsec__time"]');
        expect(timeDisplay.textContent).toContain('9:00 AM - 10:00 AM');
    });
});
//# sourceMappingURL=nylas-selected-event-card.spec.js.map
