{"version":3,"names":["timePeriodSelectorCss","TimePeriodSelectorStyle0","pluralToSingular","hours","days","weeks","months","TimePeriodSelector","this","defaultSelectedPeriod","defaultSelectedNumber","calculateOptions","map","i","label","toString","value","timePeriods","period","componentDidLoad","selectedNumber","selectedPeriod","numberOptions","Array","from","length","_","inputOptionChangedHandler","event","debug","detail","name","parseInt","selected","number","timePeriodChanged","emit","nylasFormDropdownChangedHandler","updateNumberOptionsAndSelectedNumber","render","h","key","class","id","inputValue","exportparts","options","defaultInputOption","find","timePeriodOptions","pluralizedLabel","defaultSelectedOption","withSearch"],"sources":["src/components/design-system/time-period-selector/time-period-selector.scss?tag=time-period-selector&encapsulation=scoped","src/components/design-system/time-period-selector/time-period-selector.tsx"],"sourcesContent":[".time-period-selector {\n  display: grid;\n  gap: 0.5rem;\n  grid-template-columns: auto 1fr;\n\n  select-dropdown,\n  input-dropdown {\n    border: 1px solid var(--nylas-base-200);\n    border-radius: var(--nylas-border-radius-2x);\n  }\n  select-dropdown {\n    width: 116px;\n  }\n  input-dropdown {\n    width: 84px;\n    display: flex;\n    align-items: center;\n  }\n\n  select-dropdown#time-period::part(sd_dropdown-button) {\n    width: 100%;\n  }\n  input-dropdown::part(id_dropdown) {\n    width: inherit;\n    height: 100%;\n  }\n  input-dropdown#time-number::part(id_dropdown-input) {\n    border: none;\n    border-radius: var(--nylas-border-radius-2x);\n  }\n  input-dropdown::part(id_dropdown-input) {\n    padding: 17px;\n    gap: 1rem;\n  }\n  input-dropdown::part(id_dropdown-content) {\n    width: 100%;\n    max-height: 200px;\n  }\n  select-dropdown::part(sd_dropdown) {\n    width: inherit;\n  }\n  select-dropdown::part(sd_dropdown-button) {\n    padding: 1rem;\n    gap: 1rem;\n    justify-content: space-between;\n  }\n  select-dropdown::part(sd_dropdown-content) {\n    width: 100%;\n    max-height: 200px;\n  }\n}\n","import { debug } from '@/utils/utils';\nimport { Element, Event, EventEmitter } from '@stencil/core';\nimport { Component, h, Listen, Prop, State } from '@stencil/core';\n\nconst pluralToSingular = {\n  hours: 'hour',\n  days: 'day',\n  weeks: 'week',\n  months: 'month',\n};\n\n@Component({\n  tag: 'time-period-selector',\n  styleUrl: 'time-period-selector.scss',\n  scoped: true,\n})\nexport class TimePeriodSelector {\n  @Element() host!: HTMLElement;\n\n  // The possible values for the time periods dropdown\n  @Prop() timePeriods: string[] = ['hour', 'day', 'week', 'month'];\n\n  /**\n   * The default selected time period.\n   */\n  @Prop() defaultSelectedPeriod!: string;\n\n  /**\n   * The default selected number.\n   */\n  @Prop() defaultSelectedNumber!: number;\n\n  /**\n   * The currently selected time period\n   */\n  @State() selectedPeriod: string = this.defaultSelectedPeriod;\n\n  /**\n   * The currently selected number of the time period\n   */\n  @State() selectedNumber: number = this.defaultSelectedNumber;\n\n  /*\n   * The options for the number dropdown, to be calculated based on the selectedPeriod\n   */\n  @State() numberOptions: { label: string; value: string }[] = this.calculateOptions(this.defaultSelectedPeriod || 'hour').map(i => {\n    return {\n      label: i.toString(),\n      value: i.toString(),\n    };\n  });\n\n  /**\n   * The options for the time period dropdown\n   */\n  @State() timePeriodOptions = this.timePeriods.map(period => {\n    return {\n      label: period,\n      value: period,\n    };\n  });\n\n  componentDidLoad() {\n    this.selectedNumber = this.defaultSelectedNumber;\n    this.selectedPeriod = this.defaultSelectedPeriod;\n    const period = pluralToSingular[this.selectedPeriod] ?? this.selectedPeriod;\n    const numberOptions = this.calculateOptions(period);\n    this.numberOptions = numberOptions.map(i => {\n      return {\n        label: i.toString(),\n        value: i.toString(),\n      };\n    });\n  }\n\n  @Event() timePeriodChanged!: EventEmitter<{ number: number; period: string }>;\n\n  private calculateOptions(period: string): number[] {\n    switch (period) {\n      case 'hour':\n        return Array.from({ length: 23 }, (_, i) => i + 1);\n      case 'minute':\n        return Array.from({ length: 13 }, (_, i) => i * 5);\n      case 'day':\n        return Array.from({ length: 30 }, (_, i) => i + 1);\n      case 'week':\n        return Array.from({ length: 4 }, (_, i) => i + 1);\n      case 'month':\n        return Array.from({ length: 12 }, (_, i) => i + 1);\n      default:\n        return [];\n    }\n  }\n\n  @Listen('inputOptionChanged')\n  inputOptionChangedHandler(event: CustomEvent<{ value: string; name: string }>) {\n    debug('time-period-selector', 'inputOptionChangedHandler', event.detail);\n    const { value, name } = event.detail;\n    if (name === 'time-number') {\n      this.selectedNumber = value ? parseInt(value) : this.defaultSelectedNumber;\n    }\n    const selected = {\n      number: this.selectedNumber,\n      period: this.selectedPeriod,\n    };\n    this.timePeriodChanged.emit(selected);\n  }\n\n  @Listen('nylasFormDropdownChanged')\n  nylasFormDropdownChangedHandler(event: CustomEvent<{ value: string; name: string }>) {\n    debug('time-period-selector', 'nylasFormDropdownChangedHandler', event.detail);\n    const { value, name } = event.detail;\n    if (name === 'time-period') {\n      this.selectedPeriod = value;\n      this.updateNumberOptionsAndSelectedNumber(value);\n    } else if (name === 'time-number') {\n      this.selectedNumber = parseInt(value);\n    }\n    const selected = {\n      number: this.selectedNumber,\n      period: this.selectedPeriod,\n    };\n    this.timePeriodChanged.emit(selected);\n  }\n\n  updateNumberOptionsAndSelectedNumber(period: string) {\n    const numberOptions = this.calculateOptions(period);\n    this.numberOptions = numberOptions.map(i => {\n      return {\n        label: i.toString(),\n        value: i.toString(),\n      };\n    });\n    this.selectedNumber = parseInt(this.numberOptions[0].value);\n  }\n\n  render() {\n    return (\n      <div class=\"time-period-selector\">\n        {typeof this.selectedNumber == 'number' && (\n          <input-dropdown\n            id=\"time-number\"\n            name={'time-number'}\n            inputValue={this.selectedNumber.toString()}\n            exportparts=\"id_dropdown: tps__number-dropdown, id_dropdown-input: tps__number-dropdown-button, id_dropdown-content: tps__number-dropdown-content\"\n            options={this.numberOptions}\n            defaultInputOption={this.numberOptions.find(i => i.value == this.selectedNumber.toString())}\n          />\n        )}\n        {typeof this.selectedPeriod == 'string' && (\n          <select-dropdown\n            id=\"time-period\"\n            name={'time-period'}\n            options={this.timePeriodOptions}\n            exportparts=\"sd_dropdown: tps__period-dropdown, sd_dropdown-button: tps__period-dropdown-button, sd_dropdown-content: tps__period-dropdown-content\"\n            pluralizedLabel={this.selectedNumber > 1 ? 's' : ''}\n            defaultSelectedOption={this.timePeriodOptions.find(i => i.value == this.selectedPeriod)}\n            withSearch={false}\n          />\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":"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"}