{"version":3,"names":["multiSelectDropdownCss","MultiSelectDropdownStyle0","MultiSelectDropdown","this","options","componentDidLoad","debug","availableOptions","componentDidRender","isOpen","shouldFocusFirstOption","ariaActivedescendant","value","focusOption","handleOutsideClick","event","path","composedPath","isClickInside","includes","el","selectOption","option","map","o","selected","selectedOptions","filter","selectedOptionsChanged","emit","name","toggleDropdown","handleSelectButtonKeyDown","key","preventDefault","handleListboxKeydown","e","items","currentIndex","findIndex","item","shiftKey","nextIndex","length","prevIndex","index","elementId","element","shadowRoot","getElementById","focus","scrollIntoView","behavior","block","getSelectedOptions","renderOption","h","id","role","tabindex","onClick","stopImmediatePropagation","class","htmlFor","type","checked","label","render","Host","part","error","dropbtn","open","onKeyDown","width","height"],"sources":["src/components/design-system/multi-select-dropdown/multi-select-dropdown.scss?tag=multi-select-dropdown&encapsulation=shadow","src/components/design-system/multi-select-dropdown/multi-select-dropdown.tsx"],"sourcesContent":["@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  width: inherit;\n  @include default-css-variables;\n}\n\n.dropdown {\n  display: inline-block;\n  width: 100%;\n  position: relative;\n\n  .dropdown-label {\n    display: flex;\n    align-items: center;\n    gap: 0.25rem;\n    color: var(--nylas-base-800);\n  }\n\n  span.error {\n    color: var(--nylas-error);\n    font-size: 14px;\n  }\n}\n\n.dropbtn {\n  width: inherit;\n  height: 48px;\n  color: black;\n  padding: 0.5rem;\n  font-size: 1rem;\n  cursor: pointer;\n  display: flex;\n  gap: 0.5rem;\n  justify-content: space-between;\n  align-items: center;\n  background: transparent;\n  border: 1px solid var(--nylas-base-200);\n  border-radius: var(--nylas-border-radius-2x);\n\n  &.focus {\n    background: transparent;\n  }\n\n  &.error {\n    border: 1px solid var(--nylas-error);\n  }\n\n  &:hover,\n  &:active {\n    border: 1px solid var(--nylas-primary);\n  }\n\n  &:active {\n    outline: 2px solid var(--nylas-primary);\n  }\n\n  span {\n    &.open {\n      transform: rotate(90deg);\n    }\n\n    &.closed {\n      transform: rotate(270deg);\n    }\n  }\n}\n\n.dropdown-content {\n  display: block;\n  margin-top: 0.5rem;\n  background-color: var(--nylas-base-0);\n  width: 100%;\n  max-height: 336px;\n  overflow: auto;\n  z-index: 1;\n  border-radius: 4px;\n  position: absolute;\n  top: calc(48px + 24px);\n  box-shadow: 0px 4px 6px -2px #0000000d;\n  box-shadow: 0px 10px 15px -3px #0000001a;\n}\n\n.dropdown-content ul {\n  padding: 0;\n  list-style-type: none;\n  color: var(--nylas-base-900);\n  max-height: 336px;\n\n  li {\n    padding: 16px, 12px, 16px, 12px;\n    color: black;\n    padding: 12px 16px;\n    text-decoration: none;\n    display: block;\n    font-family: inherit;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 20px;\n    letter-spacing: 0px;\n    text-align: left;\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n      background-color: var(--nylas-base-100);\n    }\n\n    label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n\n      input {\n        margin: 0;\n      }\n    }\n  }\n}\n\n.selected-options {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n  padding: 0.5rem 0;\n  margin-top: 0.25rem;\n  background: var(--nylas-base-0);\n\n  .selected-option {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    padding: 4px 8px;\n    border-radius: var(--nylas-border-radius-2x);\n    background: var(--nylas-base-100);\n    color: var(--nylas-base-800);\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.5rem;\n    letter-spacing: 0.5px;\n\n    button {\n      background: transparent;\n      border: none;\n      cursor: pointer;\n      padding: 0;\n\n      &:hover {\n        color: var(--nylas-primary);\n      }\n    }\n  }\n}","import { debug } from '@/utils/utils';\nimport { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, h } from '@stencil/core';\n\ninterface DropdownOption {\n  label: string;\n  value: string;\n  selected?: boolean; // Add a selected flag to each option\n}\n\n@Component({\n  tag: 'multi-select-dropdown',\n  styleUrl: 'multi-select-dropdown.scss',\n  shadow: true,\n})\nexport class MultiSelectDropdown {\n  @Element() el!: HTMLElement;\n\n  // Props\n  /**\n   * The name of the dropdown\n   */\n  @Prop() name!: string;\n\n  /**\n   * The label of the dropdown\n   */\n  @Prop() label?: string;\n\n  /**\n   * The options to display in the dropdown\n   */\n  @Prop() options: DropdownOption[] = [];\n\n  /**\n   * Error message to display\n   */\n  @Prop() error?: string = '';\n\n  // States\n  /**\n   * The copy of the options to display in the dropdown\n   */\n  @State() availableOptions: DropdownOption[] = this.options;\n  /**\n   * The open state of the dropdown\n   */\n  @State() isOpen: boolean = false;\n  /**\n   * The aria-activedescendant attribute for the listbox element to indicate the currently active\n   */\n  @State() ariaActivedescendant: string = '';\n\n  /**\n   * This flag is used to focus the first option when the dropdown is opened\n   * and reset after the first option is focused\n   */\n  @State() shouldFocusFirstOption: boolean = false;\n\n  // Events\n  /**\n   * This event is fired when the selected options are changed\n   */\n  @Event({ bubbles: true, composed: true }) selectedOptionsChanged!: EventEmitter<{\n    value: string[];\n    name: string;\n  }>;\n\n  // Lifecycle methods\n  componentDidLoad() {\n    debug('multi-select-dropdown', 'componentDidLoad');\n    if (this.options) {\n      this.availableOptions = this.options;\n    }\n  }\n\n  componentDidRender() {\n    debug('multi-select-dropdown', 'componentDidRender');\n    if (this.isOpen && this.shouldFocusFirstOption) {\n      // The dropdown is open and we should focus the first option\n      this.ariaActivedescendant = this.availableOptions[0]?.value;\n      this.focusOption(0);\n      // Reset the flag\n      this.shouldFocusFirstOption = false;\n    }\n  }\n\n  // Event listeners\n  @Listen('click', { target: 'document', capture: true })\n  handleOutsideClick(event: MouseEvent) {\n    // Get the path of the event\n    const path = event.composedPath();\n\n    // Check if the path includes the host element\n    const isClickInside = path.includes(this.el);\n\n    if (!isClickInside && this.isOpen) {\n      this.isOpen = false;\n    }\n  }\n\n  // Methods\n\n  selectOption(option: DropdownOption): void {\n    this.availableOptions = this.availableOptions.map(o => {\n      if (o.value === option.value) {\n        o.selected = option.selected ? false : true;\n      }\n      return o;\n    });\n    const selectedOptions = this.availableOptions.filter(o => o.selected).map(o => o.value);\n    this.selectedOptionsChanged.emit({\n      value: selectedOptions,\n      name: this.name,\n    });\n  }\n\n  toggleDropdown(): void {\n    this.isOpen = !this.isOpen;\n    if (this.isOpen) {\n      this.shouldFocusFirstOption = true;\n    } else {\n      this.ariaActivedescendant = '';\n    }\n  }\n\n  handleSelectButtonKeyDown(event: KeyboardEvent): void {\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'Enter':\n        event.preventDefault();\n        if (!this.isOpen) {\n          this.toggleDropdown();\n        }\n        break;\n      case 'Escape':\n        this.isOpen = false;\n        break;\n    }\n  }\n\n  handleListboxKeydown(e: KeyboardEvent) {\n    const items = this.availableOptions;\n    const currentIndex = items.findIndex(item => item.value === this.ariaActivedescendant);\n\n    switch (e.key) {\n      case 'ArrowDown':\n      case 'Tab':\n        if (!e.shiftKey) {\n          e.preventDefault();\n          const nextIndex = currentIndex + 1 < items.length ? currentIndex + 1 : 0;\n          this.ariaActivedescendant = items[nextIndex].value;\n          this.focusOption(nextIndex);\n        } else {\n          e.preventDefault();\n          const prevIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : items.length - 1;\n          this.ariaActivedescendant = items[prevIndex].value;\n          this.focusOption(prevIndex);\n        }\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        const prevIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : items.length - 1;\n        this.ariaActivedescendant = items[prevIndex].value;\n        this.focusOption(prevIndex);\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (this.ariaActivedescendant) {\n          this.selectOption(items[currentIndex]);\n        }\n        break;\n      case 'Escape':\n        this.isOpen = false;\n        break;\n    }\n  }\n\n  focusOption(index: number) {\n    const option = this.availableOptions[index];\n    if (!option) return; // Guard clause in case index is out of bounds\n\n    const elementId = option.value;\n    const element = this.el.shadowRoot?.getElementById(elementId) as HTMLLIElement;\n\n    if (element) {\n      element.focus(); // Set focus on the element\n      element.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n    }\n  }\n\n  getSelectedOptions() {\n    return this.availableOptions.filter(option => option.selected);\n  }\n\n  renderOption(option: DropdownOption) {\n    return (\n      <li\n        key={option.value}\n        id={option.value}\n        role=\"option\"\n        tabindex=\"0\"\n        aria-selected={option.selected ? 'true' : 'false'}\n        onClick={e => {\n          e.stopImmediatePropagation();\n          this.selectOption(option);\n        }}\n        class={{ selected: !!option.selected }}\n      >\n        <label htmlFor={option.value}>\n          <input aria-hidden=\"true\" id={option.value} type=\"checkbox\" checked={option.selected} />\n          <span>{option.label}</span>\n        </label>\n      </li>\n    );\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"dropdown\" part=\"msd_dropdown\">\n          <label class=\"dropdown-label\">\n            {this.label}\n            <slot name=\"label-icon\" aria-hidden=\"true\"></slot>\n          </label>\n          <button\n            name={this.name}\n            part={`msd_dropdown-button ${this.error ? 'msd_dropdown-button--error' : ''}`}\n            class={{ dropbtn: true, open: this.isOpen, error: !!this.error }}\n            onClick={() => this.toggleDropdown()}\n            aria-haspopup=\"listbox\"\n            aria-expanded={this.isOpen ? 'true' : 'false'}\n            aria-label={this.name}\n            onKeyDown={e => this.handleSelectButtonKeyDown(e)}\n          >\n            <slot name=\"select-icon\" aria-hidden=\"true\"></slot>\n            <span class=\"selected-option\" part=\"msd_dropdown-button-selected-label\">\n              {this.getSelectedOptions().length > 1 ? `Multiple options selected` : this.availableOptions.filter(o => o.selected)[0]?.label ?? this.availableOptions[0]?.label}\n            </span>\n            <span class={this.isOpen ? 'open' : 'closed'} aria-hidden=\"true\">\n              <chevron-icon width=\"16\" height=\"16\" />\n            </span>\n          </button>\n          {this.error ? <span class=\"error\">{this.error}</span> : null}\n          {this.isOpen ? null : (\n            <div class={'selected-options'}>\n              {this.getSelectedOptions().map(option => (\n                <span class=\"selected-option\">\n                  {option.label}\n                  <button key={option.label} onClick={() => this.selectOption(option)}>\n                    <close-icon />\n                  </button>\n                </span>\n              ))}\n            </div>\n          )}\n          {this.isOpen ? (\n            <div class=\"dropdown-content\" part=\"msd_dropdown-content\">\n              <ul\n                tabindex=\"-1\"\n                role=\"listbox\"\n                aria-label={this.name}\n                aria-multiselectable={true}\n                aria-activedescendant={this.ariaActivedescendant}\n                onKeyDown={e => this.handleListboxKeydown(e)}\n              >\n                {this.availableOptions.map(option => this.renderOption(option))}\n              </ul>\n            </div>\n          ) : null}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}