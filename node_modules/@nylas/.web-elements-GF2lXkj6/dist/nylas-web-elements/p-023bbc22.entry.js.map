{"version":3,"names":["iconCss","GoogleLogoIconStyle0","GoogleLogoIcon","render","h","key","width","this","height","viewBox","fill","xmlns","d","id","MicrosoftLogoIconStyle0","MicrosoftLogoIcon","Tab","TabContents","formState","activeTab","children","Fragment","class","hide","EventInfo","slot","name","exportparts","Availability","participants","BookingOptions","readOnly","Communications","Participants","PageStyles","BookingForm","nylasEditorTabsCss","NylasEditorTabsStyle0","NylasEditorTabs","setError","error","message","formSubmissionHandler","async","event","preventDefault","formEvent","formSubmitted","emit","debug","valid","formRef","checkValidity","defaultPrevented","validationMessage","isLoading","hasUnsavedChanges","updateFormState","title","description","duration","availability","bookingCalendar","location","bookingType","buffer","availableDaysInFuture","minCancellationNotice","minBookingNotice","cancellationPolicy","timeslotInterval","additionalGuestsHidden","hideCancellationOptions","hideReschedulingOptions","participantOpenHours","additionalFields","participantCalendars","conferencing","participantBookingCalendars","reminders","emailTemplate","redirectUrl","availabilityMethod","slug","appearance","organizer","selectedConfiguration","find","p","is_organizer","organizerCalendars","email","organizerBookingCalendar","booking","calendar_id","durationMinutes","parseInt","participantsList","length","currentUser","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","calendar_ids","open_hours","configObject","version","duration_minutes","interval_minutes","interval","round_to","roundTo","availability_rules","availability_method","before","after","default_open_hours","openHours","DEFAULT_OPEN_HOURS","round_robin_group_id","map","undefined","event_booking","toString","booking_type","scheduler","cancellation_policy","available_days_in_future","min_cancellation_notice","min_booking_notice","hide_additional_guests","hide_cancellation_options","hide_rescheduling_options","additional_fields","email_template","confirmation_redirect_url","configObjectWithDeveloperSettings","mergeDeep","finalConfig","action","isConfigRoundRobin","resetLoadingState","_e","changesSaved","setTimeout","hasError","checkForClientSideErrors","schedulerConfigChanged","config","errorMessage","isOrganizerConfirmationType","organizerConfirmationUrl","organizer_confirmation_url","Object","entries","forEach","entry","field","label","type","options","option","Error","configChangedHandler","newConfig","getFormStateFromConfig","userChangedHandler","newUser","connectedCallback","componentWillLoad","componentDidLoad","firstVisibleTab","host","querySelector","disconnectedCallback","handleValueChanged","value","detail","setFormState","schedulerEditorFormUpdated","organizerParticipant","console","info","calendarIds","reduce","acc","JSON","parse","settings","overrides","formData","FormData","setActiveTab","e","tabName","hideTab","tab","hideEditorTabs","includes","Host","onSubmit","ref","el","noValidate","mode","active","part","onClick","calendars","schedulerPreviewLink","disabled","clickHandler","previewEvent","previewButtonClicked","window","open","parsePreviewLink","variant","cancelButtonClick","__decorate","RegisterComponent","stateToProps","Map","eventToProps","nylasSchedulerConfigConnector","checkForErrors","response","data","schedulerConfig","updateConfiguration","createConfiguration","_","schedulerConfigStore","state","_nylasSchedulerConfigConnector","localPropsToProp","fireRegisterEvent","nylasListConfigurationsCss","NylasListConfigurationsStyle0","NylasListConfigurations","listConfigurationsNextCursorChangedHandler","newVal","oldVal","disableNextPageButton","currentCursor","configurations","initListConfigurations","handleNylasFormDropdownChanged","index","split","deleteButtonClick","configuration","navigator","clipboard","writeText","getState","setState","getDurationString","hours","Math","floor","minutes","getActionLabelHTML","actionStyle","display","alignItems","gap","dangerStyle","color","style","previousPageClickedHandler","previousCursors","pop","prevCursor","cursor","nextPageClickedHandler","createButtonClick","colSpan","i","editButtonClick","labelHTML","defaultSelectedOption","dropdownButtonText","withSearch","withChevron","connector","getConfigurations","resetSelectedConfiguration","deleteConfiguration"],"sources":["src/common/icons/icon.css?tag=google-logo-icon&encapsulation=scoped","src/common/icons/google-logo.tsx","src/common/icons/icon.css?tag=microsoft-logo-icon&encapsulation=scoped","src/common/icons/microsoft-logo.tsx","src/components/scheduler-editor/nylas-editor-tabs/tab-contents.tsx","src/components/scheduler-editor/nylas-editor-tabs/nylas-editor-tabs.scss?tag=nylas-editor-tabs&encapsulation=scoped","src/components/scheduler-editor/nylas-editor-tabs/nylas-editor-tabs.tsx","src/components/scheduler-editor/nylas-list-configurations/nylas-list-configurations.scss?tag=nylas-list-configurations&encapsulation=shadow","src/components/scheduler-editor/nylas-list-configurations/nylas-list-configurations.tsx"],"sourcesContent":[":host {\n  display: flex;\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'google-logo-icon',\n  styleUrl: 'icon.css',\n  scoped: true,\n})\nexport class GoogleLogoIcon {\n  @Prop() width: string = '24';\n  @Prop() height: string = '24';\n\n  render() {\n    // Spam icon svg\n    return (\n      <svg width={this.width} height={this.height} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clip-path=\"url(#clip0_959_12452)\">\n          <path\n            d=\"M23.745 12.27C23.745 11.48 23.675 10.73 23.555 10H12.255V14.51H18.725C18.435 15.99 17.585 17.24 16.325 18.09V21.09H20.185C22.445 19 23.745 15.92 23.745 12.27Z\"\n            fill=\"#4285F4\"\n          />\n          <path\n            d=\"M12.255 24C15.495 24 18.205 22.92 20.185 21.09L16.325 18.09C15.245 18.81 13.875 19.25 12.255 19.25C9.12504 19.25 6.47505 17.14 5.52505 14.29H1.54504V17.38C3.51504 21.3 7.56504 24 12.255 24Z\"\n            fill=\"#34A853\"\n          />\n          <path\n            d=\"M5.52501 14.2901C5.27501 13.5701 5.145 12.8001 5.145 12.0001C5.145 11.2001 5.28501 10.4301 5.52501 9.71012V6.62012H1.545C0.725004 8.24012 0.255005 10.0601 0.255005 12.0001C0.255005 13.9401 0.725004 15.7601 1.545 17.3801L5.52501 14.2901Z\"\n            fill=\"#FBBC05\"\n          />\n          <path\n            d=\"M12.255 4.75C14.025 4.75 15.605 5.36 16.855 6.55L20.275 3.13C18.205 1.19 15.495 0 12.255 0C7.56504 0 3.51504 2.7 1.54504 6.62L5.52505 9.71C6.47505 6.86 9.12504 4.75 12.255 4.75Z\"\n            fill=\"#EA4335\"\n          />\n        </g>\n        <defs>\n          <clipPath id=\"clip0_959_12452\">\n            <rect width={24} height={24} fill=\"white\" />\n          </clipPath>\n        </defs>\n      </svg>\n    );\n  }\n}\n",":host {\n  display: flex;\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'microsoft-logo-icon',\n  styleUrl: 'icon.css',\n  scoped: true,\n})\nexport class MicrosoftLogoIcon {\n  @Prop() width: string = '22';\n  @Prop() height: string = '22';\n\n  render() {\n    // Spam icon svg\n    return (\n      <svg width={this.width} height={this.height} viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M0.043457 0.043457H10.4782V10.4782H0.043457V0.043457Z\" fill=\"#F35325\" />\n        <path d=\"M11.5217 0.043457H21.9565V10.4782H11.5217V0.043457Z\" fill=\"#81BC06\" />\n        <path d=\"M0.043457 11.5217H10.4782V21.9565H0.043457V11.5217Z\" fill=\"#05A6F0\" />\n        <path d=\"M11.5217 11.5217H21.9565V21.9565H11.5217V11.5217Z\" fill=\"#FFBA08\" />\n      </svg>\n    );\n  }\n}\n","import { Fragment, h } from '@stencil/core';\n\nexport enum Tab {\n  EventInfo = 'eventInfo',\n  Availability = 'availability',\n  BookingOptions = 'bookingOptions',\n  Communications = 'communications',\n  Participants = 'participants',\n  BookingForm = 'bookingForm',\n  PageStyles = 'pageStyles',\n}\n\nexport type TabContentsProps = {\n  id: string;\n  formState: any;\n  activeTab: Tab;\n  calendars?: any[];\n  currentUser?: any;\n};\n\nexport default function TabContents({ id, formState, activeTab }: TabContentsProps, children: any) {\n  return (\n    <Fragment>\n      <div key={`event-info-${id}`} class={{ hide: activeTab !== Tab.EventInfo }}>\n        <nylas-event-info>\n          <div slot=\"inputs\">\n            <nylas-event-title name=\"title\" exportparts=\"net, net__title, net__dropdown-content\" />\n            <nylas-event-duration\n              name=\"duration\"\n              exportparts=\"ned, ned__dropdown, ned__dropdown-button, ned__dropdown-content, ned__input_dropdown, ned__input_dropdown-input, ned__input_dropdown-content\"\n            />\n            <nylas-event-location name=\"location\" exportparts=\"nel, nel__location, nel__dropdown, nel__dropdown-button, nel__dropdown-content\" />\n            <nylas-event-description name=\"description\" exportparts=\"nedesc, nedesc__textarea\" />\n          </div>\n        </nylas-event-info>\n      </div>\n      <div key={`availability-${id}`} class={{ hide: activeTab !== Tab.Availability }}>\n        <nylas-participant-booking-calendars participants={formState.participants} name=\"participant-booking-calendars\" />\n        <nylas-connected-calendars participants={formState.participants} name=\"connected-calendars\" />\n        <nylas-availability-picker\n          name=\"availability\"\n          exportparts={\n            'nap__header, nap__select-timezone, nap__select-timezone-button, nap__select-timezone-dropdown-content, nap__availability, nap__day, nap__time-ranges, nap__time-range, nap__add-time-range, nap__time-picker-container, nap__time-picker-input, nap__time-picker-times'\n          }\n        />\n      </div>\n      <div key={`booking-options-${id}`} class={{ hide: activeTab !== Tab.BookingOptions }}>\n        <nylas-scheduling-method\n          name=\"availability-method\"\n          readOnly={true}\n          exportparts=\"nsm, nsm__header, nsm__input-label, nsm__dropdown, nsm__dropdown-button, nsm__dropdown-content\"\n        />\n        <nylas-custom-booking-flow>\n          <div slot=\"inputs\">\n            <nylas-booking-confirmation-type name=\"confirmation-type\" exportparts={'nbct, nbct__header, nbct__dropdown, nbct__dropdown-button, nbct__dropdown-content'} />\n            <nylas-booking-confirmation-redirect\n              name=\"confirmation-redirect\"\n              exportparts={'nbcr, nbcr__header, nbcr__dropdown, nbcr__dropdown-button, nbcr__dropdown-content, nbcr__input-textfield'}\n            />\n          </div>\n        </nylas-custom-booking-flow>\n        <nylas-buffer-time\n          name=\"buffer-time\"\n          exportparts={\n            'nbt, nbt__header, nbt__body, nbt__dropdown-before, nbt__dropdown-button-before, nbt__dropdown-content-before, nbt__dropdown-after, nbt__dropdown-button-after, nbt__dropdown-content-after, nbt__preview'\n          }\n        />\n        <nylas-event-limits>\n          <div slot=\"inputs\">\n            <nylas-min-booking-notice\n              name=\"min-booking-notice\"\n              exportparts=\"nmbn, nmbn__number-dropdown, nmbn__number-dropdown-button, nmbn__number-dropdown-content, nmbn__period-dropdown, nmbn__period-dropdown-button, nmbn__period-dropdown-content\"\n            />\n            <nylas-limit-future-bookings\n              name=\"limit-future-bookings\"\n              exportparts=\"nlfb, nlfb__number-dropdown, nlfb__number-dropdown-button, nlfb__number-dropdown-content, nlfb__period-dropdown, nlfb__period-dropdown-button, nlfb__period-dropdown-content\"\n            />\n            <nylas-min-cancellation-notice\n              name=\"min-cancellation-notice\"\n              exportparts=\"nmcn, nmcn__number-dropdown, nmcn__number-dropdown-button, nmcn__number-dropdown-content, nmcn__period-dropdown, nmcn__period-dropdown-button, nmcn__period-dropdown-content\"\n            />\n            <nylas-cancellation-policy name=\"cancellation-policy\" exportparts=\"ncpolicy, ncpolicy__textarea\" />\n          </div>\n        </nylas-event-limits>\n        <nylas-timeslot-interval name=\"timeslot-interval\" exportparts=\"nti, nti__header, nti__input-label, nti__dropdown, nti__dropdown-button, nti__dropdown-content\" />\n        <nylas-customize-booking-settings\n          name=\"customize-booking-settings\"\n          exportparts=\"ncbs, ncbs__header, ncbs__settings, ncbs__settings-div, ncbs__additional_guests, ncbs__cancellation_options, ncbs__rescheduling_options\"\n        />\n      </div>\n      <div key={`communications-${id}`} class={{ hide: activeTab !== Tab.Communications }}>\n        <div class=\"tab-header\">\n          <h3>Event communications</h3>\n          <p>Set up automatic confirmation emails.</p>\n        </div>\n        <nylas-confirmation-email\n          name=\"confirmation-email-template\"\n          exportparts={\n            'nce, nce__tab-heading, nce__header, nce__body, nce__confirmation-email-toggle--container, nce__summary, nce__reminder-input_dropdown, nce__reminder-input_dropdown-input, nce__reminder-input_dropdown-content'\n          }\n        />\n        {/* <nylas-reminder-emails\n            name=\"reminder-emails\"\n            eventReminders={formState.reminders?.overrides ?? []}\n            participants={formState.participants}\n            exportparts={\n              'nre, nre__tab-heading, nre__header, nre__body, nre__confirmation-email-toggle--container, nre__summary, nre__reminder-input_dropdown, nre__reminder-input_dropdown-input, nre__reminder-input_dropdown-content'\n            }\n          /> */}\n      </div>\n      <div key={`participants-${id}`} class={{ hide: activeTab !== Tab.Participants }}>\n        <nylas-additional-participants\n          name=\"participants\"\n          exportparts=\"nap__title, nap__subtitle, nap__content, nap__input_group, nap__input_wrapper, nap__input, nap__remove-participant\"\n        />\n        <nylas-participants-custom-availability\n          participants={formState.participants}\n          name=\"participant-custom-availability\"\n          exportparts=\"npca, npca__header, npca__content, npca__participant-container, npca__participant-title, npca__participant-toggle--container, npca__toggle-label, npca__toggle-input, npca__toggle-slider\"\n        />\n      </div>\n      <div key={`page-styles-${id}`} class={{ hide: activeTab !== Tab.PageStyles }}>\n        <nylas-custom-event-slug name=\"custom-event-slug\" exportparts=\"nces, nces__body, nces__header, nces__drawer-toggle--container, nces__input-textfield\" />\n        <nylas-page-name name=\"page-name\" exportparts=\"npn, npn__body, npn__header, npn__drawer-toggle--container, npn__input-textfield\" />\n        <nylas-page-styling\n          name=\"page-styling\"\n          exportparts=\"nps, nps__header, nps__drawer-toggle--container, nps__body, nps__title-input-textfield, nps__company-logo-input-textfield, nps__color-picker, nps__color-picker-button, nps__color-picker-button-label, nps__color-picker-selected-label, nps__submit-button-label-input-textfield, nps__message-textarea\"\n        >\n          {children}\n        </nylas-page-styling>\n      </div>\n      <div key={`booking-form-${id}`} class={{ hide: activeTab !== Tab.BookingForm }}>\n        <nylas-booking-form-config name=\"additional-fields\" />\n      </div>\n    </Fragment>\n  );\n}\n","@import '../../../common/styles/variables.scss';\n@import '../../../common/mixins/buttons.scss';\n\n:host {\n  display: block;\n  @include default-css-variables;\n}\n\n.scheduler-editor {\n  display: flex;\n  flex-direction: column;\n  height: inherit;\n\n  .form-contents {\n    height: calc(100% - 80px);\n    display: grid;\n    grid-template-columns: minmax(224px, 25%) 1fr;\n\n    @media #{$mobile} {\n      display: table-column-group;\n      height: auto;\n    }\n\n    .tabs {\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid var(--nylas-base-200);\n\n      @media #{$mobile} {\n        border-right: none;\n      }\n\n      background-color: var(--nylas-base-25);\n\n      .tab {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        padding: 0.5rem 1rem;\n        color: var(--nylas-base-900);\n        background: var(--nylas-base-0);\n        border: none;\n        height: 56px;\n        font-family: var(--nylas-font-family);\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 24px;\n        cursor: pointer;\n\n        &:not(:first-of-type) {\n          margin-top: 0.25rem;\n        }\n\n        &:last-of-type {\n          margin-bottom: 0.25rem;\n        }\n\n        &.active {\n          font-weight: 600;\n          background: var(--nylas-base-0);\n          color: var(--nylas-primary);\n          border-left: 4px solid var(--nylas-primary);\n          box-shadow: 0px 1px 2px 0px #0000000f;\n          box-shadow: 0px 1px 3px 0px #0000001a;\n        }\n\n        &.hide {\n          display: none;\n        }\n      }\n    }\n\n    .tab-content {\n      max-width: 692px;\n      overflow-y: auto;\n      overflow-x: hidden;\n\n      .hide {\n        display: none;\n      }\n\n      nylas-event-info,\n      nylas-event-limits {\n        width: inherit;\n\n        div[slot='inputs'] {\n          display: flex;\n          flex-direction: column;\n          gap: 1rem;\n        }\n      }\n\n      .tab-header {\n        display: flex;\n        flex-direction: column;\n        margin: 1rem 1rem 0.5rem;\n        row-gap: 4px;\n\n        h3 {\n          margin: 0;\n          font-size: 1rem;\n          font-weight: 600;\n          line-height: 20px;\n          color: var(--nylas-base-900);\n          text-align: left;\n        }\n\n        p {\n          margin: 0;\n          font-size: 0.875rem;\n          font-weight: 400;\n          line-height: 20px;\n          color: var(--nylas-base-600);\n          text-align: left;\n        }\n      }\n    }\n  }\n}\n\n.footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n  min-height: 80px;\n  padding: 0 1rem;\n  border-top: 1px solid var(--nylas-base-200);\n\n  @media #{$mobile} {\n    flex-direction: column;\n    height: auto;\n  }\n\n  .preview {\n    @media #{$mobile} {\n      margin-top: 1rem;\n      width: 100%;\n    }\n  }\n\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    justify-self: flex-end;\n    gap: 1rem;\n\n    @media #{$mobile} {\n      flex-direction: column-reverse;\n      width: 100%;\n    }\n\n    p {\n      max-width: 524px;\n\n      &.unsaved-changes {\n        color: var(--nylas-base-600);\n      }\n\n      &.saved-changes {\n        color: var(--nylas-success);\n      }\n\n      &.error {\n        color: var(--nylas-error);\n      }\n\n      &.error-full-width {\n        max-width: 660px;\n      }\n    }\n\n    button-component {\n      @media #{$mobile} {\n        width: 100%;\n      }\n    }\n\n    button {\n      @include primary-button;\n      width: 148px;\n\n      span {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.5rem;\n      }\n    }\n  }\n}","import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug, mergeDeep, parsePreviewLink } from '@/utils/utils';\nimport { AdditionalFields, Appearance, AvailabilityMethod, BookingType, Calendar, Conference, Configuration, EmailTemplate, OpenHours, Participant, Reminders } from '@nylas/core';\nimport { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport TabContents, { Tab } from './tab-contents';\nimport { User } from '@/common/nylas-api-request';\nimport { DEFAULT_OPEN_HOURS } from '@/common/constants';\nimport { DataResponseReturnType } from '@/common/types';\n\ntype SchedulerEventDetail = {\n  config: Partial<Configuration>;\n  action: 'create' | 'edit';\n  resetLoadingState?: (e: CustomEvent) => void;\n  setError?: (error: Error) => void;\n};\n\n/**\n * The `nylas-editor-tabs` component is a UI component that displays the editor tabs for the scheduler editor.\n * @part nap__title - [nylas-additional-participants] The title of the component.\n * @part nap__subtitle - [nylas-additional-participants] The subtitle of the component.\n * @part nap__content - [nylas-additional-participants] The content of the component.\n * @part nap__input - [nylas-additional-participants] The input of the component.\n * @part nap__remove-participant - [nylas-additional-participants] The remove participant button of the component.\n * @part nap__add-participant - [nylas-additional-participants] The add participant button of the component.\n * @part nap__header - [nylas-availability-picker] The header of the availability picker\n * @part nap__select-timezone - [nylas-availability-picker] The timezone selection container\n * @part nap__select-timezone-button -[nylas-availability-picker]  The timezone selection button\n * @part nap__select-timezone-dropdown-content -[nylas-availability-picker] The timezone selection dropdown content\n * @part nap__availability - [nylas-availability-picker] The availability container\n * @part nap__day - [nylas-availability-picker] The day container\n * @part nap__time-ranges - [nylas-availability-picker] The time ranges container\n * @part nap__time-range - [nylas-availability-picker] The time range container\n * @part nap__add-time-range - [nylas-availability-picker] The add time range button\n * @part nap__time-picker-container -[nylas-availability-picker]  The time picker container\n * @part nap__time-picker-input - [nylas-availability-picker]  The time picker input\n * @part nap__time-picker-times - [nylas-availability-picker] The time picker times\n * @part nbcp - [nylas-booking-calendar-picker] The booking calendar picker container\n * @part nbcp__header - [nylas-booking-calendar-picker] The header of the booking calendar picker\n * @part nbcp__input-label - [nylas-booking-calendar-picker] The input label of the booking calendar picker\n * @part nbcp__dropdown - [nylas-booking-calendar-picker] The dropdown container\n * @part nbcp__dropdown-button - [nylas-booking-calendar-picker] The dropdown button\n * @part nbcp__dropdown-content - [nylas-booking-calendar-picker] The dropdown content\n * @part nbt - [nylas-buffer-time] The buffer time container\n * @part nbt__header - [nylas-buffer-time] The header of the buffer time\n * @part nbt__body - [nylas-buffer-time] The body of the buffer time\n * @part nbt__dropdown-before - [nylas-buffer-time] The before buffer dropdown container\n * @part nbt__dropdown-button-before - [nylas-buffer-time] The before buffer dropdown button\n * @part nbt__dropdown-content-before - [nylas-buffer-time] The before buffer dropdown content\n * @part nbt__dropdown-after - [nylas-buffer-time] The after buffer dropdown container\n * @part nbt__dropdown-button-after - [nylas-buffer-time] The after buffer dropdown button\n * @part nbt__dropdown-content-after - [nylas-buffer-time] The after buffer dropdown content\n * @part nbt__preview - [nylas-buffer-time] The buffer time preview\n * @part ncp - [nylas-calendar-picker] The calendar picker container\n * @part ncp__header - [nylas-calendar-picker] The header of the calendar picker\n * @part ncp__dropdown - [nylas-calendar-picker] The dropdown container\n * @part ncp__dropdown-button - [nylas-calendar-picker] The dropdown button\n * @part ncp__dropdown-content - [nylas-calendar-picker] The dropdown content\n * @part ncbf - [nylas-custom-booking-flow] The custom booking flow container\n * @part ncbf__header - [nylas-custom-booking-flow] The header of the custom booking flow\n * @part ncbf__dropdown - [nylas-custom-booking-flow] The dropdown container\n * @part ncbf__dropdown-button - [nylas-custom-booking-flow] The dropdown button\n * @part ncbf__dropdown-content - [nylas-custom-booking-flow] The dropdown content\n * @part nedesc - [nylas-event-description] The event description container\n * @part nedesc__textarea - [nylas-event-description] The event description textarea\n * @part ned - [nylas-event-duration] The event duration container\n * @part ned__dropdown - [nylas-event-duration] The dropdown container for the duration increment\n * @part ned__dropdown-button - [nylas-event-duration] The dropdown button for the duration increment\n * @part ned__dropdown-content - [nylas-event-duration] The dropdown content for the duration increment\n * @part ned__input_dropdown - [nylas-event-duration] The input dropdown container for the duration minutes\n * @part ned__input_dropdown-input - [nylas-event-duration] The input for the duration minutes\n * @part ned__input_dropdown-content - [nylas-event-duration] The dropdown content for the input duration minutes\n * @part net - [nylas-event-title] The event title container\n * @part net__title - [nylas-event-title] The event title input\n * @part net__dropdown-content - [nylas-event-title] The token options container\n * @part nlfb - [nylas-limit-future-bookings] The limit future bookings container\n * @part nlfb__number-dropdown - [nylas-limit-future-bookings] The number dropdown container\n * @part nlfb__number-dropdown-button - [nylas-limit-future-bookings] The number dropdown button\n * @part nlfb__number-dropdown-content - [nylas-limit-future-bookings] The number dropdown content\n * @part nlfb__period-dropdown - [nylas-limit-future-bookings] The period dropdown container\n * @part nlfb__period-dropdown-button - [nylas-limit-future-bookings] The period dropdown button\n * @part nlfb__period-dropdown-content - [nylas-limit-future-bookings] The period dropdown content\n * @part nel - [nylas-event-location] The event location container\n * @part nel__location - [nylas-event-location] The event location input\n * @part nel__dropdown - [nylas-event-location] The dropdown container\n * @part nel__dropdown-button - [nylas-event-location] The dropdown button\n * @part nel__dropdown-content - [nylas-event-location] The dropdown content\n * @part nmbn - [nylas-min-booking-notice] The minimum booking notice container\n * @part nmbn__number-dropdown - [nylas-min-booking-notice] The number dropdown container\n * @part nmbn__number-dropdown-button - [nylas-min-booking-notice] The number dropdown button\n * @part nmbn__number-dropdown-content -[nylas-min-booking-notice] The number dropdown content\n * @part nmbn__period-dropdown - [nylas-min-booking-notice] The period dropdown container\n * @part nmbn__period-dropdown-button - [nylas-min-booking-notice] The period dropdown button\n * @part nmbn__period-dropdown-content - [nylas-min-booking-notice] The period dropdown content\n * @part nmcn - [nylas-min-cancellation-notice] The minimum cancellation notice container\n * @part nmcn__number-dropdown - [nylas-min-cancellation-notice] The number dropdown container\n * @part nmcn__number-dropdown-button - [nylas-min-cancellation-notice] The number dropdown button\n * @part nmcn__number-dropdown-content - [nylas-min-cancellation-notice] The number dropdown content\n * @part nmcn__period-dropdown - [nylas-min-cancellation-notice] The period dropdown container\n * @part nmcn__period-dropdown-button - [nylas-min-cancellation-notice] The period dropdown button\n * @part nmcn__period-dropdown-content - [nylas-min-cancellation-notice] The period dropdown content\n * @part ncpolicy - [nylas-cancellation-policy] The cancellation policy container\n * @part ncpolicy__textarea - [nylas-cancellation-policy] The cancellation policy textarea\n * @part nti - [nylas-timeslot-interval] The timeslot interval container\n * @part nti__header - [nylas-timeslot-interval] The header of the timeslot interval picker\n * @part nti__input-label - [nylas-timeslot-interval] The input label of the timeslot interval picker\n * @part nti__dropdown - [nylas-timeslot-interval] The dropdown container\n * @part nti__dropdown-button - [nylas-timeslot-interval] The dropdown button\n * @part nti__dropdown-content - [nylas-timeslot-interval] The dropdown content\n * @part npca - [nylas-participants-custom-availability] The participants custom availability container\n * @part npca__header - [nylas-participants-custom-availability] The header of the participants custom availability\n * @part npca__content - [nylas-participants-custom-availability] The content of the participants custom availability\n * @part npca__participant-container - [nylas-participants-custom-availability] The participant container\n * @part npca__participant-title - [nylas-participants-custom-availability] The participant title\n * @part npca__participant-toggle--container - [nylas-participants-custom-availability] The participant toggle container\n * @part npca__toggle-label - [nylas-participants-custom-availability] The toggle label\n * @part npca__toggle-input - [nylas-participants-custom-availability] The toggle input\n * @part npca__toggle-slider - [nylas-participants-custom-availability] The toggle slider\n * @part ncbs - [nylas-customize-booking-settings] The booking calendar picker container\n * @part ncbs__header - [nylas-customize-booking-settings] The header of the booking calendar picker\n * @part ncbs__settings - [nylas-customize-booking-settings] The settings container\n * @part ncbs__settings-div - [nylas-customize-booking-settings] The div inside the settings container that contains the checkbox and tooltip for each setting\n * @part ncbs__additional_guests - [nylas-customize-booking-settings] The additional guests setting\n * @part ncbs__cancellation_options - [nylas-customize-booking-settings] The cancellation options setting\n * @part ncbs__rescheduling_options - [nylas-customize-booking-settings] The rescheduling options setting\n * @part nsm - [nylas-scheduling-method] The booking calendar picker container\n * @part nsm__header - [nylas-scheduling-method] The header of the booking calendar picker\n * @part nsm__input-label - [nylas-scheduling-method] The input label of the booking calendar picker\n * @part nsm__dropdown - [nylas-scheduling-method] The dropdown container\n * @part nsm__dropdown-button - [nylas-scheduling-method] The dropdown button\n * @part nsm__dropdown-content - [nylas-scheduling-method] The dropdown content\n * @part npn - The nylas-page-name container\n * @part npn__body - The body of the event communication section\n * @part npn__header - The header of the event communication section\n * @part npn__drawer-toggle--container - The card's drawer toggle container\n * @part npn__input-textfield - The page name textfield\n */\n@Component({\n  tag: 'nylas-editor-tabs',\n  styleUrl: 'nylas-editor-tabs.scss',\n  scoped: true,\n})\nexport class NylasEditorTabs {\n  /**\n   * The form reference to access the form data.\n   */\n  private formRef!: HTMLFormElement;\n  /**\n   * The host element.\n   */\n  @Element() host!: HTMLNylasEditorTabsElement;\n  /**\n   * The list of calendars to use in the editor when configuring availability.\n   */\n  @Prop() calendars?: Calendar[];\n  /**\n   * The selected configuration to use in the editor when editing an existing configuration or creating a new one.\n   */\n  @Prop() selectedConfiguration?: Configuration;\n\n  /**\n   * The current logged in user.\n   */\n  @Prop() currentUser?: User;\n  /**\n   * The scheduler preview link to use when the user clicks on the preview button.\n   * You can use a placeholder `{config.id}` to replace the configuration id anywhere in the link.\n   */\n  @Prop({ attribute: 'scheduler-preview-link' }) schedulerPreviewLink: string = '';\n  /**\n   * The mode of the editor.\n   * - `app`: The editor is used as a standalone app.\n   * - `composable`: The editor is used as a composable component.\n   */\n  @Prop() mode?: 'app' | 'composable' = 'app';\n\n  /**\n   * This optional prop is used to hide tabs in the editor. Available tabs are:\n   * eventInfo, availability, participants, bookingOptions, bookingForm\n   */\n  @Prop() hideEditorTabs?: Tab[] = [];\n\n  /**\n   * The action to perform in the editor.\n   * - `create`: Create a new configuration.\n   * - `edit`: Edit an existing configuration.\n   */\n  @State() action: 'create' | 'edit' = 'create';\n  /**\n   * The active tab in the editor.\n   */\n  @State() activeTab: Tab = Tab.EventInfo;\n  /**\n   * The loading state of the editor.\n   */\n  @State() isLoading: boolean = false;\n  /**\n   * The unsaved changes state of the editor.\n   */\n  @State() hasUnsavedChanges: boolean = false;\n  /**\n   * The changes saved state of the editor.\n   */\n  @State() changesSaved: boolean = false;\n  /**\n   * The form state of the editor.\n   */\n  @State() formState: Partial<{\n    title: string;\n    description: string;\n    duration: string;\n    availability?: {\n      timezone: string;\n      openHours?: OpenHours[];\n    };\n    additionalFields?: Record<string, AdditionalFields>;\n    calendarIds: string[];\n    participantCalendars?: { [key: string]: string[] };\n    participants?: Participant[];\n    participantOpenHours?: { [key: string]: OpenHours[] };\n    participantBookingCalendars?: { [key: string]: string };\n    bookingCalendar?: string;\n    location?: string;\n    conferencing?: Conference;\n    bookingType?: string;\n    buffer?: { before: number; after: number };\n    cancellationPolicy?: string;\n    availableDaysInFuture?: number;\n    minCancellationNotice?: number;\n    minBookingNotice?: number;\n    timeslotInterval?: {\n      interval?: number;\n      roundTo?: number;\n    };\n    additionalGuestsHidden?: boolean;\n    hideCancellationOptions?: boolean;\n    hideReschedulingOptions?: boolean;\n    reminders?: Reminders;\n    emailTemplate?: EmailTemplate;\n    redirectUrl?: string;\n    availabilityMethod?: AvailabilityMethod;\n    slug: string;\n    appearance: Appearance;\n    name: string;\n  }> = {};\n  /**\n   * The error state of the editor.\n   */\n  @State() error?: string = '';\n  /**\n   * Event emitted when the configuration is created/updated (after the request is complete). This fires for both create and edit actions.\n   */\n  @Event() schedulerConfigChanged!: EventEmitter<SchedulerEventDetail>;\n  /**\n   * Event emitted when the user clicks the cancel button.\n   */\n  @Event() cancelButtonClick!: EventEmitter<void>;\n  /**\n   * Event emitted on form submission.\n   */\n  @Event({ bubbles: true, cancelable: true }) formSubmitted!: EventEmitter<void>;\n  /**\n   * Event emitted when the user clicks the preview button.\n   */\n  @Event() previewButtonClicked!: EventEmitter<HTMLNylasEditorTabsElement>;\n  /**\n   *\n   * Event emitted when the value of a form field changes.\n   */\n  @Event() schedulerEditorFormUpdated!: EventEmitter<{ value: string; name: string }>;\n\n  @Watch('selectedConfiguration')\n  configChangedHandler(newConfig: Configuration) {\n    debug('[nylas-editor-tabs]', 'configChangedHandler', newConfig, this.selectedConfiguration);\n    this.formState = {\n      ...this.getFormStateFromConfig(newConfig),\n    };\n    if (newConfig?.id) {\n      this.action = 'edit';\n    } else {\n      this.action = 'create';\n    }\n  }\n\n  @Watch('currentUser')\n  userChangedHandler(newUser: User) {\n    // Actively watch for changes in the current user to update the form state.\n    debug('[nylas-editor-tabs]', 'userChangedHandler', newUser);\n    if (newUser) {\n      this.formState = {\n        ...this.getFormStateFromConfig(this.selectedConfiguration),\n      };\n    }\n  }\n\n  connectedCallback() {\n    debug('[nylas-editor-tabs]', 'connectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('[nylas-editor-tabs]', 'componentWillLoad');\n    this.formState = this.getFormStateFromConfig(this.selectedConfiguration);\n  }\n\n  componentDidLoad() {\n    debug('[nylas-editor-tabs]', 'componentDidLoad');\n    if (this.selectedConfiguration?.id) {\n      this.configChangedHandler(this.selectedConfiguration);\n    }\n    const firstVisibleTab = (this.host.querySelector('button.tab:not(.hide)') as HTMLButtonElement)?.name as Tab;\n\n    if (firstVisibleTab) {\n      this.activeTab = firstVisibleTab;\n    }\n  }\n\n  disconnectedCallback() {\n    debug('[nylas-editor-tabs]', 'disconnectedCallback');\n  }\n\n  @Listen('valueChanged')\n  handleValueChanged(event: CustomEvent) {\n    debug('[nylas-editor-tabs]', 'handleValueChanged', event);\n    const { name, value } = event.detail;\n    this.setFormState(value, name);\n    this.formState = { ...this.formState };\n    this.hasUnsavedChanges = true;\n    this.error = '';\n    this.schedulerEditorFormUpdated.emit({\n      value: event.detail.value,\n      name: event.detail.name,\n    });\n  }\n\n  getFormStateFromConfig(config?: Configuration) {\n    let organizerParticipant = config?.participants?.find(p => p.is_organizer);\n    // If the config is round robin, there is no organizer set in the config, in that case flag the current user as the organizer.\n    if (!organizerParticipant && config?.availability?.availability_rules?.availability_method !== 'collective') {\n      organizerParticipant = config?.participants?.find(p => p.email === this.currentUser?.email);\n      if (organizerParticipant) {\n        organizerParticipant.is_organizer = true;\n      }\n    }\n    if (config?.appearance) {\n      console.info(\n        'Appearance settings have been returned from the given configuration; please remember to grab them from the configSettingsLoaded event and apply them as desired.',\n      );\n    }\n    return {\n      title: config?.event_booking?.title ?? '',\n      description: config?.event_booking?.description ?? '',\n      duration: config?.availability?.duration_minutes?.toString() ?? '30',\n      availability: {\n        timezone: config?.event_booking?.timezone ?? Intl.DateTimeFormat().resolvedOptions().timeZone,\n        openHours: config?.availability?.availability_rules?.default_open_hours ?? DEFAULT_OPEN_HOURS,\n      },\n      additionalFields: config?.scheduler?.additional_fields ?? {},\n      conferencing: config?.event_booking?.conferencing ?? {},\n      calendarIds: organizerParticipant?.availability?.calendar_ids ?? [],\n      participants: config?.participants ?? [],\n      bookingCalendar: organizerParticipant?.booking?.calendar_id ?? organizerParticipant?.email ?? '',\n      location: config?.event_booking?.location ?? '',\n      bookingType: config?.event_booking?.booking_type ?? 'booking',\n      buffer: config?.availability?.availability_rules?.buffer ?? { before: 0, after: 0 },\n      cancellationPolicy: config?.scheduler?.cancellation_policy ?? '',\n      availableDaysInFuture: config?.scheduler?.available_days_in_future ?? 30,\n      minCancellationNotice: config?.scheduler?.min_cancellation_notice ?? 0,\n      minBookingNotice: config?.scheduler?.min_booking_notice ?? 60,\n      timeslotInterval: {\n        interval: config?.availability?.interval_minutes ?? config?.availability?.duration_minutes,\n        roundTo: config?.availability?.round_to,\n      },\n      additionalGuestsHidden: config?.scheduler?.hide_additional_guests ?? false,\n      hideCancellationOptions: config?.scheduler?.hide_cancellation_options ?? false,\n      hideReschedulingOptions: config?.scheduler?.hide_rescheduling_options ?? false,\n      participantBookingCalendars:\n        config?.participants?.reduce((acc, p) => {\n          if (p.booking?.calendar_id) {\n            acc[p.email] = p.booking?.calendar_id;\n          }\n          return acc;\n        }) ?? {},\n      participantCalendars:\n        config?.participants?.reduce((acc, p) => {\n          acc[p.email] = p.availability?.calendar_ids;\n          return acc;\n        }, {}) ?? {},\n      reminders: config?.event_booking?.reminders,\n      emailTemplate: config?.scheduler?.email_template,\n      redirectUrl: config?.scheduler?.confirmation_redirect_url,\n      slug: config?.slug,\n      appearance: config?.appearance,\n      name: config?.name,\n    };\n  }\n\n  setFormState(value, key) {\n    switch (key) {\n      case 'title':\n        this.formState.title = value.toString();\n        break;\n      case 'description':\n        this.formState.description = value.toString();\n        break;\n      case 'duration':\n        this.formState.duration = value.toString();\n        break;\n      case 'availability':\n        this.formState.availability = JSON.parse(value.toString());\n        break;\n      case 'participants':\n        this.formState.participants = JSON.parse(value.toString());\n        break;\n      case 'booking-calendar':\n        this.formState.bookingCalendar = value.toString();\n        break;\n      case 'participant-booking-calendars':\n        this.formState.participantBookingCalendars = JSON.parse(value.toString());\n        break;\n      case 'location':\n        this.formState.location = value.toString();\n        break;\n      case 'conference':\n        this.formState.conferencing = JSON.parse(value.toString());\n        break;\n      case 'confirmation-type':\n        this.formState.bookingType = value.toString();\n        break;\n      case 'buffer-time':\n        this.formState.buffer = JSON.parse(value.toString());\n        break;\n      case 'limit-future-bookings':\n        this.formState.availableDaysInFuture = parseInt(value.toString());\n        break;\n      case 'min-cancellation-notice':\n        this.formState.minCancellationNotice = parseInt(value.toString());\n        break;\n      case 'min-booking-notice':\n        this.formState.minBookingNotice = parseInt(value.toString());\n        break;\n      case 'cancellation-policy':\n        this.formState.cancellationPolicy = value.toString();\n        break;\n      case 'timeslot-interval':\n        this.formState.timeslotInterval = JSON.parse(value.toString());\n        break;\n      case 'customize-booking-settings':\n        const settings = JSON.parse(value.toString());\n        this.formState.additionalGuestsHidden = settings.additionalGuestsHidden;\n        this.formState.hideCancellationOptions = settings.hideCancellationOptions;\n        this.formState.hideReschedulingOptions = settings.hideReschedulingOptions;\n        break;\n      case 'participant-custom-availability':\n        const participantOpenHours = JSON.parse(value.toString());\n        this.formState.participantOpenHours = participantOpenHours;\n        break;\n      case 'additional-fields':\n        this.formState.additionalFields = value;\n        break;\n      case 'connected-calendars':\n        this.formState.participantCalendars = JSON.parse(value.toString());\n        break;\n      case 'confirmation-email-template':\n        this.formState.emailTemplate = JSON.parse(value.toString());\n        break;\n      case 'reminder-overrides':\n        this.formState.reminders = { overrides: JSON.parse(value.toString()) };\n        break;\n      case 'confirmation-redirect':\n        this.formState.redirectUrl = value.toString();\n        break;\n      case 'availability-method':\n        this.formState.availabilityMethod = value.toString();\n        break;\n      case 'custom-event-slug':\n        this.formState.slug = JSON.parse(value.toString());\n        break;\n      case 'page-styling':\n        this.formState.appearance = JSON.parse(value.toString());\n        break;\n      case 'page-name':\n        this.formState.name = JSON.parse(value.toString());\n        break;\n    }\n    this.schedulerEditorFormUpdated.emit({\n      value,\n      name: key,\n    });\n  }\n\n  updateFormState() {\n    const formData = new FormData(this.formRef);\n    formData.forEach((value, key) => {\n      this.setFormState(value, key);\n    });\n\n    this.formState = { ...this.formState };\n    return this.formState;\n  }\n\n  setActiveTab(e: Event, tabName: Tab) {\n    e.preventDefault();\n    this.updateFormState();\n    this.activeTab = tabName;\n  }\n\n  setError = (error: Error) => {\n    this.error = error.message;\n  };\n\n  formSubmissionHandler = async (event: Event) => {\n    event.preventDefault();\n    const formEvent = await this.formSubmitted.emit();\n    debug('[nylas-editor-tabs]', 'formSubmissionHandler', formEvent);\n    const valid = this.formRef.checkValidity();\n    if (!valid || formEvent.defaultPrevented) {\n      this.error = this.formRef.validationMessage || 'Please fix the form errors.';\n      return;\n    }\n    this.isLoading = true;\n    this.hasUnsavedChanges = false;\n    const formState = this.updateFormState();\n    const {\n      title,\n      description,\n      duration,\n      availability,\n      bookingCalendar,\n      location,\n      bookingType,\n      buffer,\n      availableDaysInFuture,\n      minCancellationNotice,\n      minBookingNotice,\n      cancellationPolicy,\n      timeslotInterval,\n      additionalGuestsHidden,\n      hideCancellationOptions,\n      hideReschedulingOptions,\n      participants,\n      participantOpenHours,\n      additionalFields,\n      participantCalendars,\n      conferencing,\n      participantBookingCalendars,\n      reminders,\n      emailTemplate,\n      redirectUrl,\n      availabilityMethod,\n      slug,\n      appearance,\n      name,\n    } = formState;\n    const organizer = this.selectedConfiguration?.participants?.find(p => p.is_organizer) || participants?.find(p => p.is_organizer);\n    const organizerCalendars = participantCalendars && organizer?.email ? participantCalendars[organizer?.email] : [];\n    const organizerBookingCalendar = organizer?.booking?.calendar_id || bookingCalendar;\n    const durationMinutes = duration ? parseInt(duration) : 30;\n\n    const participantsList =\n      participants && participants?.length > 0\n        ? participants\n        : [\n            {\n              name: organizer?.name ?? this.currentUser?.name ?? '',\n              email: organizer?.email ?? this.currentUser?.email ?? '',\n              is_organizer: true,\n              timezone: availability?.timezone ?? Intl.DateTimeFormat().resolvedOptions().timeZone,\n              availability: {\n                calendar_ids: organizerCalendars.length ? organizerCalendars : ['primary'],\n                open_hours: [],\n              },\n              booking: {\n                calendar_id: bookingCalendar && bookingCalendar !== '' ? bookingCalendar : 'primary',\n              },\n            },\n          ];\n\n    const configObject: Partial<Configuration> = {\n      ...(this.selectedConfiguration?.id && { id: this.selectedConfiguration.id }),\n      version: this.selectedConfiguration?.version ?? '1.0.0',\n      slug: slug,\n      name: name,\n      availability: {\n        duration_minutes: durationMinutes,\n        interval_minutes: timeslotInterval?.interval ?? durationMinutes,\n        round_to: timeslotInterval?.roundTo,\n        availability_rules: {\n          availability_method: availabilityMethod ? availabilityMethod : this.selectedConfiguration?.availability?.availability_rules?.availability_method ?? 'collective',\n          buffer: buffer || { before: 0, after: 0 },\n          default_open_hours: availability?.openHours ?? this.selectedConfiguration?.availability?.availability_rules?.default_open_hours ?? DEFAULT_OPEN_HOURS,\n          round_robin_group_id: this.selectedConfiguration?.availability?.availability_rules?.round_robin_group_id ?? '',\n        },\n      },\n      participants: [\n        ...participantsList?.map(p => {\n          if (p.is_organizer) {\n            return {\n              name: p.name ?? '',\n              email: p.email,\n              is_organizer: true,\n              timezone: participantOpenHours?.[p.email]?.[0]?.timezone ?? p.availability?.open_hours?.[0]?.timezone ?? Intl.DateTimeFormat().resolvedOptions().timeZone,\n              availability: {\n                calendar_ids: participantCalendars?.[p.email] ? participantCalendars?.[p.email] : organizerCalendars?.length ? organizerCalendars : ['primary'],\n                open_hours: participantOpenHours?.[p.email] ?? p.availability?.open_hours ?? [],\n              },\n              booking: {\n                calendar_id: participantBookingCalendars?.[p.email] ? participantBookingCalendars?.[p.email] : organizerBookingCalendar ? organizerBookingCalendar : 'primary',\n              },\n            };\n          }\n          return {\n            ...p,\n            timezone: participantOpenHours?.[p.email]?.[0]?.timezone ?? p.availability?.open_hours?.[0]?.timezone ?? Intl.DateTimeFormat().resolvedOptions().timeZone,\n            availability: p.availability\n              ? {\n                  calendar_ids: participantCalendars?.[p.email] ?? p.availability?.calendar_ids ?? ['primary'],\n                  open_hours: participantOpenHours?.[p.email] ?? p.availability?.open_hours ?? [],\n                }\n              : undefined,\n            booking: participantBookingCalendars?.[p.email] ? { calendar_id: participantBookingCalendars?.[p.email] } : p?.booking ?? undefined,\n          };\n        }),\n      ],\n      event_booking: {\n        title: title?.toString() ?? '',\n        description: description?.toString() ?? '',\n        location: location?.toString() ?? '',\n        booking_type: (bookingType?.toString() as BookingType) ?? 'booking',\n        timezone: availability?.timezone ?? Intl.DateTimeFormat().resolvedOptions().timeZone,\n        conferencing: conferencing,\n        reminders: reminders,\n      },\n      scheduler: {\n        cancellation_policy: cancellationPolicy ?? '',\n        available_days_in_future: availableDaysInFuture ?? 30,\n        min_cancellation_notice: minCancellationNotice ?? 0,\n        min_booking_notice: minBookingNotice ?? 60,\n        hide_additional_guests: additionalGuestsHidden ?? false,\n        hide_cancellation_options: hideCancellationOptions ?? false,\n        hide_rescheduling_options: hideReschedulingOptions ?? false,\n        additional_fields: additionalFields,\n        email_template: emailTemplate,\n        confirmation_redirect_url: redirectUrl,\n      },\n      appearance: appearance,\n    };\n\n    const configObjectWithDeveloperSettings = mergeDeep(configObject, this.selectedConfiguration);\n\n    const finalConfig = this.action === 'create' ? configObjectWithDeveloperSettings : configObject;\n\n    if (this.isConfigRoundRobin(finalConfig)) {\n      // If the config is round robin, no participant should be flagged as the organizer\n      finalConfig.participants = finalConfig.participants.map(p => ({ ...p, is_organizer: undefined }));\n    }\n    const resetLoadingState = (_e: CustomEvent) => {\n      this.isLoading = false;\n      this.changesSaved = true;\n      setTimeout(() => {\n        this.changesSaved = false;\n      }, 5000);\n    };\n    const hasError = this.checkForClientSideErrors(finalConfig);\n    if (hasError) {\n      return;\n    }\n    this.schedulerConfigChanged.emit({ config: finalConfig, resetLoadingState, setError: this.setError, action: this.action });\n  };\n\n  isConfigRoundRobin = (config: Configuration) => {\n    return config.availability?.availability_rules?.availability_method === 'max-availability' || config.availability?.availability_rules?.availability_method === 'max-fairness';\n  };\n\n  checkForClientSideErrors = config => {\n    // Check additional Fields in config\n    let hasError = false;\n    let errorMessage = '';\n    const additionalFields = config.scheduler?.additional_fields;\n    const isOrganizerConfirmationType = config.event_booking?.booking_type === 'organizer-confirmation';\n    const organizerConfirmationUrl = config.scheduler?.organizer_confirmation_url;\n    if (additionalFields) {\n      errorMessage = 'Booking form error: ';\n      Object.entries(additionalFields).forEach(entry => {\n        const field = entry[1] as AdditionalFields;\n        if (field.label === '') {\n          errorMessage += `Label is required for field of type ${field.type}.`;\n          hasError = true;\n          return;\n        }\n        if (field.options) {\n          for (const option of field.options) {\n            if (option === '') {\n              errorMessage += `Empty option detected inside ${field.label} of type ${field.type}.`;\n              hasError = true;\n              break;\n            }\n          }\n        }\n      });\n    }\n    if (isOrganizerConfirmationType && !organizerConfirmationUrl) {\n      errorMessage += 'Organizer confirmation URL is required when using organizer confirmation booking type.';\n      hasError = true;\n    }\n    if (hasError) {\n      this.isLoading = false;\n      this.setError(new Error(errorMessage));\n    }\n    return hasError;\n  };\n\n  hideTab(tab: Tab) {\n    return this.hideEditorTabs?.includes(tab) || false;\n  }\n\n  @RegisterComponent<NylasEditorTabs, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-editor-tabs',\n    stateToProps: new Map([\n      ['schedulerConfig.calendars', 'calendars'],\n      ['schedulerConfig.selectedConfiguration', 'selectedConfiguration'],\n      ['schedulerConfig.currentUser', 'currentUser'],\n      ['schedulerConfig.hideEditorTabs', 'hideEditorTabs'],\n    ]),\n    eventToProps: {\n      schedulerConfigChanged: async (event: CustomEvent<SchedulerEventDetail>, nylasSchedulerConfigConnector: NylasSchedulerConfigConnector) => {\n        const { resetLoadingState, setError, action, config } = event.detail;\n\n        const checkForErrors = (response: DataResponseReturnType) => {\n          const [data, error] = response;\n          if (!data && error && setError) {\n            setError(error as Error);\n          }\n          if (resetLoadingState) {\n            resetLoadingState(event);\n          }\n        };\n\n        // If we have an ID, we are updating an existing configuration\n        if (action === 'edit') {\n          const response = await nylasSchedulerConfigConnector.schedulerConfig.updateConfiguration(config);\n          checkForErrors(response);\n        } else {\n          const response = await nylasSchedulerConfigConnector.schedulerConfig.createConfiguration(config);\n          checkForErrors(response);\n        }\n      },\n      cancelButtonClick: async (_, nylasSchedulerConfigConnector) => {\n        nylasSchedulerConfigConnector.schedulerConfigStore.state.action = null;\n      },\n      previewButtonClicked: async (_, nylasSchedulerConfigConnector) => {\n        debug('[nylas-editor-tabs]', 'previewButtonClicked', nylasSchedulerConfigConnector);\n      },\n      formSubmitted: async (_, nylasSchedulerConfigConnector) => {\n        debug('[nylas-editor-tabs]', 'formSubmitted', nylasSchedulerConfigConnector);\n      },\n      schedulerEditorFormUpdated: async (event: CustomEvent<{ value: string; name: string }>, _nylasSchedulerConfigConnector) => {\n        debug('[nylas-editor-tabs]', 'schedulerEditorFormUpdated', event);\n      },\n    },\n    localPropsToProp: new Map([['schedulerPreviewLink', 'schedulerPreviewLink']]),\n    fireRegisterEvent: true,\n  })\n  render() {\n    debug('[nylas-editor-tabs]', 'render', this.formState);\n    // TODO: Remove this check when the feature is ready to be released\n    // const showInDevelopmentTabs = localStorage.getItem('nylas') === 'Nylas Developer';\n\n    return (\n      <Host>\n        <form onSubmit={this.formSubmissionHandler} class=\"scheduler-editor\" ref={el => (this.formRef = el as HTMLFormElement)} noValidate>\n          {this.mode === 'app' ? (\n            <div class=\"form-contents\">\n              <div class=\"tabs\">\n                <button\n                  name={Tab.EventInfo}\n                  class={{ tab: true, active: this.activeTab == Tab.EventInfo, hide: this.hideTab(Tab.EventInfo) }}\n                  part=\"editortab__event-info\"\n                  onClick={e => this.setActiveTab(e, Tab.EventInfo)}\n                >\n                  <calendar-info-icon width=\"16\" height=\"16\" />\n                  Event info\n                </button>\n                <button\n                  name={Tab.Availability}\n                  class={{ tab: true, active: this.activeTab == Tab.Availability, hide: this.hideTab(Tab.Availability) }}\n                  part=\"editortab__availability\"\n                  onClick={e => this.setActiveTab(e, Tab.Availability)}\n                >\n                  <calendar-patterns-icon width=\"16\" height=\"16\" />\n                  Availability\n                </button>\n                <button\n                  name={Tab.Participants}\n                  class={{ tab: true, active: this.activeTab == Tab.Participants, hide: this.hideTab(Tab.Participants) }}\n                  part=\"editortab__participants\"\n                  onClick={e => this.setActiveTab(e, Tab.Participants)}\n                >\n                  <people-icon width=\"16\" height=\"16\" />\n                  Participants\n                </button>\n                <button\n                  name={Tab.BookingOptions}\n                  class={{ tab: true, active: this.activeTab == Tab.BookingOptions, hide: this.hideTab(Tab.BookingOptions) }}\n                  part=\"editortab__booking-options\"\n                  onClick={e => this.setActiveTab(e, Tab.BookingOptions)}\n                >\n                  <flow-icon width=\"16\" height=\"16\" />\n                  Booking options\n                </button>\n                <button\n                  name={Tab.BookingForm}\n                  class={{ tab: true, active: this.activeTab == 'bookingForm', hide: this.hideTab(Tab.BookingForm) }}\n                  part=\"editortab__booking-form\"\n                  onClick={e => this.setActiveTab(e, Tab.BookingForm)}\n                >\n                  {this.activeTab == Tab.BookingForm ? <calendar-agenda-fill-icon width=\"16\" height=\"16\" /> : <calendar-agenda-icon width=\"16\" height=\"16\" />}\n                  Booking form\n                </button>\n                <button\n                  name={Tab.Communications}\n                  class={{ tab: true, active: this.activeTab == 'communications', hide: this.hideTab(Tab.Communications) }}\n                  onClick={e => this.setActiveTab(e, Tab.Communications)}\n                >\n                  {this.activeTab == Tab.Communications ? <envelope-fill-icon width=\"16\" height=\"16\" /> : <envelope-icon width=\"16\" height=\"16\" />}\n                  Communications\n                </button>\n                <button\n                  name={Tab.PageStyles}\n                  class={{ tab: true, active: this.activeTab == 'pageStyles', hide: this.hideTab(Tab.PageStyles) }}\n                  onClick={e => this.setActiveTab(e, Tab.PageStyles)}\n                >\n                  {this.activeTab == Tab.PageStyles ? <paintbrush-fill-icon width=\"16\" height=\"16\" /> : <paintbrush-icon width=\"16\" height=\"16\" />}\n                  Page styles\n                </button>\n              </div>\n              <div class=\"tab-content\">\n                <TabContents\n                  formState={this.formState}\n                  activeTab={this.activeTab}\n                  currentUser={this.currentUser}\n                  calendars={this.calendars}\n                  id={this.selectedConfiguration?.id ?? 'new'}\n                />\n              </div>\n            </div>\n          ) : (\n            <div class=\"composable\" key={this.selectedConfiguration?.id}>\n              <slot></slot>\n            </div>\n          )}\n\n          <div class=\"footer\" part=\"editor__footer\">\n            <div class=\"preview\" part=\"editor__footer-preview\">\n              {this.schedulerPreviewLink !== '' && this.action === 'edit' && (\n                <button-component\n                  type=\"button\"\n                  disabled={this.isLoading}\n                  clickHandler={event => {\n                    event.preventDefault();\n                    const previewEvent = this.previewButtonClicked.emit(this.host);\n                    if (!previewEvent.defaultPrevented) {\n                      window.open(parsePreviewLink(this.schedulerPreviewLink, this.selectedConfiguration), '_blank');\n                    }\n                  }}\n                  variant={'basic'}\n                >\n                  Preview\n                </button-component>\n              )}\n            </div>\n            <div class=\"buttons\" part=\"editor__footer-buttons\">\n              <p\n                class={{\n                  'unsaved-changes': this.hasUnsavedChanges && !this.changesSaved,\n                  'saved-changes': this.changesSaved,\n                  'error': this.error !== '',\n                  'error-full-width': this.error !== '' && this.action === 'create',\n                }}\n              >\n                {this.error !== '' ? this.error : ''}\n                {this.error == '' && this.hasUnsavedChanges && !this.changesSaved ? 'Unsaved changes' : this.error == '' && this.changesSaved ? 'Changes saved!' : ''}\n              </p>\n              <button-component\n                type=\"button\"\n                disabled={this.isLoading}\n                clickHandler={event => {\n                  event.preventDefault();\n                  this.cancelButtonClick.emit();\n                  this.error = '';\n                }}\n                variant={'basic'}\n                part=\"editor__footer-cancel\"\n              >\n                Back\n              </button-component>\n              <button-component type=\"submit\" disabled={this.isLoading} part=\"editor__footer-cta\">\n                {this.isLoading ? (\n                  <span>\n                    Saving\n                    <loading-icon />{' '}\n                  </span>\n                ) : this.action === 'create' ? (\n                  'Create'\n                ) : (\n                  'Save changes'\n                )}\n              </button-component>\n            </div>\n          </div>\n        </form>\n      </Host>\n    );\n  }\n}\n","@import '../../../common/styles/variables.scss';\n@import '../../../common/mixins/buttons.scss';\n\n:host {\n  display: grid;\n  grid-auto-flow: row;\n  width: 100%;\n  font-family: inherit;\n  font-optical-sizing: auto;\n  @include default-css-variables;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n  gap: 1rem;\n\n  @media #{$mobile} {\n    flex-direction: column;\n    gap: 0.5rem;\n    align-items: unset;\n  }\n\n  h2 {\n    margin: 0;\n    font-size: 1.25rem;\n    color: var(--nylas-base-900);\n    font-weight: 600;\n  }\n\n  p {\n    margin: 0;\n    font-size: 1rem;\n    color: var(--nylas-base-700);\n  }\n\n  .actions {\n    justify-self: end;\n\n    @media #{$mobile} {\n      width: 100%;\n    }\n  }\n}\n\n.configurations {\n  border: 1px solid var(--nylas-base-200);\n  border-radius: var(--nylas-border-radius-2x);\n  background: var(--nylas-base-0);\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  overflow-y: hidden;\n\n  .table-container {\n    overflow-y: auto;\n    flex: 1;\n\n    table {\n      width: 100%;\n      border-spacing: 0;\n      border-collapse: collapse;\n      font-family: inherit;\n      height: max-content;\n\n      &.no-configurations {\n        height: 100%;\n      }\n\n      tr {\n        color: var(--nylas-base-800);\n        border-bottom: 1px solid var(--nylas-base-200);\n        font-family: inherit;\n\n        &.hide {\n          display: none;\n        }\n      }\n\n      th {\n        font-weight: 600;\n        text-transform: uppercase;\n        font-size: 14px;\n        line-height: 20px;\n      }\n\n      tr.no-configurations {\n        td {\n          > div {\n            display: flex;\n            height: 100%;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n\n            padding: var(--nylas-border-radius-3x);\n\n            h3 {\n              margin: 0 0 1rem 0;\n              color: var(--nylas-base-700);\n            }\n\n            p {\n              margin: 0 0 1rem 0;\n              color: var(--nylas-base-600);\n            }\n\n            calendar-icon {\n              margin-bottom: 1rem;\n              color: var(--nylas-base-200);\n            }\n          }\n        }\n      }\n\n      th,\n      td {\n        text-align: left;\n        padding: 1rem;\n        font-family: inherit;\n      }\n\n      .actions {\n        text-align: right;\n      }\n\n      .actions {\n        display: flex;\n        justify-content: flex-end;\n        gap: 1rem;\n\n        @media #{$mobile} {\n          flex-direction: column;\n          gap: 0.5rem;\n        }\n      }\n\n      .title {\n        width: 100%;\n        max-width: 300px;\n\n        @media #{$mobile} {\n          max-width: 96px;\n        }\n\n        div {\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n\n          &.config-event-title {\n            font-weight: 600;\n          }\n\n          &.config-event-description {\n            font-size: 0.75rem;\n          }\n        }\n      }\n    }\n  }\n\n  .pagination {\n    padding: 1rem;\n    position: sticky;\n    top: 100%;\n    display: flex;\n    justify-content: flex-end;\n    gap: 0.5rem;\n    background: white;\n    width: calc(100% - 2rem);\n    z-index: 2;\n\n    td.arrows {\n      display: flex;\n      justify-content: flex-end;\n      gap: 0.5rem;\n    }\n\n    button {\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n      height: 3vh;\n      width: 3vh;\n      min-width: 3em;\n      min-height: 3em;\n      cursor: pointer;\n      border-radius: var(--nylas-border-radius-2x);\n      border: 1px solid var(--nylas-base-300);\n\n      background-color: transparent;\n      color: var(--nylas-base-800);\n      cursor: pointer;\n\n      &:hover:not(:disabled) {\n        border: 1px solid var(--nylas-primary);\n      }\n\n      &:active {\n        border: 1px solid var(--nylas-base-800);\n      }\n\n      &:disabled {\n        border: 1px solid var(--nylas-base-100);\n        background-color: transparent;\n        color: var(--nylas-base-300);\n        cursor: not-allowed;\n      }\n\n      &.right {\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n.error-container {\n  margin-top: 1.5rem;\n\n  .error {\n    color: var(--nylas-error);\n    padding: 0.5rem 0;\n    margin: 1rem 0 0;\n  }\n}\n\nbutton-component#copy {\n  button {\n    width: 108px;\n  }\n}\n\nselect-dropdown {\n  width: auto;\n}\n\nselect-dropdown::part(sd_dropdown-button) {\n  display: block;\n  height: 48px;\n  padding: 0px 16px 8px;\n\n  @media #{$mobile} {\n    width: 92px;\n  }\n}\n\nselect-dropdown::part(sd_dropdown-content) {\n  width: 120px;\n  right: 0;\n}\n\nselect-dropdown::part(sd_dropdown-labelhtml) {\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n  color: var(--nylas-base-900);\n\n  &:hover {\n    color: var(--nylas-primary);\n  }\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug, parsePreviewLink } from '@/utils/utils';\nimport { Component, Element, Event, EventEmitter, Host, Listen, Method, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport { Configuration } from '@nylas/core';\n\n/**\n * The `nylas-list-configurations` component displays a list of scheduling pages.\n *\n * @part nlc__create-new-cta - The create new configuration CTA.\n */\n@Component({\n  tag: 'nylas-list-configurations',\n  styleUrl: 'nylas-list-configurations.scss',\n  shadow: true,\n})\nexport class NylasListConfigurations {\n  /**\n   * The host element.\n   */\n  @Element() host!: HTMLNylasListConfigurationsElement;\n\n  /**\n   * The list of configurations to display.\n   */\n  @Prop() configurations: Configuration[] = [];\n\n  /**\n   * The scheduler preview link to use when the user clicks on the preview button.\n   * You can use a placeholder `{config.id}` to replace the configuration id anywhere in the link.\n   */\n  @Prop({ attribute: 'scheduler-preview-link' }) schedulerPreviewLink: string = '';\n\n  /**\n   * The next cursor for list configurations, if any.\n   */\n  @Prop() listConfigurationsNextCursor?: string | null;\n\n  /**\n   * Event emitted when the component is initialized.\n   */\n  @Event() initListConfigurations!: EventEmitter<{\n    host: HTMLNylasListConfigurationsElement;\n    cursor?: string;\n  }>;\n\n  /**\n   * Event emitted when the user clicks the create event button.\n   */\n  @Event() createButtonClick!: EventEmitter<HTMLNylasListConfigurationsElement>;\n\n  /**\n   * Event emitted when the user clicks the edit event button.\n   */\n  @Event() editButtonClick!: EventEmitter<{\n    host: HTMLNylasListConfigurationsElement;\n    configuration: Configuration;\n  }>;\n\n  /**\n   * Event emitted when the user clicks the delete event button.\n   */\n  @Event() deleteButtonClick!: EventEmitter<{\n    host: HTMLNylasListConfigurationsElement;\n    configuration: Configuration;\n  }>;\n\n  /**\n   * The current state of the component.\n   */\n  @State() private state: 'loading' | 'loaded' | 'error' = 'loading';\n\n  /**\n   * The error message to display.\n   */\n  @State() private error: string = '';\n\n  /**\n   * Current cursor for list configurations\n   */\n  @State() currentCursor: string | null = null;\n\n  /**\n   * The list of previous cursors for list configurations\n   */\n  @State() previousCursors: string[] = [];\n\n  /**\n   * State to identiy if the next button should be disabled\n   */\n  @State() disableNextPageButton: boolean = false;\n\n  @Watch('listConfigurationsNextCursor')\n  listConfigurationsNextCursorChangedHandler(newVal: string | null, oldVal: string | null) {\n    if (!newVal || newVal === oldVal) {\n      if (newVal === null) {\n        this.disableNextPageButton = true;\n      }\n      return;\n    }\n    this.disableNextPageButton = false;\n    this.currentCursor = newVal;\n  }\n\n  connectedCallback() {\n    debug('[nylas-list-configurations]', 'connectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('[nylas-list-configurations]', 'componentWillLoad');\n\n    // If we have configurations, we will set the state to loaded.\n    if (this.configurations && this.configurations.length > 0) {\n      this.state = 'loaded';\n    }\n  }\n\n  componentDidLoad() {\n    debug('[nylas-list-configurations]', 'componentDidLoad');\n\n    // Fire the init event. By default, we will fetch the configurations.\n    // This is defined in the eventToProps object in the RegisterComponent decorator.\n    this.initListConfigurations.emit({\n      host: this.host,\n    });\n  }\n\n  disconnectedCallback() {\n    debug('[nylas-list-configurations]', 'disconnectedCallback');\n  }\n\n  @Listen('nylasFormDropdownChanged')\n  async handleNylasFormDropdownChanged(event: CustomEvent) {\n    debug('[nylas-list-configurations]', 'handleNylasFormDropdownChanged', event.detail);\n    const { value } = event.detail;\n    const [action, index] = value.split('-');\n    event.preventDefault();\n    switch (action) {\n      case 'delete':\n        this.deleteButtonClick.emit({ host: this.host, configuration: this.configurations[index] });\n        break;\n      case 'preview':\n        window.open(parsePreviewLink(this.schedulerPreviewLink, this.configurations[index]), '_blank');\n        break;\n      case 'copy':\n        await navigator.clipboard.writeText(parsePreviewLink(this.schedulerPreviewLink, this.configurations[index]));\n        break;\n      default:\n        break;\n    }\n  }\n\n  @Method()\n  async getState() {\n    return this.state;\n  }\n\n  @Method()\n  async setState(state: 'loading' | 'loaded' | 'error') {\n    this.state = state;\n  }\n\n  @Method()\n  async setError(error: string) {\n    this.error = error;\n  }\n\n  private getDurationString(duration: number) {\n    const hours = Math.floor(duration / 60);\n    const minutes = duration % 60;\n    return `${hours ? hours : ''} ${hours ? `${hours > 1 ? 'hours' : 'hour'}` : ''} ${minutes ? minutes : ''} ${minutes ? `${minutes > 1 ? 'mins' : 'min'}` : ''}`;\n  }\n\n  getActionLabelHTML(action: string) {\n    const actionStyle = {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gap: '0.5rem',\n    };\n    const dangerStyle = {\n      color: 'var(--nylas-error)',\n    };\n    switch (action) {\n      case 'preview':\n        return (\n          <span style={actionStyle}>\n            <eye-icon width=\"16\" height=\"16\"></eye-icon>\n            Preview\n          </span>\n        );\n      case 'copy':\n        return (\n          <span style={actionStyle}>\n            <copy-icon width=\"16\" height=\"16\" />\n            Copy\n          </span>\n        );\n      case 'delete':\n        return (\n          <span style={{ ...actionStyle, ...dangerStyle }}>\n            <delete-icon width=\"15\" height=\"17\"></delete-icon>\n            Delete\n          </span>\n        );\n      default:\n        return '';\n    }\n  }\n\n  previousPageClickedHandler() {\n    if (this.previousCursors.length === 0) return;\n\n    this.currentCursor = this.previousCursors.pop() || null;\n    const prevCursor = this.previousCursors[this.previousCursors.length - 1] || undefined;\n    this.initListConfigurations.emit({\n      host: this.host,\n      cursor: prevCursor,\n    });\n  }\n\n  nextPageClickedHandler() {\n    if (!this.currentCursor) return;\n\n    this.previousCursors = [...this.previousCursors, this.currentCursor];\n    this.initListConfigurations.emit({\n      host: this.host,\n      cursor: this.currentCursor,\n    });\n  }\n\n  @RegisterComponent<NylasListConfigurations, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-list-configurations',\n    stateToProps: new Map([\n      ['schedulerConfig.configurations', 'configurations'],\n      ['schedulerConfig.listConfigurationsNextCursor', 'listConfigurationsNextCursor'],\n    ]),\n    localPropsToProp: new Map([['schedulerPreviewLink', 'schedulerPreviewLink']]),\n    eventToProps: {\n      initListConfigurations: async (event, connector) => {\n        const { host, cursor } = event.detail;\n        await host.setState('loading');\n        const [data, error] = await connector.schedulerConfig.getConfigurations(cursor);\n        if (!data && error && error.message) {\n          await host.setState('error');\n          await host.setError(error.message);\n          return;\n        }\n        await host.setState('loaded');\n        // setCursor here\n      },\n      createButtonClick: async (_, connector) => {\n        connector.schedulerConfigStore.resetSelectedConfiguration();\n        connector.schedulerConfigStore.state.action = 'create';\n      },\n      deleteButtonClick: async (event, connector) => {\n        const { host, configuration } = event.detail;\n        const [data, error] = await connector.schedulerConfig.deleteConfiguration(configuration.id);\n        if (!data && error && error.message) {\n          await host.setState('error');\n          await host.setError(error.message);\n        }\n      },\n      editButtonClick: async (event, connector) => {\n        const { configuration } = event.detail;\n        connector.schedulerConfigStore.state.selectedConfiguration = configuration;\n        connector.schedulerConfigStore.state.action = 'edit';\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host>\n        <div class=\"header\">\n          <div class=\"description\">\n            <h2>All Scheduling Pages</h2>\n            <p>Create and manage your Scheduling Pages.</p>\n          </div>\n          {this.configurations && this.configurations.length > 0 && (\n            <div class=\"actions\">\n              <button-component\n                part=\"nlc__create-new-cta\"\n                clickHandler={() => {\n                  this.createButtonClick.emit(this.host);\n                }}\n              >\n                Create new\n              </button-component>\n            </div>\n          )}\n        </div>\n        <div class=\"configurations\">\n          <div class=\"table-container\">\n            <table\n              class={{\n                'no-configurations': this.state !== 'loading' && (!this.configurations || this.configurations.length === 0),\n              }}\n            >\n              <tr\n                class={{\n                  hide: this.state === 'loading' || (this.configurations && this.configurations.length === 0),\n                }}\n              >\n                <th>Page title</th>\n                <th>Duration</th>\n                <th></th>\n              </tr>\n              {this.state === 'loading' && (\n                <tr class=\"no-configurations\">\n                  <td colSpan={3}>\n                    <div>\n                      <h3>Loading...</h3>\n                      <p>Please wait while we fetch the scheduling pages</p>\n                    </div>\n                  </td>\n                </tr>\n              )}\n              {this.state !== 'loading' && (!this.configurations || this.configurations.length === 0) && (\n                <tr class=\"no-configurations\">\n                  <td colSpan={3}>\n                    <div>\n                      <calendar-icon width=\"48\" height=\"48\"></calendar-icon>\n                      <h3>No scheduling pages found</h3>\n                      <p>Get started with creating your first scheduling page</p>\n                      <button-component\n                        part=\"nlc__create-new-cta\"\n                        clickHandler={() => {\n                          this.createButtonClick.emit(this.host);\n                        }}\n                      >\n                        Create new\n                      </button-component>\n                    </div>\n                  </td>\n                </tr>\n              )}\n              {this.state !== 'loading' &&\n                this.configurations.map((config, i) => {\n                  return (\n                    <tr key={config.id}>\n                      <td>\n                        <div class=\"title\">\n                          <div class=\"config-event-title\" title={config.event_booking.title}>\n                            {config.event_booking.title}\n                          </div>\n                          <div class={'config-event-description'}>{config.event_booking.description}</div>\n                        </div>\n                      </td>\n                      <td>\n                        <div class=\"duration\">{this.getDurationString(config.availability.duration_minutes)}</div>\n                      </td>\n                      <td>\n                        <div class=\"actions\">\n                          <button-component\n                            variant={'basic'}\n                            key={`edit-${i}`}\n                            clickHandler={event => {\n                              event.preventDefault();\n                              this.editButtonClick.emit({ host: this.host, configuration: config });\n                            }}\n                          >\n                            <edit-icon width=\"16\" height=\"16\"></edit-icon>\n                            Edit\n                          </button-component>\n                          <select-dropdown\n                            name=\"actions\"\n                            options={[\n                              { value: `preview-${i}`, label: 'Preview', labelHTML: this.getActionLabelHTML('preview') },\n                              { value: `copy-${i}`, label: 'Copy link', labelHTML: this.getActionLabelHTML('copy') },\n                              { value: `delete-${i}`, label: 'Delete', labelHTML: this.getActionLabelHTML('delete') },\n                            ]}\n                            defaultSelectedOption={{ value: '', label: '' }}\n                            dropdownButtonText=\"...\"\n                            withSearch={false}\n                            withChevron={false}\n                            exportparts=\"sd_dropdown: actions__dropdown, sd_dropdown-button: actions__dropdown-button, sd_dropdown-content: actions__dropdown-content\"\n                          ></select-dropdown>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </table>\n          </div>\n          <div class=\"pagination\">\n            <button class=\"arrow left\" onClick={() => this.previousPageClickedHandler()} disabled={this.previousCursors.length <= 0}>\n              <chevron-icon />\n            </button>\n            <button class=\"arrow right\" onClick={() => this.nextPageClickedHandler()} disabled={this.disableNextPageButton}>\n              <chevron-icon />\n            </button>\n          </div>\n        </div>\n        {this.state === 'error' && (\n          <div class=\"error-container\">\n            <p class={'error'}>{this.error}</p>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"yNAAA,MAAMA,EAAU,uCAChB,MAAAC,EAAeD,E,MCMFE,EAAc,M,oCACD,K,YACC,I,CAEzB,MAAAC,GAEE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,MAAOC,KAAKD,MAAOE,OAAQD,KAAKC,OAAQC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACjFP,EAAA,KAAAC,IAAA,uDAAa,yBACXD,EAAA,QAAAC,IAAA,2CACEO,EAAE,iKACFF,KAAK,YAEPN,EAAA,QAAAC,IAAA,2CACEO,EAAE,gMACFF,KAAK,YAEPN,EAAA,QAAAC,IAAA,2CACEO,EAAE,+OACFF,KAAK,YAEPN,EAAA,QAAAC,IAAA,2CACEO,EAAE,oLACFF,KAAK,aAGTN,EAAA,QAAAC,IAAA,4CACED,EAAA,YAAAC,IAAA,2CAAUQ,GAAG,mBACXT,EAAA,QAAAC,IAAA,2CAAMC,MAAO,GAAIE,OAAQ,GAAIE,KAAK,Y,aCnC9C,MAAMV,EAAU,0CAChB,MAAAc,EAAed,E,MCMFe,EAAiB,M,oCACJ,K,YACC,I,CAEzB,MAAAZ,GAEE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,MAAOC,KAAKD,MAAOE,OAAQD,KAAKC,OAAQC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACjFP,EAAA,QAAAC,IAAA,2CAAMO,EAAE,wDAAwDF,KAAK,YACrEN,EAAA,QAAAC,IAAA,2CAAMO,EAAE,sDAAsDF,KAAK,YACnEN,EAAA,QAAAC,IAAA,2CAAMO,EAAE,sDAAsDF,KAAK,YACnEN,EAAA,QAAAC,IAAA,2CAAMO,EAAE,oDAAoDF,KAAK,Y,aChBzE,IAAYM,GAAZ,SAAYA,GACVA,EAAA,yBACAA,EAAA,+BACAA,EAAA,mCACAA,EAAA,mCACAA,EAAA,+BACAA,EAAA,6BACAA,EAAA,0BACD,EARD,CAAYA,MAAG,K,SAkBSC,GAAYJ,GAAEA,EAAEK,UAAEA,EAASC,UAAEA,GAA+BC,GAClF,OACEhB,EAACiB,EAAQ,KACPjB,EAAA,OAAKC,IAAK,cAAcQ,IAAMS,MAAO,CAAEC,KAAMJ,IAAcH,EAAIQ,YAC7DpB,EAAA,wBACEA,EAAA,OAAKqB,KAAK,UACRrB,EAAA,qBAAmBsB,KAAK,QAAQC,YAAY,2CAC5CvB,EAAA,wBACEsB,KAAK,WACLC,YAAY,iJAEdvB,EAAA,wBAAsBsB,KAAK,WAAWC,YAAY,mFAClDvB,EAAA,2BAAyBsB,KAAK,cAAcC,YAAY,gCAI9DvB,EAAA,OAAKC,IAAK,gBAAgBQ,IAAMS,MAAO,CAAEC,KAAMJ,IAAcH,EAAIY,eAC/DxB,EAAA,uCAAqCyB,aAAcX,EAAUW,aAAcH,KAAK,kCAChFtB,EAAA,6BAA2ByB,aAAcX,EAAUW,aAAcH,KAAK,wBACtEtB,EAAA,6BACEsB,KAAK,eACLC,YACE,4QAINvB,EAAA,OAAKC,IAAK,mBAAmBQ,IAAMS,MAAO,CAAEC,KAAMJ,IAAcH,EAAIc,iBAClE1B,EAAA,2BACEsB,KAAK,sBACLK,SAAU,KACVJ,YAAY,mGAEdvB,EAAA,iCACEA,EAAA,OAAKqB,KAAK,UACRrB,EAAA,mCAAiCsB,KAAK,oBAAoBC,YAAa,sFACvEvB,EAAA,uCACEsB,KAAK,wBACLC,YAAa,+GAInBvB,EAAA,qBACEsB,KAAK,cACLC,YACE,6MAGJvB,EAAA,0BACEA,EAAA,OAAKqB,KAAK,UACRrB,EAAA,4BACEsB,KAAK,qBACLC,YAAY,iLAEdvB,EAAA,+BACEsB,KAAK,wBACLC,YAAY,iLAEdvB,EAAA,iCACEsB,KAAK,0BACLC,YAAY,iLAEdvB,EAAA,6BAA2BsB,KAAK,sBAAsBC,YAAY,mCAGtEvB,EAAA,2BAAyBsB,KAAK,oBAAoBC,YAAY,mGAC9DvB,EAAA,oCACEsB,KAAK,6BACLC,YAAY,6IAGhBvB,EAAA,OAAKC,IAAK,kBAAkBQ,IAAMS,MAAO,CAAEC,KAAMJ,IAAcH,EAAIgB,iBACjE5B,EAAA,OAAKkB,MAAM,cACTlB,EAAA,kCACAA,EAAA,mDAEFA,EAAA,4BACEsB,KAAK,8BACLC,YACE,oNAYNvB,EAAA,OAAKC,IAAK,gBAAgBQ,IAAMS,MAAO,CAAEC,KAAMJ,IAAcH,EAAIiB,eAC/D7B,EAAA,iCACEsB,KAAK,eACLC,YAAY,uHAEdvB,EAAA,0CACEyB,aAAcX,EAAUW,aACxBH,KAAK,kCACLC,YAAY,+LAGhBvB,EAAA,OAAKC,IAAK,eAAeQ,IAAMS,MAAO,CAAEC,KAAMJ,IAAcH,EAAIkB,aAC9D9B,EAAA,2BAAyBsB,KAAK,oBAAoBC,YAAY,0FAC9DvB,EAAA,mBAAiBsB,KAAK,YAAYC,YAAY,qFAC9CvB,EAAA,sBACEsB,KAAK,eACLC,YAAY,6SAEXP,IAGLhB,EAAA,OAAKC,IAAK,gBAAgBQ,IAAMS,MAAO,CAAEC,KAAMJ,IAAcH,EAAImB,cAC/D/B,EAAA,6BAA2BsB,KAAK,uBAIxC,CCxIA,MAAMU,EAAqB,+hNAC3B,MAAAC,EAAeD,E,ugBC8IFE,EAAe,M,4TA4W1B/B,KAAAgC,SAAYC,IACVjC,KAAKiC,MAAQA,EAAMC,OAAO,EAG5BlC,KAAAmC,sBAAwBC,MAAOC,IAC7BA,EAAMC,iBACN,MAAMC,QAAkBvC,KAAKwC,cAAcC,OAC3CC,EAAM,sBAAuB,wBAAyBH,GACtD,MAAMI,EAAQ3C,KAAK4C,QAAQC,gBAC3B,IAAKF,GAASJ,EAAUO,iBAAkB,CACxC9C,KAAKiC,MAAQjC,KAAK4C,QAAQG,mBAAqB,8BAC/C,M,CAEF/C,KAAKgD,UAAY,KACjBhD,KAAKiD,kBAAoB,MACzB,MAAMtC,EAAYX,KAAKkD,kBACvB,MAAMC,MACJA,EAAKC,YACLA,EAAWC,SACXA,EAAQC,aACRA,EAAYC,gBACZA,EAAeC,SACfA,EAAQC,YACRA,EAAWC,OACXA,EAAMC,sBACNA,EAAqBC,sBACrBA,EAAqBC,iBACrBA,EAAgBC,mBAChBA,EAAkBC,iBAClBA,EAAgBC,uBAChBA,EAAsBC,wBACtBA,EAAuBC,wBACvBA,EAAuB5C,aACvBA,EAAY6C,qBACZA,EAAoBC,iBACpBA,EAAgBC,qBAChBA,EAAoBC,aACpBA,EAAYC,4BACZA,EAA2BC,UAC3BA,EAASC,cACTA,EAAaC,YACbA,EAAWC,mBACXA,EAAkBC,KAClBA,EAAIC,WACJA,EAAU1D,KACVA,GACER,EACJ,MAAMmE,EAAY9E,KAAK+E,uBAAuBzD,cAAc0D,MAAKC,GAAKA,EAAEC,gBAAiB5D,GAAc0D,MAAKC,GAAKA,EAAEC,eACnH,MAAMC,EAAqBd,GAAwBS,GAAWM,MAAQf,EAAqBS,GAAWM,OAAS,GAC/G,MAAMC,EAA2BP,GAAWQ,SAASC,aAAehC,EACpE,MAAMiC,EAAkBnC,EAAWoC,SAASpC,GAAY,GAExD,MAAMqC,EACJpE,GAAgBA,GAAcqE,OAAS,EACnCrE,EACA,CACE,CACEH,KAAM2D,GAAW3D,MAAQnB,KAAK4F,aAAazE,MAAQ,GACnDiE,MAAON,GAAWM,OAASpF,KAAK4F,aAAaR,OAAS,GACtDF,aAAc,KACdW,SAAUvC,GAAcuC,UAAYC,KAAKC,iBAAiBC,kBAAkBC,SAC5E3C,aAAc,CACZ4C,aAAcf,EAAmBQ,OAASR,EAAqB,CAAC,WAChEgB,WAAY,IAEdb,QAAS,CACPC,YAAahC,GAAmBA,IAAoB,GAAKA,EAAkB,aAKvF,MAAM6C,EAAuC,IACvCpG,KAAK+E,uBAAuBzE,IAAM,CAAEA,GAAIN,KAAK+E,sBAAsBzE,IACvE+F,QAASrG,KAAK+E,uBAAuBsB,SAAW,QAChDzB,KAAMA,EACNzD,KAAMA,EACNmC,aAAc,CACZgD,iBAAkBd,EAClBe,iBAAkBxC,GAAkByC,UAAYhB,EAChDiB,SAAU1C,GAAkB2C,QAC5BC,mBAAoB,CAClBC,oBAAqBjC,EAAqBA,EAAqB3E,KAAK+E,uBAAuBzB,cAAcqD,oBAAoBC,qBAAuB,aACpJlD,OAAQA,GAAU,CAAEmD,OAAQ,EAAGC,MAAO,GACtCC,mBAAoBzD,GAAc0D,WAAahH,KAAK+E,uBAAuBzB,cAAcqD,oBAAoBI,oBAAsBE,EACnIC,qBAAsBlH,KAAK+E,uBAAuBzB,cAAcqD,oBAAoBO,sBAAwB,KAGhH5F,aAAc,IACToE,GAAkByB,KAAIlC,IACvB,GAAIA,EAAEC,aAAc,CAClB,MAAO,CACL/D,KAAM8D,EAAE9D,MAAQ,GAChBiE,MAAOH,EAAEG,MACTF,aAAc,KACdW,SAAU1B,IAAuBc,EAAEG,SAAS,IAAIS,UAAYZ,EAAE3B,cAAc6C,aAAa,IAAIN,UAAYC,KAAKC,iBAAiBC,kBAAkBC,SACjJ3C,aAAc,CACZ4C,aAAc7B,IAAuBY,EAAEG,OAASf,IAAuBY,EAAEG,OAASD,GAAoBQ,OAASR,EAAqB,CAAC,WACrIgB,WAAYhC,IAAuBc,EAAEG,QAAUH,EAAE3B,cAAc6C,YAAc,IAE/Eb,QAAS,CACPC,YAAahB,IAA8BU,EAAEG,OAASb,IAA8BU,EAAEG,OAASC,EAA2BA,EAA2B,W,CAI3J,MAAO,IACFJ,EACHY,SAAU1B,IAAuBc,EAAEG,SAAS,IAAIS,UAAYZ,EAAE3B,cAAc6C,aAAa,IAAIN,UAAYC,KAAKC,iBAAiBC,kBAAkBC,SACjJ3C,aAAc2B,EAAE3B,aACZ,CACE4C,aAAc7B,IAAuBY,EAAEG,QAAUH,EAAE3B,cAAc4C,cAAgB,CAAC,WAClFC,WAAYhC,IAAuBc,EAAEG,QAAUH,EAAE3B,cAAc6C,YAAc,IAE/EiB,UACJ9B,QAASf,IAA8BU,EAAEG,OAAS,CAAEG,YAAahB,IAA8BU,EAAEG,QAAWH,GAAGK,SAAW8B,UAC3H,KAGLC,cAAe,CACblE,MAAOA,GAAOmE,YAAc,GAC5BlE,YAAaA,GAAakE,YAAc,GACxC9D,SAAUA,GAAU8D,YAAc,GAClCC,aAAe9D,GAAa6D,YAA8B,UAC1DzB,SAAUvC,GAAcuC,UAAYC,KAAKC,iBAAiBC,kBAAkBC,SAC5E3B,aAAcA,EACdE,UAAWA,GAEbgD,UAAW,CACTC,oBAAqB3D,GAAsB,GAC3C4D,yBAA0B/D,GAAyB,GACnDgE,wBAAyB/D,GAAyB,EAClDgE,mBAAoB/D,GAAoB,GACxCgE,uBAAwB7D,GAA0B,MAClD8D,0BAA2B7D,GAA2B,MACtD8D,0BAA2B7D,GAA2B,MACtD8D,kBAAmB5D,EACnB6D,eAAgBxD,EAChByD,0BAA2BxD,GAE7BG,WAAYA,GAGd,MAAMsD,EAAoCC,EAAUhC,EAAcpG,KAAK+E,uBAEvE,MAAMsD,EAAcrI,KAAKsI,SAAW,SAAWH,EAAoC/B,EAEnF,GAAIpG,KAAKuI,mBAAmBF,GAAc,CAExCA,EAAY/G,aAAe+G,EAAY/G,aAAa6F,KAAIlC,IAAC,IAAUA,EAAGC,aAAckC,a,CAEtF,MAAMoB,EAAqBC,IACzBzI,KAAKgD,UAAY,MACjBhD,KAAK0I,aAAe,KACpBC,YAAW,KACT3I,KAAK0I,aAAe,KAAK,GACxB,IAAK,EAEV,MAAME,EAAW5I,KAAK6I,yBAAyBR,GAC/C,GAAIO,EAAU,CACZ,M,CAEF5I,KAAK8I,uBAAuBrG,KAAK,CAAEsG,OAAQV,EAAaG,oBAAmBxG,SAAUhC,KAAKgC,SAAUsG,OAAQtI,KAAKsI,QAAS,EAG5HtI,KAAAuI,mBAAsBQ,GACbA,EAAOzF,cAAcqD,oBAAoBC,sBAAwB,oBAAsBmC,EAAOzF,cAAcqD,oBAAoBC,sBAAwB,eAGjK5G,KAAA6I,yBAA2BE,IAEzB,IAAIH,EAAW,MACf,IAAII,EAAe,GACnB,MAAM5E,EAAmB2E,EAAOvB,WAAWQ,kBAC3C,MAAMiB,EAA8BF,EAAO1B,eAAeE,eAAiB,yBAC3E,MAAM2B,EAA2BH,EAAOvB,WAAW2B,2BACnD,GAAI/E,EAAkB,CACpB4E,EAAe,uBACfI,OAAOC,QAAQjF,GAAkBkF,SAAQC,IACvC,MAAMC,EAAQD,EAAM,GACpB,GAAIC,EAAMC,QAAU,GAAI,CACtBT,GAAgB,uCAAuCQ,EAAME,QAC7Dd,EAAW,KACX,M,CAEF,GAAIY,EAAMG,QAAS,CACjB,IAAK,MAAMC,KAAUJ,EAAMG,QAAS,CAClC,GAAIC,IAAW,GAAI,CACjBZ,GAAgB,gCAAgCQ,EAAMC,iBAAiBD,EAAME,QAC7Ed,EAAW,KACX,K,OAMV,GAAIK,IAAgCC,EAA0B,CAC5DF,GAAgB,yFAChBJ,EAAW,I,CAEb,GAAIA,EAAU,CACZ5I,KAAKgD,UAAY,MACjBhD,KAAKgC,SAAS,IAAI6H,MAAMb,G,CAE1B,OAAOJ,CAAQ,E,mHA5hB6D,G,UAMxC,M,oBAML,G,YAOI,S,eAIXnI,EAAIQ,U,eAIA,M,uBAIQ,M,kBAIL,M,eAyC5B,G,WAIqB,E,CAwB1B,oBAAA6I,CAAqBC,GACnBrH,EAAM,sBAAuB,uBAAwBqH,EAAW/J,KAAK+E,uBACrE/E,KAAKW,UAAY,IACZX,KAAKgK,uBAAuBD,IAEjC,GAAIA,GAAWzJ,GAAI,CACjBN,KAAKsI,OAAS,M,KACT,CACLtI,KAAKsI,OAAS,Q,EAKlB,kBAAA2B,CAAmBC,GAEjBxH,EAAM,sBAAuB,qBAAsBwH,GACnD,GAAIA,EAAS,CACXlK,KAAKW,UAAY,IACZX,KAAKgK,uBAAuBhK,KAAK+E,uB,EAK1C,iBAAAoF,GACEzH,EAAM,sBAAuB,oB,CAG/B,iBAAA0H,GACE1H,EAAM,sBAAuB,qBAC7B1C,KAAKW,UAAYX,KAAKgK,uBAAuBhK,KAAK+E,sB,CAGpD,gBAAAsF,GACE3H,EAAM,sBAAuB,oBAC7B,GAAI1C,KAAK+E,uBAAuBzE,GAAI,CAClCN,KAAK8J,qBAAqB9J,KAAK+E,sB,CAEjC,MAAMuF,EAAmBtK,KAAKuK,KAAKC,cAAc,0BAAgDrJ,KAEjG,GAAImJ,EAAiB,CACnBtK,KAAKY,UAAY0J,C,EAIrB,oBAAAG,GACE/H,EAAM,sBAAuB,uB,CAI/B,kBAAAgI,CAAmBrI,GACjBK,EAAM,sBAAuB,qBAAsBL,GACnD,MAAMlB,KAAEA,EAAIwJ,MAAEA,GAAUtI,EAAMuI,OAC9B5K,KAAK6K,aAAaF,EAAOxJ,GACzBnB,KAAKW,UAAY,IAAKX,KAAKW,WAC3BX,KAAKiD,kBAAoB,KACzBjD,KAAKiC,MAAQ,GACbjC,KAAK8K,2BAA2BrI,KAAK,CACnCkI,MAAOtI,EAAMuI,OAAOD,MACpBxJ,KAAMkB,EAAMuI,OAAOzJ,M,CAIvB,sBAAA6I,CAAuBjB,GACrB,IAAIgC,EAAuBhC,GAAQzH,cAAc0D,MAAKC,GAAKA,EAAEC,eAE7D,IAAK6F,GAAwBhC,GAAQzF,cAAcqD,oBAAoBC,sBAAwB,aAAc,CAC3GmE,EAAuBhC,GAAQzH,cAAc0D,MAAKC,GAAKA,EAAEG,QAAUpF,KAAK4F,aAAaR,QACrF,GAAI2F,EAAsB,CACxBA,EAAqB7F,aAAe,I,EAGxC,GAAI6D,GAAQlE,WAAY,CACtBmG,QAAQC,KACN,mK,CAGJ,MAAO,CACL9H,MAAO4F,GAAQ1B,eAAelE,OAAS,GACvCC,YAAa2F,GAAQ1B,eAAejE,aAAe,GACnDC,SAAU0F,GAAQzF,cAAcgD,kBAAkBgB,YAAc,KAChEhE,aAAc,CACZuC,SAAUkD,GAAQ1B,eAAexB,UAAYC,KAAKC,iBAAiBC,kBAAkBC,SACrFe,UAAW+B,GAAQzF,cAAcqD,oBAAoBI,oBAAsBE,GAE7E7C,iBAAkB2E,GAAQvB,WAAWQ,mBAAqB,GAC1D1D,aAAcyE,GAAQ1B,eAAe/C,cAAgB,GACrD4G,YAAaH,GAAsBzH,cAAc4C,cAAgB,GACjE5E,aAAcyH,GAAQzH,cAAgB,GACtCiC,gBAAiBwH,GAAsBzF,SAASC,aAAewF,GAAsB3F,OAAS,GAC9F5B,SAAUuF,GAAQ1B,eAAe7D,UAAY,GAC7CC,YAAasF,GAAQ1B,eAAeE,cAAgB,UACpD7D,OAAQqF,GAAQzF,cAAcqD,oBAAoBjD,QAAU,CAAEmD,OAAQ,EAAGC,MAAO,GAChFhD,mBAAoBiF,GAAQvB,WAAWC,qBAAuB,GAC9D9D,sBAAuBoF,GAAQvB,WAAWE,0BAA4B,GACtE9D,sBAAuBmF,GAAQvB,WAAWG,yBAA2B,EACrE9D,iBAAkBkF,GAAQvB,WAAWI,oBAAsB,GAC3D7D,iBAAkB,CAChByC,SAAUuC,GAAQzF,cAAciD,kBAAoBwC,GAAQzF,cAAcgD,iBAC1EI,QAASqC,GAAQzF,cAAcmD,UAEjCzC,uBAAwB+E,GAAQvB,WAAWK,wBAA0B,MACrE5D,wBAAyB8E,GAAQvB,WAAWM,2BAA6B,MACzE5D,wBAAyB6E,GAAQvB,WAAWO,2BAA6B,MACzExD,4BACEwE,GAAQzH,cAAc6J,QAAO,CAACC,EAAKnG,KACjC,GAAIA,EAAEK,SAASC,YAAa,CAC1B6F,EAAInG,EAAEG,OAASH,EAAEK,SAASC,W,CAE5B,OAAO6F,CAAG,KACN,GACR/G,qBACE0E,GAAQzH,cAAc6J,QAAO,CAACC,EAAKnG,KACjCmG,EAAInG,EAAEG,OAASH,EAAE3B,cAAc4C,aAC/B,OAAOkF,CAAG,GACT,KAAO,GACZ5G,UAAWuE,GAAQ1B,eAAe7C,UAClCC,cAAesE,GAAQvB,WAAWS,eAClCvD,YAAaqE,GAAQvB,WAAWU,0BAChCtD,KAAMmE,GAAQnE,KACdC,WAAYkE,GAAQlE,WACpB1D,KAAM4H,GAAQ5H,K,CAIlB,YAAA0J,CAAaF,EAAO7K,GAClB,OAAQA,GACN,IAAK,QACHE,KAAKW,UAAUwC,MAAQwH,EAAMrD,WAC7B,MACF,IAAK,cACHtH,KAAKW,UAAUyC,YAAcuH,EAAMrD,WACnC,MACF,IAAK,WACHtH,KAAKW,UAAU0C,SAAWsH,EAAMrD,WAChC,MACF,IAAK,eACHtH,KAAKW,UAAU2C,aAAe+H,KAAKC,MAAMX,EAAMrD,YAC/C,MACF,IAAK,eACHtH,KAAKW,UAAUW,aAAe+J,KAAKC,MAAMX,EAAMrD,YAC/C,MACF,IAAK,mBACHtH,KAAKW,UAAU4C,gBAAkBoH,EAAMrD,WACvC,MACF,IAAK,gCACHtH,KAAKW,UAAU4D,4BAA8B8G,KAAKC,MAAMX,EAAMrD,YAC9D,MACF,IAAK,WACHtH,KAAKW,UAAU6C,SAAWmH,EAAMrD,WAChC,MACF,IAAK,aACHtH,KAAKW,UAAU2D,aAAe+G,KAAKC,MAAMX,EAAMrD,YAC/C,MACF,IAAK,oBACHtH,KAAKW,UAAU8C,YAAckH,EAAMrD,WACnC,MACF,IAAK,cACHtH,KAAKW,UAAU+C,OAAS2H,KAAKC,MAAMX,EAAMrD,YACzC,MACF,IAAK,wBACHtH,KAAKW,UAAUgD,sBAAwB8B,SAASkF,EAAMrD,YACtD,MACF,IAAK,0BACHtH,KAAKW,UAAUiD,sBAAwB6B,SAASkF,EAAMrD,YACtD,MACF,IAAK,qBACHtH,KAAKW,UAAUkD,iBAAmB4B,SAASkF,EAAMrD,YACjD,MACF,IAAK,sBACHtH,KAAKW,UAAUmD,mBAAqB6G,EAAMrD,WAC1C,MACF,IAAK,oBACHtH,KAAKW,UAAUoD,iBAAmBsH,KAAKC,MAAMX,EAAMrD,YACnD,MACF,IAAK,6BACH,MAAMiE,EAAWF,KAAKC,MAAMX,EAAMrD,YAClCtH,KAAKW,UAAUqD,uBAAyBuH,EAASvH,uBACjDhE,KAAKW,UAAUsD,wBAA0BsH,EAAStH,wBAClDjE,KAAKW,UAAUuD,wBAA0BqH,EAASrH,wBAClD,MACF,IAAK,kCACH,MAAMC,EAAuBkH,KAAKC,MAAMX,EAAMrD,YAC9CtH,KAAKW,UAAUwD,qBAAuBA,EACtC,MACF,IAAK,oBACHnE,KAAKW,UAAUyD,iBAAmBuG,EAClC,MACF,IAAK,sBACH3K,KAAKW,UAAU0D,qBAAuBgH,KAAKC,MAAMX,EAAMrD,YACvD,MACF,IAAK,8BACHtH,KAAKW,UAAU8D,cAAgB4G,KAAKC,MAAMX,EAAMrD,YAChD,MACF,IAAK,qBACHtH,KAAKW,UAAU6D,UAAY,CAAEgH,UAAWH,KAAKC,MAAMX,EAAMrD,aACzD,MACF,IAAK,wBACHtH,KAAKW,UAAU+D,YAAciG,EAAMrD,WACnC,MACF,IAAK,sBACHtH,KAAKW,UAAUgE,mBAAqBgG,EAAMrD,WAC1C,MACF,IAAK,oBACHtH,KAAKW,UAAUiE,KAAOyG,KAAKC,MAAMX,EAAMrD,YACvC,MACF,IAAK,eACHtH,KAAKW,UAAUkE,WAAawG,KAAKC,MAAMX,EAAMrD,YAC7C,MACF,IAAK,YACHtH,KAAKW,UAAUQ,KAAOkK,KAAKC,MAAMX,EAAMrD,YACvC,MAEJtH,KAAK8K,2BAA2BrI,KAAK,CACnCkI,QACAxJ,KAAMrB,G,CAIV,eAAAoD,GACE,MAAMuI,EAAW,IAAIC,SAAS1L,KAAK4C,SACnC6I,EAASnC,SAAQ,CAACqB,EAAO7K,KACvBE,KAAK6K,aAAaF,EAAO7K,EAAI,IAG/BE,KAAKW,UAAY,IAAKX,KAAKW,WAC3B,OAAOX,KAAKW,S,CAGd,YAAAgL,CAAaC,EAAUC,GACrBD,EAAEtJ,iBACFtC,KAAKkD,kBACLlD,KAAKY,UAAYiL,C,CAgNnB,OAAAC,CAAQC,GACN,OAAO/L,KAAKgM,gBAAgBC,SAASF,IAAQ,K,CAkD/C,MAAAnM,GACE8C,EAAM,sBAAuB,SAAU1C,KAAKW,WAI5C,OACEd,EAACqM,EAAI,CAAApM,IAAA,4CACHD,EAAA,QAAAC,IAAA,2CAAMqM,SAAUnM,KAAKmC,sBAAuBpB,MAAM,mBAAmBqL,IAAKC,GAAOrM,KAAK4C,QAAUyJ,EAAwBC,WAAU,MAC/HtM,KAAKuM,OAAS,MACb1M,EAAA,OAAKkB,MAAM,iBACTlB,EAAA,OAAKkB,MAAM,QACTlB,EAAA,UACEsB,KAAMV,EAAIQ,UACVF,MAAO,CAAEgL,IAAK,KAAMS,OAAQxM,KAAKY,WAAaH,EAAIQ,UAAWD,KAAMhB,KAAK8L,QAAQrL,EAAIQ,YACpFwL,KAAK,wBACLC,QAASd,GAAK5L,KAAK2L,aAAaC,EAAGnL,EAAIQ,YAEvCpB,EAAA,sBAAoBE,MAAM,KAAKE,OAAO,OAAO,cAG/CJ,EAAA,UACEsB,KAAMV,EAAIY,aACVN,MAAO,CAAEgL,IAAK,KAAMS,OAAQxM,KAAKY,WAAaH,EAAIY,aAAcL,KAAMhB,KAAK8L,QAAQrL,EAAIY,eACvFoL,KAAK,0BACLC,QAASd,GAAK5L,KAAK2L,aAAaC,EAAGnL,EAAIY,eAEvCxB,EAAA,0BAAwBE,MAAM,KAAKE,OAAO,OAAO,gBAGnDJ,EAAA,UACEsB,KAAMV,EAAIiB,aACVX,MAAO,CAAEgL,IAAK,KAAMS,OAAQxM,KAAKY,WAAaH,EAAIiB,aAAcV,KAAMhB,KAAK8L,QAAQrL,EAAIiB,eACvF+K,KAAK,0BACLC,QAASd,GAAK5L,KAAK2L,aAAaC,EAAGnL,EAAIiB,eAEvC7B,EAAA,eAAaE,MAAM,KAAKE,OAAO,OAAO,gBAGxCJ,EAAA,UACEsB,KAAMV,EAAIc,eACVR,MAAO,CAAEgL,IAAK,KAAMS,OAAQxM,KAAKY,WAAaH,EAAIc,eAAgBP,KAAMhB,KAAK8L,QAAQrL,EAAIc,iBACzFkL,KAAK,6BACLC,QAASd,GAAK5L,KAAK2L,aAAaC,EAAGnL,EAAIc,iBAEvC1B,EAAA,aAAWE,MAAM,KAAKE,OAAO,OAAO,mBAGtCJ,EAAA,UACEsB,KAAMV,EAAImB,YACVb,MAAO,CAAEgL,IAAK,KAAMS,OAAQxM,KAAKY,WAAa,cAAeI,KAAMhB,KAAK8L,QAAQrL,EAAImB,cACpF6K,KAAK,0BACLC,QAASd,GAAK5L,KAAK2L,aAAaC,EAAGnL,EAAImB,cAEtC5B,KAAKY,WAAaH,EAAImB,YAAc/B,EAAA,6BAA2BE,MAAM,KAAKE,OAAO,OAAUJ,EAAA,wBAAsBE,MAAM,KAAKE,OAAO,OAAO,gBAG7IJ,EAAA,UACEsB,KAAMV,EAAIgB,eACVV,MAAO,CAAEgL,IAAK,KAAMS,OAAQxM,KAAKY,WAAa,iBAAkBI,KAAMhB,KAAK8L,QAAQrL,EAAIgB,iBACvFiL,QAASd,GAAK5L,KAAK2L,aAAaC,EAAGnL,EAAIgB,iBAEtCzB,KAAKY,WAAaH,EAAIgB,eAAiB5B,EAAA,sBAAoBE,MAAM,KAAKE,OAAO,OAAUJ,EAAA,iBAAeE,MAAM,KAAKE,OAAO,OAAO,kBAGlIJ,EAAA,UACEsB,KAAMV,EAAIkB,WACVZ,MAAO,CAAEgL,IAAK,KAAMS,OAAQxM,KAAKY,WAAa,aAAcI,KAAMhB,KAAK8L,QAAQrL,EAAIkB,aACnF+K,QAASd,GAAK5L,KAAK2L,aAAaC,EAAGnL,EAAIkB,aAEtC3B,KAAKY,WAAaH,EAAIkB,WAAa9B,EAAA,wBAAsBE,MAAM,KAAKE,OAAO,OAAUJ,EAAA,mBAAiBE,MAAM,KAAKE,OAAO,OAAO,gBAIpIJ,EAAA,OAAKkB,MAAM,eACTlB,EAACa,EAAW,CACVC,UAAWX,KAAKW,UAChBC,UAAWZ,KAAKY,UAChBgF,YAAa5F,KAAK4F,YAClB+G,UAAW3M,KAAK2M,UAChBrM,GAAIN,KAAK+E,uBAAuBzE,IAAM,UAK5CT,EAAA,OAAKkB,MAAM,aAAajB,IAAKE,KAAK+E,uBAAuBzE,IACvDT,EAAA,cAIJA,EAAA,OAAAC,IAAA,2CAAKiB,MAAM,SAAS0L,KAAK,kBACvB5M,EAAA,OAAAC,IAAA,2CAAKiB,MAAM,UAAU0L,KAAK,0BACvBzM,KAAK4M,uBAAyB,IAAM5M,KAAKsI,SAAW,QACnDzI,EAAA,oBACE6J,KAAK,SACLmD,SAAU7M,KAAKgD,UACf8J,aAAczK,IACZA,EAAMC,iBACN,MAAMyK,EAAe/M,KAAKgN,qBAAqBvK,KAAKzC,KAAKuK,MACzD,IAAKwC,EAAajK,iBAAkB,CAClCmK,OAAOC,KAAKC,EAAiBnN,KAAK4M,qBAAsB5M,KAAK+E,uBAAwB,S,GAGzFqI,QAAS,SAAO,YAMtBvN,EAAA,OAAAC,IAAA,2CAAKiB,MAAM,UAAU0L,KAAK,0BACxB5M,EAAA,KAAAC,IAAA,2CACEiB,MAAO,CACL,kBAAmBf,KAAKiD,oBAAsBjD,KAAK0I,aACnD,gBAAiB1I,KAAK0I,aACtBzG,MAASjC,KAAKiC,QAAU,GACxB,mBAAoBjC,KAAKiC,QAAU,IAAMjC,KAAKsI,SAAW,WAG1DtI,KAAKiC,QAAU,GAAKjC,KAAKiC,MAAQ,GACjCjC,KAAKiC,OAAS,IAAMjC,KAAKiD,oBAAsBjD,KAAK0I,aAAe,kBAAoB1I,KAAKiC,OAAS,IAAMjC,KAAK0I,aAAe,iBAAmB,IAErJ7I,EAAA,oBAAAC,IAAA,2CACE4J,KAAK,SACLmD,SAAU7M,KAAKgD,UACf8J,aAAczK,IACZA,EAAMC,iBACNtC,KAAKqN,kBAAkB5K,OACvBzC,KAAKiC,MAAQ,EAAE,EAEjBmL,QAAS,QACTX,KAAK,yBAAuB,QAI9B5M,EAAA,oBAAAC,IAAA,2CAAkB4J,KAAK,SAASmD,SAAU7M,KAAKgD,UAAWyJ,KAAK,sBAC5DzM,KAAKgD,UACJnD,EAAA,qBAEEA,EAAA,qBAAiB,KAEjBG,KAAKsI,SAAW,SAAQ,SAClB,mB,6IA5IxBgF,GA/CCC,EAAsH,CACrHpM,KAAM,oBACNqM,aAAc,IAAIC,IAAI,CACpB,CAAC,4BAA6B,aAC9B,CAAC,wCAAyC,yBAC1C,CAAC,8BAA+B,eAChC,CAAC,iCAAkC,oBAErCC,aAAc,CACZ5E,uBAAwB1G,MAAOC,EAA0CsL,KACvE,MAAMnF,kBAAEA,EAAiBxG,SAAEA,EAAQsG,OAAEA,EAAMS,OAAEA,GAAW1G,EAAMuI,OAE9D,MAAMgD,EAAkBC,IACtB,MAAOC,EAAM7L,GAAS4L,EACtB,IAAKC,GAAQ7L,GAASD,EAAU,CAC9BA,EAASC,E,CAEX,GAAIuG,EAAmB,CACrBA,EAAkBnG,E,GAKtB,GAAIiG,IAAW,OAAQ,CACrB,MAAMuF,QAAiBF,EAA8BI,gBAAgBC,oBAAoBjF,GACzF6E,EAAeC,E,KACV,CACL,MAAMA,QAAiBF,EAA8BI,gBAAgBE,oBAAoBlF,GACzF6E,EAAeC,E,GAGnBR,kBAAmBjL,MAAO8L,EAAGP,KAC3BA,EAA8BQ,qBAAqBC,MAAM9F,OAAS,IAAI,EAExE0E,qBAAsB5K,MAAO8L,EAAGP,KAC9BjL,EAAM,sBAAuB,uBAAwBiL,EAA8B,EAErFnL,cAAeJ,MAAO8L,EAAGP,KACvBjL,EAAM,sBAAuB,gBAAiBiL,EAA8B,EAE9E7C,2BAA4B1I,MAAOC,EAAqDgM,KACtF3L,EAAM,sBAAuB,6BAA8BL,EAAM,GAGrEiM,iBAAkB,IAAIb,IAAI,CAAC,CAAC,uBAAwB,0BACpDc,kBAAmB,O,wHCzvBvB,MAAMC,EAA6B,g1JACnC,MAAAC,EAAeD,E,ugBCgBFE,EAAuB,M,uQASQ,G,0BAMoC,G,uDAuCrB,U,WAKxB,G,mBAKO,K,qBAKH,G,2BAKK,K,CAG1C,0CAAAC,CAA2CC,EAAuBC,GAChE,IAAKD,GAAUA,IAAWC,EAAQ,CAChC,GAAID,IAAW,KAAM,CACnB5O,KAAK8O,sBAAwB,I,CAE/B,M,CAEF9O,KAAK8O,sBAAwB,MAC7B9O,KAAK+O,cAAgBH,C,CAGvB,iBAAAzE,GACEzH,EAAM,8BAA+B,oB,CAGvC,iBAAA0H,GACE1H,EAAM,8BAA+B,qBAGrC,GAAI1C,KAAKgP,gBAAkBhP,KAAKgP,eAAerJ,OAAS,EAAG,CACzD3F,KAAKoO,MAAQ,Q,EAIjB,gBAAA/D,GACE3H,EAAM,8BAA+B,oBAIrC1C,KAAKiP,uBAAuBxM,KAAK,CAC/B8H,KAAMvK,KAAKuK,M,CAIf,oBAAAE,GACE/H,EAAM,8BAA+B,uB,CAIvC,oCAAMwM,CAA+B7M,GACnCK,EAAM,8BAA+B,iCAAkCL,EAAMuI,QAC7E,MAAMD,MAAEA,GAAUtI,EAAMuI,OACxB,MAAOtC,EAAQ6G,GAASxE,EAAMyE,MAAM,KACpC/M,EAAMC,iBACN,OAAQgG,GACN,IAAK,SACHtI,KAAKqP,kBAAkB5M,KAAK,CAAE8H,KAAMvK,KAAKuK,KAAM+E,cAAetP,KAAKgP,eAAeG,KAClF,MACF,IAAK,UACHlC,OAAOC,KAAKC,EAAiBnN,KAAK4M,qBAAsB5M,KAAKgP,eAAeG,IAAS,UACrF,MACF,IAAK,aACGI,UAAUC,UAAUC,UAAUtC,EAAiBnN,KAAK4M,qBAAsB5M,KAAKgP,eAAeG,KACpG,M,CAON,cAAMO,GACJ,OAAO1P,KAAKoO,K,CAId,cAAMuB,CAASvB,GACbpO,KAAKoO,MAAQA,C,CAIf,cAAMpM,CAASC,GACbjC,KAAKiC,MAAQA,C,CAGP,iBAAA2N,CAAkBvM,GACxB,MAAMwM,EAAQC,KAAKC,MAAM1M,EAAW,IACpC,MAAM2M,EAAU3M,EAAW,GAC3B,MAAO,GAAGwM,EAAQA,EAAQ,MAAMA,EAAQ,GAAGA,EAAQ,EAAI,QAAU,SAAW,MAAMG,EAAUA,EAAU,MAAMA,EAAU,GAAGA,EAAU,EAAI,OAAS,QAAU,I,CAG5J,kBAAAC,CAAmB3H,GACjB,MAAM4H,EAAc,CAClBC,QAAS,cACTC,WAAY,SACZC,IAAK,UAEP,MAAMC,EAAc,CAClBC,MAAO,sBAET,OAAQjI,GACN,IAAK,UACH,OACEzI,EAAA,QAAM2Q,MAAON,GACXrQ,EAAA,YAAUE,MAAM,KAAKE,OAAO,OAAgB,WAIlD,IAAK,OACH,OACEJ,EAAA,QAAM2Q,MAAON,GACXrQ,EAAA,aAAWE,MAAM,KAAKE,OAAO,OAAO,QAI1C,IAAK,SACH,OACEJ,EAAA,QAAM2Q,MAAO,IAAKN,KAAgBI,IAChCzQ,EAAA,eAAaE,MAAM,KAAKE,OAAO,OAAmB,UAIxD,QACE,MAAO,G,CAIb,0BAAAwQ,GACE,GAAIzQ,KAAK0Q,gBAAgB/K,SAAW,EAAG,OAEvC3F,KAAK+O,cAAgB/O,KAAK0Q,gBAAgBC,OAAS,KACnD,MAAMC,EAAa5Q,KAAK0Q,gBAAgB1Q,KAAK0Q,gBAAgB/K,OAAS,IAAMyB,UAC5EpH,KAAKiP,uBAAuBxM,KAAK,CAC/B8H,KAAMvK,KAAKuK,KACXsG,OAAQD,G,CAIZ,sBAAAE,GACE,IAAK9Q,KAAK+O,cAAe,OAEzB/O,KAAK0Q,gBAAkB,IAAI1Q,KAAK0Q,gBAAiB1Q,KAAK+O,eACtD/O,KAAKiP,uBAAuBxM,KAAK,CAC/B8H,KAAMvK,KAAKuK,KACXsG,OAAQ7Q,KAAK+O,e,CA4CjB,MAAAnP,GACE,OACEC,EAACqM,EAAI,KACHrM,EAAA,OAAKkB,MAAM,UACTlB,EAAA,OAAKkB,MAAM,eACTlB,EAAA,kCACAA,EAAA,sDAEDG,KAAKgP,gBAAkBhP,KAAKgP,eAAerJ,OAAS,GACnD9F,EAAA,OAAKkB,MAAM,WACTlB,EAAA,oBACE4M,KAAK,sBACLK,aAAc,KACZ9M,KAAK+Q,kBAAkBtO,KAAKzC,KAAKuK,KAAK,GACvC,gBAOT1K,EAAA,OAAKkB,MAAM,kBACTlB,EAAA,OAAKkB,MAAM,mBACTlB,EAAA,SACEkB,MAAO,CACL,oBAAqBf,KAAKoO,QAAU,aAAepO,KAAKgP,gBAAkBhP,KAAKgP,eAAerJ,SAAW,KAG3G9F,EAAA,MACEkB,MAAO,CACLC,KAAMhB,KAAKoO,QAAU,WAAcpO,KAAKgP,gBAAkBhP,KAAKgP,eAAerJ,SAAW,IAG3F9F,EAAA,wBACAA,EAAA,sBACAA,EAAA,YAEDG,KAAKoO,QAAU,WACdvO,EAAA,MAAIkB,MAAM,qBACRlB,EAAA,MAAImR,QAAS,GACXnR,EAAA,WACEA,EAAA,wBACAA,EAAA,+DAKPG,KAAKoO,QAAU,aAAepO,KAAKgP,gBAAkBhP,KAAKgP,eAAerJ,SAAW,IACnF9F,EAAA,MAAIkB,MAAM,qBACRlB,EAAA,MAAImR,QAAS,GACXnR,EAAA,WACEA,EAAA,iBAAeE,MAAM,KAAKE,OAAO,OACjCJ,EAAA,uCACAA,EAAA,iEACAA,EAAA,oBACE4M,KAAK,sBACLK,aAAc,KACZ9M,KAAK+Q,kBAAkBtO,KAAKzC,KAAKuK,KAAK,GACvC,iBAQVvK,KAAKoO,QAAU,WACdpO,KAAKgP,eAAe7H,KAAI,CAAC4B,EAAQkI,IAE7BpR,EAAA,MAAIC,IAAKiJ,EAAOzI,IACdT,EAAA,UACEA,EAAA,OAAKkB,MAAM,SACTlB,EAAA,OAAKkB,MAAM,qBAAqBoC,MAAO4F,EAAO1B,cAAclE,OACzD4F,EAAO1B,cAAclE,OAExBtD,EAAA,OAAKkB,MAAO,4BAA6BgI,EAAO1B,cAAcjE,eAGlEvD,EAAA,UACEA,EAAA,OAAKkB,MAAM,YAAYf,KAAK4P,kBAAkB7G,EAAOzF,aAAagD,oBAEpEzG,EAAA,UACEA,EAAA,OAAKkB,MAAM,WACTlB,EAAA,oBACEuN,QAAS,QACTtN,IAAK,QAAQmR,IACbnE,aAAczK,IACZA,EAAMC,iBACNtC,KAAKkR,gBAAgBzO,KAAK,CAAE8H,KAAMvK,KAAKuK,KAAM+E,cAAevG,GAAS,GAGvElJ,EAAA,aAAWE,MAAM,KAAKE,OAAO,OAAiB,QAGhDJ,EAAA,mBACEsB,KAAK,UACLwI,QAAS,CACP,CAAEgB,MAAO,WAAWsG,IAAKxH,MAAO,UAAW0H,UAAWnR,KAAKiQ,mBAAmB,YAC9E,CAAEtF,MAAO,QAAQsG,IAAKxH,MAAO,YAAa0H,UAAWnR,KAAKiQ,mBAAmB,SAC7E,CAAEtF,MAAO,UAAUsG,IAAKxH,MAAO,SAAU0H,UAAWnR,KAAKiQ,mBAAmB,YAE9EmB,sBAAuB,CAAEzG,MAAO,GAAIlB,MAAO,IAC3C4H,mBAAmB,MACnBC,WAAY,MACZC,YAAa,MACbnQ,YAAY,wIAS9BvB,EAAA,OAAKkB,MAAM,cACTlB,EAAA,UAAQkB,MAAM,aAAa2L,QAAS,IAAM1M,KAAKyQ,6BAA8B5D,SAAU7M,KAAK0Q,gBAAgB/K,QAAU,GACpH9F,EAAA,sBAEFA,EAAA,UAAQkB,MAAM,cAAc2L,QAAS,IAAM1M,KAAK8Q,yBAA0BjE,SAAU7M,KAAK8O,uBACvFjP,EAAA,wBAILG,KAAKoO,QAAU,SACdvO,EAAA,OAAKkB,MAAM,mBACTlB,EAAA,KAAGkB,MAAO,SAAUf,KAAKiC,Q,uIA7HnCqL,EAAA,CAxCCC,EAA8H,CAC7HpM,KAAM,4BACNqM,aAAc,IAAIC,IAAI,CACpB,CAAC,iCAAkC,kBACnC,CAAC,+CAAgD,kCAEnDa,iBAAkB,IAAIb,IAAI,CAAC,CAAC,uBAAwB,0BACpDC,aAAc,CACZuB,uBAAwB7M,MAAOC,EAAOmP,KACpC,MAAMjH,KAAEA,EAAIsG,OAAEA,GAAWxO,EAAMuI,aACzBL,EAAKoF,SAAS,WACpB,MAAO7B,EAAM7L,SAAeuP,EAAUzD,gBAAgB0D,kBAAkBZ,GACxE,IAAK/C,GAAQ7L,GAASA,EAAMC,QAAS,OAC7BqI,EAAKoF,SAAS,eACdpF,EAAKvI,SAASC,EAAMC,SAC1B,M,OAEIqI,EAAKoF,SAAS,SAAS,EAG/BoB,kBAAmB3O,MAAO8L,EAAGsD,KAC3BA,EAAUrD,qBAAqBuD,6BAC/BF,EAAUrD,qBAAqBC,MAAM9F,OAAS,QAAQ,EAExD+G,kBAAmBjN,MAAOC,EAAOmP,KAC/B,MAAMjH,KAAEA,EAAI+E,cAAEA,GAAkBjN,EAAMuI,OACtC,MAAOkD,EAAM7L,SAAeuP,EAAUzD,gBAAgB4D,oBAAoBrC,EAAchP,IACxF,IAAKwN,GAAQ7L,GAASA,EAAMC,QAAS,OAC7BqI,EAAKoF,SAAS,eACdpF,EAAKvI,SAASC,EAAMC,Q,GAG9BgP,gBAAiB9O,MAAOC,EAAOmP,KAC7B,MAAMlC,cAAEA,GAAkBjN,EAAMuI,OAChC4G,EAAUrD,qBAAqBC,MAAMrJ,sBAAwBuK,EAC7DkC,EAAUrD,qBAAqBC,MAAM9F,OAAS,MAAM,GAGxDiG,kBAAmB,O"}