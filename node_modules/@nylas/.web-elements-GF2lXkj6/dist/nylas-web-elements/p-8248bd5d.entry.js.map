{"version":3,"names":["nylasReminderEmailsCss","NylasReminderEmailsStyle0","NylasReminderEmails","this","eventReminders","connectedCallback","debug","disconnectedCallback","componentWillLoad","host","setAttribute","name","componentDidLoad","updateRemindersFormValue","componentWillUpdate","componentDidUpdate","componentWillRender","componentDidRender","elementNameChangedHandler","newValue","handleValueChanged","event","value","detail","startsWith","_","reminderIndex","split","updatedReminders","reminders","reminder_minutes","parseInt","internals","setFormValue","JSON","stringify","valueChanged","emit","addReminder","reminder_method","editingReminderIndex","length","deleteReminder","index","splice","formatReminderTime","reminderTime","render","organizerName","participants","find","p","is_organizer","h","Host","key","class","map","reminder","part","variant","clickHandler","preventDefault","width","height","slot","eventReminderTimeMinutes","exportparts","__decorate","RegisterComponent","stateToProps","Map","eventToProps","async","_nylasSchedulerConfigConnector","fireRegisterEvent"],"sources":["src/components/scheduler-editor/nylas-reminder-emails/nylas-reminder-emails.scss?tag=nylas-reminder-emails&encapsulation=shadow","src/components/scheduler-editor/nylas-reminder-emails/nylas-reminder-emails.tsx"],"sourcesContent":["@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  @include default-css-variables;\n  width: inherit;\n}\n\n.cards-container {\n  margin-bottom: 4rem;\n\n  .nylas-reminder-email {\n    width: inherit;\n    display: flex;\n    flex-direction: column;\n    margin: 1rem;\n    border-radius: var(--nylas-border-radius-2x);\n    border: 1px solid var(--nylas-base-200);\n    text-align: left;\n\n    .header {\n      padding: 1rem;\n      display: grid;\n      grid-template-columns: 1fr auto;\n      border-bottom: 1px solid var(--nylas-base-200);\n\n      h3 {\n        border-radius: var(--nylas-border-radius-2x);\n        margin: 0;\n        font-size: 1rem;\n        font-weight: 600;\n        line-height: 20px;\n        color: var(--nylas-base-900);\n        text-align: left;\n      }\n\n      p {\n        margin: 0.25rem 0 0 0;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 20px;\n        color: var(--nylas-base-600);\n        text-align: left;\n      }\n\n      .confirmation-email-toggle {\n        display: flex;\n        gap: 24px;\n        align-items: center;\n\n        .chevron {\n          display: flex;\n          align-self: center;\n          cursor: pointer;\n\n          &:hover,\n          &:active {\n            color: var(--nylas-primary);\n          }\n\n          &.open {\n            transform: rotate(90deg);\n          }\n\n          &.closed {\n            transform: rotate(270deg);\n          }\n\n          &.disabled {\n            cursor: not-allowed;\n            color: var(--nylas-base-300);\n\n            &:hover {\n              color: var(--nylas-base-300);\n            }\n          }\n        }\n      }\n    }\n\n    .nylas-reminder-email__body {\n      display: grid;\n      grid-template-columns: 1fr auto;\n      background-color: var(--nylas-base-25);\n      border-radius: var(--nylas-border-radius-2x);\n\n      @media #{$mobile} {\n        grid-template-columns: 1fr;\n      }\n\n      .nylas-reminder-email__section {\n        padding: 1rem;\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        color: var(--nylas-base-800);\n\n        @media #{$mobile} {\n          border: none;\n        }\n\n        .nylas-reminder-email__row {\n          display: grid;\n          grid-template-columns: 1fr auto;\n          align-items: center;\n          gap: 1rem;\n\n          &.full-width-col {\n            grid-template-columns: 1fr;\n          }\n\n          label {\n            display: flex;\n            align-items: center;\n\n            span.required {\n              color: var(--nylas-error, #cc4841);\n            }\n\n            span.label-icon {\n              margin-left: 4px;\n\n              tooltip-component {\n                display: flex;\n              }\n            }\n          }\n\n          p {\n            margin: 0.25rem 0 0 0;\n            font-size: 1rem;\n            font-weight: 500;\n            line-height: 24px;\n            color: var(--nylas-base-900);\n          }\n\n          .company-logo-container {\n            display: flex;\n            gap: 32px;\n            width: 100%;\n\n            .input-container {\n              display: flex;\n              flex-direction: column;\n              flex: 1;\n            }\n\n            .company-logo {\n              display: flex;\n              justify-content: center;\n              align-items: center;\n              width: 200px;\n              height: 100px;\n              border: var(--nylas-base-200) solid 1px;\n              border-radius: var(--nylas-border-radius-2x);\n              overflow: hidden;\n              padding: 10px;\n            }\n\n            .company-logo img {\n              max-height: 100%;\n              max-width: 100%;\n              object-fit: contain;\n              object-position: center;\n            }\n          }\n\n          span.selected-value {\n            font-weight: 500;\n          }\n        }\n\n        .subsection {\n          display: flex;\n          flex-direction: column;\n          gap: 1rem;\n\n          h3 {\n            margin: 0;\n            font-size: 1rem;\n            font-weight: 600;\n            line-height: 20px;\n            color: var(--nylas-base-900);\n            text-align: left;\n          }\n\n          .input-container {\n            display: flex;\n            flex-direction: column;\n            gap: 0.25rem;\n\n            textarea {\n              padding: 12px 16px;\n              border-width: 1;\n              resize: vertical;\n              border-radius: 8px;\n              font-family: var(--nylas-font-family);\n              font-size: 16px;\n              line-height: 24px;\n              border: 1px solid var(--nylas-base-200);\n            }\n          }\n        }\n      }\n\n      .nylas-reminder-email__preview {\n        width: 208px;\n        background: var(--nylas-base-25);\n        border-bottom-right-radius: var(--nylas-border-radius-2x);\n\n        @media #{$mobile} {\n          width: inherit;\n          border-bottom-left-radius: var(--nylas-border-radius-2x);\n        }\n\n        h4 {\n          font-size: 14px;\n          line-height: 24px;\n          color: var(--nylas-base-600);\n          font-family: var(--nylas-font-family);\n          font-weight: 500;\n          text-align: center;\n          margin: 0.75rem 0;\n        }\n\n        .preview-container {\n          padding: 0 2rem 1rem;\n\n          .slot {\n            background-color: transparent;\n            border-top: 1px solid var(--nylas-base-300);\n\n            &.active {\n              background-color: var(--nylas-base-100);\n            }\n\n            &:last-of-type {\n              border-bottom: 1px solid var(--nylas-base-300);\n            }\n          }\n\n          .event-slot {\n            background-color: var(--nylas-base-600);\n            border-top: 1px solid var(--nylas-base-300);\n          }\n        }\n      }\n\n      span.error-message {\n        color: var(--nylas-error);\n      }\n\n      span.help-text {\n        margin: 0.25rem 0 0 0;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 20px;\n        color: var(--nylas-base-600);\n        text-align: left;\n      }\n    }\n\n    .nylas-reminder-email__summary {\n      padding: 0.75rem 1rem;\n      display: grid;\n      grid-template-columns: auto 1fr;\n      column-gap: 1rem;\n\n      p {\n        margin: 0;\n        display: flex;\n        align-items: center;\n        column-gap: 4px;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 21px;\n        color: var(--nylas-base-600);\n        text-align: left;\n\n        span.summary-icon {\n          display: flex;\n          justify-content: center;\n          min-width: 20px;\n        }\n      }\n    }\n  }\n}\n\nsp-divider {\n  background-color: var(--nylas-base-200);\n  height: 1px;\n  margin: 0.25rem 0;\n}\n\nbutton-component.create-reminder button {\n  margin: 1rem;\n  width: calc(100% - 2rem);\n}\n\nbutton-component.delete-btn button {\n  color: var(--nylas-error) !important;\n}","import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug } from '@/utils/utils';\nimport { AttachInternals, Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport { EventReminder, Participant } from '@nylas/core';\n/**\n * The `nylas-reminder-emails` component is a UI component that allows users to set buffer time before and after an event.\n *\n * @part nre__tab-heading - The nylas-reminder-emails main tab heading\n * @part nre - The nylas-reminder-emails container\n * @part nre__header - The header of the event communication section\n * @part nre__body - The body of the event communication section\n * @part nre__summary - The reminder card summary container\n * @part nre__reminder-input_dropdown - The dropdown container for selecting reminder time\n * @part nre__reminder-input_dropdown-input - The dropdown for selecting reminder time value\n * @part nre__reminder-input_dropdown-content - The dropdown for selecting reminder time unit (e.g. min, hrs, days)\n */\n@Component({\n  tag: 'nylas-reminder-emails',\n  styleUrl: 'nylas-reminder-emails.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class NylasReminderEmails {\n  @Element() host!: HTMLNylasReminderEmailsElement;\n\n  /**\n   * The list of event reminders to display.\n   */\n  @Prop() eventReminders: EventReminder[] = [];\n  /**\n   * List of participants\n   */\n  @Prop() participants: Participant[] = [];\n  /**\n   * The name of the component\n   */\n  @Prop() name: string = 'reminder-overrides';\n  /**\n   * The element internals.\n   */\n  @AttachInternals() internals!: ElementInternals;\n\n  /**\n   * The event reminders state. Defaults to an empty array if no event reminders are present.\n   */\n  @State() reminders: EventReminder[] = this.eventReminders ?? [];\n  @State() reminderErrors: { [key: string]: string } = {};\n  @State() editingReminderIndex: number | null = null;\n\n  /**\n   * This event is fired when the email reminders change.\n   */\n  @Event() valueChanged!: EventEmitter<{\n    value: string;\n    name: string;\n    valueChanged?: (event: CustomEvent<{ value: string; name: string }>) => void;\n  }>;\n\n  // Lifecycle methods\n  connectedCallback() {\n    debug('nylas-reminder-emails', 'connectedCallback');\n  }\n\n  disconnectedCallback() {\n    debug('nylas-reminder-emails', 'disconnectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('nylas-reminder-emails', 'componentWillLoad');\n    // See comment in the @Watch('name') decorator for more information.\n    this.host.setAttribute('name', this.name);\n  }\n\n  componentDidLoad() {\n    debug('nylas-reminder-emails', 'componentDidLoad');\n    this.updateRemindersFormValue();\n  }\n\n  componentWillUpdate() {\n    debug('nylas-reminder-emails', 'componentWillUpdate');\n  }\n\n  componentDidUpdate() {\n    debug('nylas-reminder-emails', 'componentDidUpdate');\n  }\n\n  componentWillRender() {\n    debug('nylas-reminder-emails', 'componentWillRender');\n  }\n\n  componentDidRender() {\n    debug('nylas-reminder-emails', 'componentDidRender');\n  }\n\n  /**\n   * When a name prop is passed, stencil does not automatically set the name attribute on the host element.\n   * Since this component is form-associated, the name attribute is required for form submission.\n   * This is a workaround to ensure that the name attribute is set on the host element.\n   */\n  @Watch('name')\n  elementNameChangedHandler(newValue: string) {\n    debug('nylas-reminder-emails', 'elementNameChangedHandler', newValue);\n    this.host.setAttribute('name', newValue);\n  }\n\n  @Listen('valueChanged')\n  handleValueChanged(event: CustomEvent) {\n    debug('nylas-reminder-emails', 'handleValueChanged', event);\n    const { name, value } = event.detail;\n\n    if (name.startsWith('reminder-time-')) {\n      const [_, reminderIndex] = name.split(/(\\d+)/);\n      const updatedReminders = [...this.reminders];\n      updatedReminders[reminderIndex].reminder_minutes = parseInt(value);\n\n      this.internals.setFormValue(JSON.stringify(updatedReminders), `reminder-overrides`);\n      this.valueChanged.emit({ value: JSON.stringify(updatedReminders), name: `reminder-overrides` });\n    }\n  }\n\n  addReminder() {\n    debug('nylas-reminder-emails', 'addReminder');\n    this.reminders = [\n      ...this.reminders,\n      {\n        reminder_method: 'email',\n        reminder_minutes: 30,\n      },\n    ];\n    this.editingReminderIndex = this.reminders.length - 1;\n    this.updateRemindersFormValue();\n  }\n\n  deleteReminder(index: number) {\n    this.reminders.splice(index, 1);\n    this.editingReminderIndex = null;\n    this.updateRemindersFormValue();\n  }\n\n  updateRemindersFormValue() {\n    debug('nylas-reminder-emails', 'updateRemindersFormValue');\n    this.internals.setFormValue(JSON.stringify(this.reminders), 'reminder-overrides');\n    this.valueChanged.emit({ value: JSON.stringify(this.reminders), name: 'reminder-overrides' });\n  }\n\n  formatReminderTime(reminderTime: number) {\n    switch (true) {\n      case reminderTime > 24 * 60:\n        return `${reminderTime / 60 / 24} days`;\n      case reminderTime === 24 * 60:\n        return '1 day';\n      case reminderTime > 90 || reminderTime === 60:\n        return `${reminderTime / 60} hours`;\n      default:\n        return `${reminderTime} minute${reminderTime > 1 ? 's' : ''} `;\n    }\n  }\n\n  @RegisterComponent<NylasReminderEmails, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-reminder-emails',\n    stateToProps: new Map([['schedulerConfig.eventReminders', 'reminders']]),\n    eventToProps: {\n      valueChanged: async (\n        event: CustomEvent<{ value: string; name: string; valueChanged?: (event: CustomEvent<{ value: string; name: string }>) => void }>,\n        _nylasSchedulerConfigConnector: NylasSchedulerConfigConnector,\n      ) => {\n        const { valueChanged } = event.detail;\n        // If a handler is passed, call it.\n        if (valueChanged) {\n          valueChanged(event);\n        }\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    const organizerName = this.participants.find(p => p.is_organizer)?.name;\n    return (\n      <Host>\n        <div class=\"cards-container\">\n          {this.reminders.map((reminder, index) => {\n            return (\n              <div class=\"nylas-reminder-email\" part=\"nre\">\n                <div class=\"header\" part=\"nre__header\">\n                  <div>\n                    <h3>Upcoming meeting{organizerName ? ` with ${organizerName} ` : ''}</h3>\n                    <p>Reminder before event</p>\n                  </div>\n                  {this.editingReminderIndex !== index ? (\n                    <button-component\n                      variant={'basic'}\n                      key={`edit-${index} `}\n                      clickHandler={event => {\n                        event.preventDefault();\n                        this.editingReminderIndex = index;\n                      }}\n                    >\n                      <edit-icon width=\"16\" height=\"16\"></edit-icon>\n                      Edit\n                    </button-component>\n                  ) : (\n                    <button-component\n                      variant={'basic'}\n                      class=\"delete-btn\"\n                      key={`delete -${index} `}\n                      clickHandler={event => {\n                        event.preventDefault();\n                        this.deleteReminder(index);\n                      }}\n                    >\n                      <trash-icon width=\"16\" height=\"16\"></trash-icon>\n                    </button-component>\n                  )}\n                </div>\n\n                {this.editingReminderIndex === index ? (\n                  <div class=\"nylas-reminder-email__body\" part=\"nre__body\">\n                    <div class=\"nylas-reminder-email__section\">\n                      <div class=\"nylas-reminder-email__row\">\n                        <label>\n                          Send confirmation email when\n                          <span class=\"label-icon\">\n                            <tooltip-component>\n                              <info-icon slot=\"tooltip-icon\" />\n                              <span slot=\"tooltip-content\">You and your guests will receive a confirmation immediately after your booking is set up.</span>\n                            </tooltip-component>\n                          </span>\n                        </label>\n                        <nylas-reminder-time\n                          name={`reminder-time-${index}`}\n                          eventReminderTimeMinutes={reminder.reminder_minutes}\n                          exportparts=\"nrt, nrt__input_dropdown: nre__reminder-input_dropdown,\n                          nrt__input_dropdown-input: nre__reminder-input_dropdown-input,\n                          nrt__input_dropdown-content: nre__reminder-input_dropdown-content,\n                          \"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div class=\"nylas-reminder-email__summary\" part=\"nre__summary\">\n                    <p>\n                      <span class=\"summary-icon\">\n                        <person-clipboard-icon></person-clipboard-icon>\n                      </span>\n                      All host & guests\n                    </p>\n                    <p>\n                      <span class=\"summary-icon\">\n                        <clock-icon></clock-icon>\n                      </span>\n                      {this.formatReminderTime(reminder.reminder_minutes)} before the event\n                    </p>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n\n        <button-component\n          class=\"create-reminder\"\n          variant={'basic'}\n          clickHandler={event => {\n            event.preventDefault();\n            this.addReminder();\n          }}\n        >\n          <plus-icon width=\"16\" height=\"16\"></plus-icon>\n          New reminder\n        </button-component>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}