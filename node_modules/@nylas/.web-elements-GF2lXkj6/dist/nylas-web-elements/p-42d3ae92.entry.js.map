{"version":3,"names":["inputDropdownCss","InputDropdownStyle0","InputDropdown","this","defaultInputOption","options","optionsChangedHandler","newValue","oldValue","filteredOptions","getFilteredOptions","defaultSelectedOptionChangedHandler","label","selectedOption","inputValueChangedHandler","componentWillLoad","length","filterable","filter","option","value","toString","toLowerCase","includes","typedValue","toggleDropdown","isOpen","selectOption","inputOptionChanged","emit","name","handleOnInput","event","target","optionIndex","findIndex","scrollToViewWithinParent","childElement","el","shadowRoot","getElementById","parentElement","optionsRef","ariaActivedescendant","childRect","getBoundingClientRect","parentRect","top","scrollTop","bottom","handleSelectButtonKeyDown","key","preventDefault","inputRef","focus","handleClick","setTimeout","handleListboxKeydown","e","items","currentIndex","item","shiftKey","nextIndex","focusOption","prevIndex","index","elementId","element","scrollIntoView","behavior","block","handleComboboxKeyDown","shouldAutoScroll","handleOutsideClick","path","composedPath","isClickInside","render","h","class","part","type","id","dropbtn","open","inputValue","onClick","onKeyDown","onInput","ref","tabindex","role","map","focused","labelHTML"],"sources":["src/components/design-system/input-dropdown/input-dropdown.scss?tag=input-dropdown&encapsulation=shadow","src/components/design-system/input-dropdown/input-dropdown.tsx"],"sourcesContent":["@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  position: relative;\n  @media #{$mobile} {\n    position: unset;\n  }\n  @include default-css-variables;\n}\n\n.dropdown {\n  display: inline-block;\n}\n\n.dropbtn {\n  color: var(--nylas-base-800);\n  padding: 10px;\n  font-size: 1rem;\n  font-family: var(--nylas-font-family);\n  cursor: pointer;\n  display: flex;\n  gap: 0.5rem;\n  background: transparent;\n  border: none;\n  border-radius: var(--nylas-border-radius-2x);\n  width: 50px;\n  padding: 14px 16px;\n  border-radius: var(--nylas-border-radius-2x);\n  &.focus {\n    background: transparent;\n  }\n  &:hover,\n  &:active {\n    outline: 1px solid var(--nylas-primary);\n  }\n  &:active {\n    outline: 2px solid var(--nylas-primary);\n  }\n  span {\n    &.chevron {\n      display: flex;\n      align-self: center;\n    }\n    &.open {\n      transform: rotate(90deg);\n    }\n    &.closed {\n      transform: rotate(270deg);\n    }\n    &.selected-option {\n      text-overflow: ellipsis;\n      overflow: hidden;\n      white-space: nowrap;\n      max-width: 144px;\n      font-size: 14px;\n      line-height: 20px;\n      @media #{$mobile} {\n        max-width: 124px;\n        font-size: 16px;\n      }\n    }\n  }\n}\n\n.dropdown-content {\n  display: block;\n  margin-top: 0.5rem;\n  background-color: var(--nylas-base-0);\n  max-width: 306px;\n  width: max-content;\n  max-height: 336px;\n  overflow: auto;\n  z-index: 1;\n  border-radius: 4px;\n  position: absolute;\n  @media #{$mobile} {\n    right: 0;\n    width: 325px;\n    max-width: unset;\n  }\n  box-shadow: 0px 4px 6px -2px rgba(0, 0, 0, 0.05);\n  box-shadow: 0px 10px 15px -3px rgba(0, 0, 0, 0.1);\n}\n\n.search-box {\n  border-bottom: 1px solid var(--nylas-base-200);\n  padding: 10px;\n  position: sticky;\n  top: 0;\n  background: var(--nylas-base-0);\n  .icon {\n    position: absolute;\n    top: 1.25rem;\n    left: 1.25rem;\n    color: var(--nylas-base-300);\n  }\n}\n\n.dropdown-content ul {\n  padding: 0;\n  list-style-type: none;\n  color: var(--nylas-base-900);\n  max-height: 336px;\n  li {\n    padding: 16px, 12px, 16px, 12px;\n    color: black;\n    padding: 12px 16px;\n    text-decoration: none;\n    display: block;\n    font-family: inherit;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 20px;\n    letter-spacing: 0px;\n    text-align: left;\n    cursor: pointer;\n    &:hover,\n    &:focus {\n      background-color: var(--nylas-base-100);\n    }\n  }\n}\n\n.dropdown-content .selected {\n  background-color: #e7e7e7;\n}\n\ninput[type='text'] {\n  width: -webkit-fill-available;\n  padding: inherit;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  position: sticky;\n  background: no-repeat scroll 7px 7px;\n  padding-left: 30px;\n  background-size: 16px 16px;\n}\n","import { Component, Element, Event, EventEmitter, h, Listen, Prop, State, Watch } from '@stencil/core';\n\ninterface DropdownOption {\n  labelHTML?: HTMLElement;\n  label: string;\n  value: string;\n}\n\n/**\n * The `input-dropdown` component is a dropdown that allows users to input an option and/or select from a list of options.\n * @part id_dropdown - The dropdown container\n * @part id_dropdown-input - The dropdown button\n * @part id_dropdown-content - The dropdown content\n */\n@Component({\n  tag: 'input-dropdown',\n  styleUrl: 'input-dropdown.scss',\n  shadow: true,\n})\nexport class InputDropdown {\n  @Element() el!: HTMLElement;\n\n  private inputRef?: HTMLInputElement;\n  private optionsRef!: HTMLElement;\n\n  // Props\n  /**\n   * The name of the dropdown\n   */\n  @Prop() name!: string;\n  /**\n   * The options to display in the dropdown\n   */\n  @Prop() options: DropdownOption[] = [];\n  /**\n   * The default selected option\n   */\n  @Prop() defaultInputOption?: DropdownOption;\n  /**\n   * Should show search input\n   */\n  @Prop() inputValue!: string;\n  /**\n   * Show pluralized label for the selected option. This is s tring that is appended to the selected option label as a suffix.\n   */\n  @Prop() pluralizedLabel: string = '';\n\n  /**\n   * This is used to set if the dropdown should be filtered based on the input value.\n   * If set to true, the dropdown will be filtered based on the input value.\n   */\n  @Prop() filterable: boolean = false;\n\n  // States\n  /**\n   * The selected option\n   */\n  @State() selectedOption: DropdownOption | null = this.defaultInputOption || null;\n  /**\n   * The open state of the dropdown\n   */\n  @State() isOpen: boolean = false;\n\n  /**\n   * The typed value in the input\n   */\n  @State() typedValue: string = '';\n\n  /**\n   * The filtered options based on the search value\n   */\n  @State() filteredOptions: DropdownOption[] = [...this.options];\n  /**\n   * The aria-activedescendant attribute for the listbox element to indicate the currently active\n   * option in the list box to screen readers. The value of aria-activedescendant is the ID of\n   * the active option.\n   */\n  @State() ariaActivedescendant: string = '';\n\n  /**\n   * This is used to scroll to the input value.\n   */\n  @State() shouldAutoScroll: boolean = false;\n\n  // Events\n  /**\n   * This event is fired when the selected option is changed\n   */\n  @Event({ bubbles: true, composed: true }) inputOptionChanged!: EventEmitter<{\n    value: DropdownOption['value'];\n    name: string;\n  }>;\n\n  @Watch('options')\n  optionsChangedHandler(newValue: DropdownOption[], oldValue: DropdownOption[]) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.filteredOptions = this.getFilteredOptions(newValue);\n  }\n\n  @Watch('defaultInputOption')\n  defaultSelectedOptionChangedHandler(newValue: DropdownOption, oldValue: DropdownOption) {\n    if (newValue?.label === oldValue?.label) {\n      return;\n    }\n    this.selectedOption = newValue;\n  }\n\n  @Watch('inputValue')\n  inputValueChangedHandler(newValue: string, oldValue: string) {\n    if (newValue === oldValue) {\n      return;\n    }\n    this.filteredOptions = this.getFilteredOptions(this.options);\n  }\n\n  // Lifecycle methods\n  componentWillLoad() {\n    this.filteredOptions = this.getFilteredOptions(this.options);\n    // Set the selected option to the first option if no option is selected\n    if (!this.selectedOption && !!this.defaultInputOption) {\n      this.selectedOption = this.defaultInputOption;\n    }\n    if (!this.selectedOption && this.options.length > 0) {\n      this.selectedOption = this.options[0];\n    }\n  }\n\n  // Methods\n  getFilteredOptions(options): DropdownOption[] {\n    if (!this.filterable) {\n      return options;\n    }\n\n    return options.filter(\n      option => option?.value?.toString().toLowerCase().includes(this.typedValue?.toLowerCase()) || option?.label?.toLowerCase().includes(this.typedValue?.toLowerCase()),\n    );\n  }\n  toggleDropdown(): void {\n    this.isOpen = !this.isOpen;\n  }\n\n  selectOption(option: DropdownOption): void {\n    this.selectedOption = option;\n    this.toggleDropdown();\n    this.inputOptionChanged.emit({\n      value: option.value,\n      name: this.name,\n    });\n  }\n\n  handleOnInput(event: Event): void {\n    const value = (event.target as HTMLInputElement).value;\n    this.typedValue = value;\n    const optionIndex = this.options.findIndex(option => option.label.toLowerCase().includes(value.toLowerCase()));\n    if (optionIndex > -1) {\n      this.scrollToViewWithinParent(optionIndex);\n    }\n    this.inputOptionChanged.emit({\n      value,\n      name: this.name,\n    });\n  }\n\n  scrollToViewWithinParent(optionIndex: number) {\n    const option = this.options[optionIndex];\n    const childElement = this.el.shadowRoot?.getElementById(option.value.toString()) as HTMLLIElement;\n    const parentElement = this.optionsRef;\n\n    this.ariaActivedescendant = option.value.toString();\n    if (!childElement || !parentElement) return;\n    // Scroll child into view within parent\n    const childRect = childElement.getBoundingClientRect();\n    const parentRect = parentElement.getBoundingClientRect();\n\n    if (childRect.top < parentRect.top) {\n      // Child is above the visible area of the parent\n      parentElement.scrollTop -= parentRect.top - childRect.top;\n    } else if (childRect.bottom > parentRect.bottom) {\n      // Child is below the visible area of the parent\n      parentElement.scrollTop += childRect.bottom - parentRect.bottom;\n    }\n  }\n\n  handleSelectButtonKeyDown(event: KeyboardEvent): void {\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'Enter':\n        event.preventDefault();\n        if (!this.isOpen) {\n          this.toggleDropdown();\n        }\n        this.inputRef?.focus();\n        break;\n      case 'Escape':\n        this.isOpen = false;\n        break;\n    }\n  }\n\n  handleClick(event: Event): void {\n    if (this.isOpen) {\n      const value = (event.target as HTMLInputElement).value;\n      const optionIndex = this.options.findIndex(option => option.label.toLowerCase().includes(value.toLowerCase()));\n      if (optionIndex > -1) {\n        setTimeout(() => {\n          this.scrollToViewWithinParent(optionIndex);\n        }, 10);\n      }\n    }\n  }\n\n  handleListboxKeydown(e) {\n    const items = this.filteredOptions;\n    const currentIndex = items.findIndex(item => item.value === this.ariaActivedescendant);\n    if (e.key === 'ArrowDown' || (e.key === 'Tab' && !e.shiftKey)) {\n      e.preventDefault();\n      if (currentIndex === items.length - 1) {\n        this.ariaActivedescendant = '';\n        this.inputRef?.focus();\n        return;\n      }\n      const nextIndex = currentIndex + 1 < items.length ? currentIndex + 1 : 0;\n      this.ariaActivedescendant = items[nextIndex].value;\n      this.focusOption(nextIndex);\n    } else if (e.key === 'ArrowUp' || (e.key === 'Tab' && e.shiftKey)) {\n      e.preventDefault();\n      if (currentIndex === 0) {\n        this.ariaActivedescendant = '';\n        this.inputRef?.focus();\n        return;\n      }\n      const prevIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : items.length - 1;\n      this.ariaActivedescendant = items[prevIndex].value;\n      this.focusOption(prevIndex);\n    } else if (e.key === 'Enter') {\n      e.preventDefault();\n      if (this.ariaActivedescendant) {\n        this.selectOption(items[currentIndex]);\n      }\n    } else if (e.key === 'Escape') {\n      this.isOpen = false;\n    }\n  }\n\n  focusOption(index) {\n    const option = this.filteredOptions[index];\n    if (!option) return; // Guard clause in case index is out of bounds\n\n    const elementId = option.value;\n    const element = this.el.shadowRoot?.getElementById(elementId) as HTMLLIElement;\n\n    if (element) {\n      element.focus(); // Set focus on the element\n      element.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n    }\n  }\n\n  handleComboboxKeyDown(event: KeyboardEvent): void {\n    if (event.key === 'ArrowDown' || (event.key == 'Tab' && !event.shiftKey)) {\n      event.preventDefault();\n      if (!this.isOpen) {\n        this.isOpen = true;\n        this.shouldAutoScroll = true;\n        return;\n      }\n      this.ariaActivedescendant = this.filteredOptions[0].value;\n      this.focusOption(0);\n    } else if (event.key === 'ArrowUp' || (event.key === 'Tab' && event.shiftKey)) {\n      event.preventDefault();\n      this.ariaActivedescendant = this.filteredOptions[this.filteredOptions.length - 1].value;\n      this.focusOption(this.filteredOptions.length - 1);\n    } else if (event.key === 'Escape') {\n      this.isOpen = false;\n    }\n  }\n\n  // Event listeners\n  @Listen('click', { target: 'document', capture: true })\n  handleOutsideClick(event: MouseEvent) {\n    // Get the path of the event\n    const path = event.composedPath();\n\n    // Check if the path includes the host element\n    const isClickInside = path.includes(this.el);\n\n    if (!isClickInside && this.isOpen) {\n      this.isOpen = false;\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"dropdown\" part=\"id_dropdown\">\n        <input\n          type=\"text\"\n          name={this.name}\n          id={this.name}\n          part=\"id_dropdown-input\"\n          class={{ dropbtn: true, open: this.isOpen }}\n          value={this.inputValue}\n          onClick={(e: Event) => {\n            this.toggleDropdown();\n            this.shouldAutoScroll = true;\n            this.handleClick(e);\n          }}\n          aria-haspopup=\"listbox\"\n          aria-label={this.name}\n          aria-expanded={this.isOpen ? 'true' : 'false'}\n          onKeyDown={e => this.handleComboboxKeyDown(e)}\n          onInput={event => this.handleOnInput(event)}\n        />\n        {this.isOpen ? (\n          <div class=\"dropdown-content\" part=\"id_dropdown-content\" ref={el => (this.optionsRef = el as HTMLElement)}>\n            <ul tabindex=\"-1\" role=\"listbox\" aria-label={this.name} aria-activedescendant={this.ariaActivedescendant} onKeyDown={e => this.handleListboxKeydown(e)}>\n              {this.filteredOptions.map(option => (\n                <li\n                  tabindex=\"0\"\n                  key={option.value}\n                  id={option.value}\n                  onClick={() => this.selectOption(option)}\n                  role=\"option\"\n                  class={{\n                    focused: this.ariaActivedescendant === option.value.toString(),\n                  }}\n                >\n                  {option.labelHTML ? option.labelHTML : option.label}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n"],"mappings":"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"}