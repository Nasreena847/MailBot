{"file":"nylas-booking-confirmation-type.entry.esm.js","mappings":"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","names":[],"sources":["src/components/scheduler-editor/nylas-booking-confirmation-type/nylas-booking-confirmation-type.scss?tag=nylas-booking-confirmation-type&encapsulation=shadow","src/components/scheduler-editor/nylas-booking-confirmation-type/nylas-booking-confirmation-type.tsx"],"sourcesContent":["@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  @include default-css-variables;\n  width: inherit;\n}\n\n.nylas-booking-confirmation-type {\n  width: inherit;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n\n  .nylas-booking-confirmation-type__dropdown {\n    span.label {\n      display: flex;\n      align-items: center;\n      gap: 4px;\n      color: var(--nylas-base-800);\n\n      tooltip-component {\n        display: flex;\n      }\n    }\n\n    select-dropdown::part(sd_dropdown) {\n      width: 100%;\n    }\n\n    select-dropdown::part(sd_dropdown-button) {\n      width: 100%;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      border: 1px solid var(--nylas-base-200);\n      border-radius: var(--nylas-border-radius-2x);\n      padding: 1rem;\n    }\n\n    select-dropdown::part(sd_dropdown-content) {\n      width: 100%;\n      max-width: unset;\n    }\n\n    select-dropdown::part(sd_dropdown-button-selected-label) {\n      max-width: calc(100% - 2rem);\n      font-family: var(--nylas-font-family);\n      font-size: 16px;\n      line-height: 24px;\n    }\n  }\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug } from '@/utils/utils';\nimport { AttachInternals, Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport { Configuration } from '@nylas/core';\n\n/**\n * The `nylas-booking-confirmation-type` component is a UI component that allows the user to choose a custom redirect URL after a booking is confirmed.\n * @part nbct - The custom booking flow container\n * @part nbct__header - The header of the custom booking flow\n * @part nbct__dropdown - The dropdown container\n * @part nbct__dropdown-button - The dropdown button\n * @part nbct__dropdown-content - The dropdown content\n */\n@Component({\n  tag: 'nylas-booking-confirmation-type',\n  styleUrl: 'nylas-booking-confirmation-type.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class NylasBookingConfirmationType {\n  @Element() host!: HTMLNylasBookingConfirmationTypeElement;\n  /**\n   * The selected config\n   */\n  @Prop() selectedConfiguration?: Configuration;\n\n  /**\n   * The name of the confirmation redirect link.\n   */\n  @Prop() name: string = 'confirmation-type';\n  /**\n   * The booking type.\n   */\n  @Prop() bookingType: string = 'booking';\n  /**\n   * @deprecated Show or hide the confirmation type.\n   * This prop is automatically determined based on the value of selectedConfiguration in the config,\n   * making it unnecessary to set this prop manually. The selectedConfiguration alone handles the functionality.\n   * This prop is deprecated and will be removed in the next version. Setting this prop will have no effect.\n   */\n  @Prop() showComponent: boolean = this.selectedConfiguration?.event_booking?.booking_type !== 'custom-confirmation';\n  /**\n   * The element internals.\n   */\n  @AttachInternals() internals!: ElementInternals;\n\n  /**\n   * The selected bookingType.\n   */\n  @State() selectedBookingType!: string;\n\n  /**\n   * The open/close state of the booking confirmation type dropdown.\n   */\n  @State() showDropdown!: boolean;\n  /**\n   * This event is fired when the selected bookingType changes.\n   */\n  @Event() valueChanged!: EventEmitter<{\n    value: string;\n    name: string;\n    valueChanged?: (event: CustomEvent<{ value: string; name: string }>) => void;\n  }>;\n\n  /**\n   * When a name prop is passed, stencil does not automatically set the name attribute on the host element.\n   * Since this component is form-associated, the name attribute is required for form submission.\n   * This is a workaround to ensure that the name attribute is set on the host element.\n   */\n  @Watch('name')\n  elementNameChangedHandler(newValue: string) {\n    debug('nylas-booking-confirmation-type', 'elementNameChangedHandler', newValue);\n    this.host.setAttribute('name', newValue);\n  }\n\n  @Watch('selectedConfiguration')\n  selectedConfigurationChangedHandler(newValue: Configuration) {\n    debug('nylas-booking-confirmation-type', 'selectedConfigurationChangedHandler', newValue);\n    if (newValue?.event_booking?.booking_type) {\n      this.selectedBookingType = newValue?.event_booking?.booking_type;\n      this.showDropdown = newValue?.event_booking?.booking_type !== 'custom-confirmation' && !!newValue?.scheduler?.organizer_confirmation_url;\n    }\n  }\n\n  // Lifecycle methods\n  connectedCallback() {\n    debug('nylas-booking-confirmation-type', 'connectedCallback');\n  }\n\n  disconnectedCallback() {\n    debug('nylas-booking-confirmation-type', 'disconnectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('nylas-booking-confirmation-type', 'componentWillLoad');\n    // See comment in the @Watch('name') decorator for more information.\n    this.host.setAttribute('name', this.name);\n  }\n\n  componentDidLoad() {\n    debug('nylas-booking-confirmation-type', 'componentDidLoad');\n    if (this.selectedConfiguration) {\n      this.selectedConfigurationChangedHandler(this.selectedConfiguration);\n    } else {\n      this.selectedBookingType = this.bookingType || 'booking';\n    }\n    this.internals.setFormValue(this.selectedBookingType.toString(), this.name);\n    this.showDropdown = this.selectedConfiguration?.event_booking?.booking_type !== 'custom-confirmation' && !!this.selectedConfiguration?.scheduler?.organizer_confirmation_url;\n  }\n\n  componentWillUpdate() {\n    debug('nylas-booking-confirmation-type', 'componentWillUpdate');\n  }\n\n  componentDidUpdate() {\n    debug('nylas-booking-confirmation-type', 'componentDidUpdate');\n  }\n\n  componentWillRender() {\n    debug('nylas-booking-confirmation-type', 'componentWillRender');\n  }\n\n  componentDidRender() {\n    debug('nylas-booking-confirmation-type', 'componentDidRender');\n  }\n\n  @Listen('nylasFormDropdownChanged')\n  nylasFormDropdownChangedHandler(event: CustomEvent<{ value: string; name: string }>) {\n    debug('nylas-booking-confirmation-type', 'nylasFormDropdownChangedHandler', event.detail);\n    // Pass as handler so that if event.defaultPrevented by parent app, this will be skipped.\n    const valueChanged = (event: CustomEvent<{ value: string; name: string }>) => {\n      const { value } = event.detail;\n      this.selectedBookingType = value;\n      this.internals.setFormValue(value.toString(), this.name);\n    };\n    this.valueChanged.emit({ ...event.detail, valueChanged });\n  }\n\n  @RegisterComponent<NylasBookingConfirmationType, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-booking-confirmation-type',\n    stateToProps: new Map([['schedulerConfig.selectedConfiguration', 'selectedConfiguration']]),\n    eventToProps: {\n      valueChanged: async (\n        event: CustomEvent<{ value: string; name: string; valueChanged?: (event: CustomEvent<{ value: string; name: string }>) => void }>,\n        _nylasSchedulerConfigConnector: NylasSchedulerConfigConnector,\n      ) => {\n        const { valueChanged } = event.detail;\n        // If a handler is passed, call it.\n        if (valueChanged) {\n          valueChanged(event);\n        }\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    const bookingOptions = [\n      {\n        label: 'Automatically accept bookings',\n        value: 'booking',\n      },\n      {\n        label: 'Manually accept bookings',\n        value: 'organizer-confirmation',\n      },\n    ];\n\n    return (\n      <Host>\n        {this.showDropdown && (\n          <div class=\"nylas-booking-confirmation-type\" part=\"nbct\">\n            {bookingOptions.length > 0 && (\n              <div class=\"nylas-booking-confirmation-type__dropdown\">\n                <span class=\"label\">\n                  When a booking is requested\n                  <tooltip-component>\n                    <info-icon slot=\"tooltip-icon\" />\n                    <span slot=\"tooltip-content\">Manually accept bookings allows you to review and either accept or decline each booking request.</span>\n                  </tooltip-component>\n                </span>\n                {this.selectedBookingType && (\n                  <select-dropdown\n                    name=\"booking-type\"\n                    options={bookingOptions}\n                    withSearch={false}\n                    exportparts=\"sd_dropdown: nbct__dropdown, sd_dropdown-button: nbct__dropdown-button, sd_dropdown-content: nbct__dropdown-content\"\n                    defaultSelectedOption={bookingOptions.find(cal => cal.value == this.selectedBookingType)}\n                  />\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}