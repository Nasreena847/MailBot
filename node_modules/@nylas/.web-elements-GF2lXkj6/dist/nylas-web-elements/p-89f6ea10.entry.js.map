{"version":3,"names":["nylasReminderTimeCss","NylasReminderTimeStyle0","getInitialTimeValue","timeInMinutes","getInitialTimeIncrement","NylasReminderTime","this","eventReminderTimeMinutes","REMINDER_MINUTE_OPTIONS","elementNameChangedHandler","newValue","debug","host","setAttribute","reminderTimeMinutesChangedHandler","oldValue","valueChanged","emit","value","toString","name","connectedCallback","componentWillLoad","setReminderTimeMinuteOptions","componentDidLoad","disconnectedCallback","reminderTimeincrement","reminderTimeMinutesOptions","REMINDER_HOUR_OPTIONS","REMINDER_DAY_OPTIONS","nylasFormDropdownChangedHandler","event","detail","parseInt","reminderTime","reminderTimeMinutes","internals","setFormValue","inputOptionChangedHandler","render","reminderTimeOptions","label","h","Host","key","class","part","options","inputValue","exportparts","defaultInputOption","find","i","pluralizedLabel","defaultSelectedOption","withSearch","__decorate","RegisterComponent","stateToProps","Map","eventToProps","fireRegisterEvent","iconCss","TrashIconStyle0","TrashIcon","width","height","viewBox","fill","xmlns","d"],"sources":["src/components/scheduler-editor/nylas-reminder-time/nylas-reminder-time.scss?tag=nylas-reminder-time&encapsulation=shadow","src/components/scheduler-editor/nylas-reminder-time/nylas-reminder-time.tsx","src/common/icons/icon.css?tag=trash-icon&encapsulation=scoped","src/common/icons/trash.tsx"],"sourcesContent":["@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  @include default-css-variables;\n}\n\n.nylas-reminder-time {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  label {\n    display: flex;\n    align-items: center;\n    color: var(--nylas-base-800);\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 150%;\n\n    /* 21px */\n    span.required {\n      color: var(--nylas-error, #cc4841);\n    }\n\n    span.label-icon {\n      margin-left: 4px;\n\n      tooltip-component {\n        display: flex;\n      }\n    }\n  }\n}\n\n.nylas-reminder-time__wrapper {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n\n  input {\n    padding: 12px 16px;\n    border-width: 1;\n    border-radius: 8px;\n    border: 1px solid var(--nylas-base-200);\n    font-family: var(--nylas-font-family);\n    font-size: 16px;\n    line-height: 24px;\n    width: 48px;\n  }\n\n  input-dropdown::part(id_dropdown-input) {\n    border: 1px solid var(--nylas-base-200);\n    border-radius: var(--nylas-border-radius-2x);\n    padding: 14px 16px;\n    width: 50px;\n  }\n\n  input-dropdown::part(id_dropdown-content) {\n    width: 100%;\n    min-width: unset;\n    height: 160px;\n  }\n\n  select-dropdown {\n    width: 120px;\n\n    @media #{$mobile} {\n      width: 100%;\n    }\n  }\n\n  select-dropdown::part(sd_dropdown-button) {\n    border: 1px solid var(--nylas-base-200);\n  }\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { REMINDER_MINUTE_OPTIONS, REMINDER_HOUR_OPTIONS, REMINDER_DAY_OPTIONS } from '@/common/constants';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug } from '@/utils/utils';\nimport { AttachInternals, Component, Host, Listen, State, h, Element, Prop, Watch, Event, EventEmitter } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport { Configuration } from '@nylas/core';\n\nfunction getInitialTimeValue(timeInMinutes: number | undefined) {\n  if (!timeInMinutes) return 30;\n  if (timeInMinutes >= 60 * 24) return timeInMinutes / (60 * 24);\n  if (timeInMinutes >= 90 || timeInMinutes === 60) return timeInMinutes / 60;\n  return timeInMinutes;\n}\n\nfunction getInitialTimeIncrement(timeInMinutes: number | undefined) {\n  if (!timeInMinutes) return 30;\n  if (timeInMinutes >= 60 * 24) return 60 * 24;\n  if (timeInMinutes >= 90 || timeInMinutes === 60) return 60;\n  return 1;\n}\n\n/**\n * The `nylas-reminder-time` component is a form input for the reminder time before an event.\n *\n * @part nrt - The event reminder container\n * @part nrt - The dropdown container for the reminder time increment\n * @part nrt__dropdown-button - The dropdown button for the reminder time increment\n * @part nrt__dropdown-content - The dropdown content for the reminder time increment\n * @part nrt__input_dropdown - The input dropdown container for the reminder time minutes\n * @part nrt__input_dropdown-input - The input for the reminder time minutes\n * @part nrt__input_dropdown-content - The dropdown content for the input reminder time minutes\n */\n@Component({\n  tag: 'nylas-reminder-time',\n  styleUrl: 'nylas-reminder-time.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class NylasReminderTime {\n  /**\n   * The host element <nylas-reminder-time>\n   */\n  @Element() host!: HTMLElement;\n  /**\n   * The selected config\n   */\n  @Prop() selectedConfiguration?: Configuration;\n\n  /**\n   * The name of the reminder time. Default is 'reminder time'.\n   */\n  @Prop() name: string = 'reminder-time';\n  /**\n   * The event reminder time in minutes as set in the configuration.\n   */\n  @Prop() eventReminderTimeMinutes?: number;\n  /**\n   * The selected event reminder time state. This defaults to the reminder time from the configuration or 30 minutes.\n   */\n  @State() reminderTime: number = getInitialTimeValue(this.eventReminderTimeMinutes);\n  /**\n   * The reminder time in minutes. This defaults to the reminder time from the configuration or 30 minutes.\n   */\n  @State() reminderTimeMinutes: number = this.eventReminderTimeMinutes ?? 30;\n  /**\n   * The reminder time increment. This defaults to minute(s).\n   */\n  @State() reminderTimeincrement: number = getInitialTimeIncrement(this.eventReminderTimeMinutes);\n  /**\n   * The reminderTimeMinutesOptions for the dropdown.\n   */\n  @State() reminderTimeMinutesOptions = REMINDER_MINUTE_OPTIONS;\n\n  /**\n   * The element internals.\n   */\n  @AttachInternals() internals!: ElementInternals;\n\n  /**\n   * When a name prop is passed, stencil does not automatically set the name attribute on the host element.\n   * Since this component is form-associated, the name attribute is required for form submission.\n   * This is a workaround to ensure that the name attribute is set on the host element.\n   */\n  @Watch('name')\n  elementNameChangedHandler(newValue: string) {\n    debug('nylas-reminder-time', 'elementNameChangedHandler', newValue);\n    this.host.setAttribute('name', newValue);\n  }\n\n  @Watch('reminderTimeMinutes')\n  reminderTimeMinutesChangedHandler(newValue: number, oldValue: number) {\n    debug('nylas-reminder-time', 'reminderTimeMinutesChangedHandler', newValue);\n    if (newValue === oldValue) {\n      return;\n    }\n    this.valueChanged.emit({ value: newValue.toString(), name: this.name });\n  }\n\n  /**\n   * Event emitted when the event reminder time changes.\n   */\n  @Event() valueChanged!: EventEmitter<{\n    value: string;\n    name: string;\n  }>;\n\n  connectedCallback() {\n    debug('nylas-reminder-time', 'connectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('nylas-reminder-time', 'componentWillLoad');\n    this.host.setAttribute('name', this.name);\n    this.setReminderTimeMinuteOptions();\n  }\n\n  componentDidLoad() {\n    debug('nylas-reminder-time', 'componentDidLoad');\n  }\n\n  disconnectedCallback() {\n    debug('nylas-reminder-time', 'disconnectedCallback');\n  }\n\n  setReminderTimeMinuteOptions() {\n    if (this.reminderTimeincrement === 1) {\n      this.reminderTimeMinutesOptions = REMINDER_MINUTE_OPTIONS;\n    } else if (this.reminderTimeincrement === 60) {\n      this.reminderTimeMinutesOptions = REMINDER_HOUR_OPTIONS;\n    } else this.reminderTimeMinutesOptions = REMINDER_DAY_OPTIONS;\n    return this.reminderTimeMinutesOptions;\n  }\n\n  @Listen('nylasFormDropdownChanged')\n  nylasFormDropdownChangedHandler(event: CustomEvent<{ value: string; name: string }>) {\n    debug('nylas-calendar-picker', 'nylasFormDropdownChangedHandler', event.detail);\n    const { value } = event.detail;\n    this.reminderTimeincrement = parseInt(value);\n\n    if (this.reminderTimeincrement === 1) {\n      this.reminderTime = 60;\n    } else {\n      this.reminderTime = 1;\n    }\n\n    this.setReminderTimeMinuteOptions();\n    this.reminderTimeMinutes = this.reminderTime * this.reminderTimeincrement;\n    this.internals.setFormValue(this.reminderTimeMinutes.toString(), this.name);\n  }\n\n  @Listen('inputOptionChanged')\n  inputOptionChangedHandler(event: CustomEvent<{ value: number; name: string }>) {\n    debug('nylas-calendar-picker', 'inputOptionChangedHandler', event.detail);\n    const { value } = event.detail;\n    this.reminderTime = value;\n    this.reminderTimeMinutes = this.reminderTime * this.reminderTimeincrement;\n    this.internals.setFormValue(this.reminderTimeMinutes.toString(), this.name);\n  }\n\n  @RegisterComponent<NylasReminderTime, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-reminder-time',\n    stateToProps: new Map([['schedulerConfig.selectedConfiguration', 'selectedConfiguration']]),\n    eventToProps: {},\n    fireRegisterEvent: true,\n  })\n  render() {\n    const reminderTimeOptions = [\n      { value: 1, label: 'minute' },\n      { value: 60, label: 'hour' },\n      { value: 60 * 24, label: 'day' },\n    ];\n\n    return (\n      <Host>\n        <div class=\"nylas-reminder-time\" part=\"nrt\">\n          <div class=\"nylas-reminder-time__wrapper\">\n            <input-dropdown\n              name={'reminder-time'}\n              options={this.reminderTimeMinutesOptions}\n              inputValue={this.reminderTime.toString()}\n              exportparts=\"id_dropdown: nrt__input_dropdown, id_dropdown-input: nrt__input_dropdown-input, id_dropdown-content: nrt__input_dropdown-content\"\n              defaultInputOption={this.reminderTimeMinutesOptions.find(i => i.value == this.reminderTime) ?? reminderTimeOptions[0]}\n            />\n            <select-dropdown\n              name={'reminder-time-unit'}\n              options={reminderTimeOptions}\n              pluralizedLabel={this.reminderTime > 1 ? 's' : ''}\n              exportparts=\"sd_dropdown: nrt__dropdown, sd_dropdown-button: nrt__dropdown-button, sd_dropdown-content: nrt__dropdown-content\"\n              defaultSelectedOption={reminderTimeOptions.find(i => i.value == this.reminderTimeincrement) ?? reminderTimeOptions[0]}\n              withSearch={false}\n            />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: flex;\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'trash-icon',\n  styleUrl: 'icon.css',\n  scoped: true,\n})\nexport class TrashIcon {\n  @Prop() width: string = '20';\n  @Prop() height: string = '21';\n\n  render() {\n    // Trash icon svg\n    return (\n      <svg width={this.width} height={this.height} viewBox=\"0 0 20 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M10 0.25C11.733 0.25 13.1492 1.60645 13.2449 3.31558L13.25 3.5H18.5C18.9142 3.5 19.25 3.83579 19.25 4.25C19.25 4.6297 18.9678 4.94349 18.6018 4.99315L18.5 5H17.704L16.4239 18.0192C16.2912 19.3683 15.1984 20.41 13.8626 20.4945L13.6871 20.5H6.31293C4.95734 20.5 3.81365 19.5145 3.59883 18.1934L3.57614 18.0192L2.295 5H1.5C1.1203 5 0.806509 4.71785 0.756847 4.35177L0.75 4.25C0.75 3.8703 1.03215 3.55651 1.39823 3.50685L1.5 3.5H6.75C6.75 1.70507 8.20507 0.25 10 0.25ZM16.197 5H3.802L5.06893 17.8724C5.12768 18.4696 5.60033 18.9343 6.18585 18.9936L6.31293 19H13.6871C14.2872 19 14.7959 18.5751 14.9123 17.9982L14.9311 17.8724L16.197 5ZM11.75 7.75C12.1297 7.75 12.4435 8.03215 12.4932 8.39823L12.5 8.5V15.5C12.5 15.9142 12.1642 16.25 11.75 16.25C11.3703 16.25 11.0565 15.9678 11.0068 15.6018L11 15.5V8.5C11 8.08579 11.3358 7.75 11.75 7.75ZM8.25 7.75C8.6297 7.75 8.94349 8.03215 8.99315 8.39823L9 8.5V15.5C9 15.9142 8.66421 16.25 8.25 16.25C7.8703 16.25 7.55651 15.9678 7.50685 15.6018L7.5 15.5V8.5C7.5 8.08579 7.83579 7.75 8.25 7.75ZM10 1.75C9.08183 1.75 8.32881 2.45711 8.2558 3.35647L8.25 3.5H11.75C11.75 2.5335 10.9665 1.75 10 1.75Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    );\n  }\n}\n"],"mappings":"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"}