{"file":"nylas-list-configurations.entry.esm.js","mappings":"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","names":[],"sources":["src/components/scheduler-editor/nylas-list-configurations/nylas-list-configurations.scss?tag=nylas-list-configurations&encapsulation=shadow","src/components/scheduler-editor/nylas-list-configurations/nylas-list-configurations.tsx"],"sourcesContent":["@import '../../../common/styles/variables.scss';\n@import '../../../common/mixins/buttons.scss';\n\n:host {\n  display: grid;\n  grid-auto-flow: row;\n  width: 100%;\n  font-family: inherit;\n  font-optical-sizing: auto;\n  @include default-css-variables;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n  gap: 1rem;\n\n  @media #{$mobile} {\n    flex-direction: column;\n    gap: 0.5rem;\n    align-items: unset;\n  }\n\n  h2 {\n    margin: 0;\n    font-size: 1.25rem;\n    color: var(--nylas-base-900);\n    font-weight: 600;\n  }\n\n  p {\n    margin: 0;\n    font-size: 1rem;\n    color: var(--nylas-base-700);\n  }\n\n  .actions {\n    justify-self: end;\n\n    @media #{$mobile} {\n      width: 100%;\n    }\n  }\n}\n\n.configurations {\n  border: 1px solid var(--nylas-base-200);\n  border-radius: var(--nylas-border-radius-2x);\n  background: var(--nylas-base-0);\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  overflow-y: hidden;\n\n  .table-container {\n    overflow-y: auto;\n    flex: 1;\n\n    table {\n      width: 100%;\n      border-spacing: 0;\n      border-collapse: collapse;\n      font-family: inherit;\n      height: max-content;\n\n      &.no-configurations {\n        height: 100%;\n      }\n\n      tr {\n        color: var(--nylas-base-800);\n        border-bottom: 1px solid var(--nylas-base-200);\n        font-family: inherit;\n\n        &.hide {\n          display: none;\n        }\n      }\n\n      th {\n        font-weight: 600;\n        text-transform: uppercase;\n        font-size: 14px;\n        line-height: 20px;\n      }\n\n      tr.no-configurations {\n        td {\n          > div {\n            display: flex;\n            height: 100%;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n\n            padding: var(--nylas-border-radius-3x);\n\n            h3 {\n              margin: 0 0 1rem 0;\n              color: var(--nylas-base-700);\n            }\n\n            p {\n              margin: 0 0 1rem 0;\n              color: var(--nylas-base-600);\n            }\n\n            calendar-icon {\n              margin-bottom: 1rem;\n              color: var(--nylas-base-200);\n            }\n          }\n        }\n      }\n\n      th,\n      td {\n        text-align: left;\n        padding: 1rem;\n        font-family: inherit;\n      }\n\n      .actions {\n        text-align: right;\n      }\n\n      .actions {\n        display: flex;\n        justify-content: flex-end;\n        gap: 1rem;\n\n        @media #{$mobile} {\n          flex-direction: column;\n          gap: 0.5rem;\n        }\n      }\n\n      .title {\n        width: 100%;\n        max-width: 300px;\n\n        @media #{$mobile} {\n          max-width: 96px;\n        }\n\n        div {\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n\n          &.config-event-title {\n            font-weight: 600;\n          }\n\n          &.config-event-description {\n            font-size: 0.75rem;\n          }\n        }\n      }\n    }\n  }\n\n  .pagination {\n    padding: 1rem;\n    position: sticky;\n    top: 100%;\n    display: flex;\n    justify-content: flex-end;\n    gap: 0.5rem;\n    background: white;\n    width: calc(100% - 2rem);\n    z-index: 2;\n\n    td.arrows {\n      display: flex;\n      justify-content: flex-end;\n      gap: 0.5rem;\n    }\n\n    button {\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n      height: 3vh;\n      width: 3vh;\n      min-width: 3em;\n      min-height: 3em;\n      cursor: pointer;\n      border-radius: var(--nylas-border-radius-2x);\n      border: 1px solid var(--nylas-base-300);\n\n      background-color: transparent;\n      color: var(--nylas-base-800);\n      cursor: pointer;\n\n      &:hover:not(:disabled) {\n        border: 1px solid var(--nylas-primary);\n      }\n\n      &:active {\n        border: 1px solid var(--nylas-base-800);\n      }\n\n      &:disabled {\n        border: 1px solid var(--nylas-base-100);\n        background-color: transparent;\n        color: var(--nylas-base-300);\n        cursor: not-allowed;\n      }\n\n      &.right {\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n.error-container {\n  margin-top: 1.5rem;\n\n  .error {\n    color: var(--nylas-error);\n    padding: 0.5rem 0;\n    margin: 1rem 0 0;\n  }\n}\n\nbutton-component#copy {\n  button {\n    width: 108px;\n  }\n}\n\nselect-dropdown {\n  width: auto;\n}\n\nselect-dropdown::part(sd_dropdown-button) {\n  display: block;\n  height: 48px;\n  padding: 0px 16px 8px;\n\n  @media #{$mobile} {\n    width: 92px;\n  }\n}\n\nselect-dropdown::part(sd_dropdown-content) {\n  width: 120px;\n  right: 0;\n}\n\nselect-dropdown::part(sd_dropdown-labelhtml) {\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n  color: var(--nylas-base-900);\n\n  &:hover {\n    color: var(--nylas-primary);\n  }\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug, parsePreviewLink } from '@/utils/utils';\nimport { Component, Element, Event, EventEmitter, Host, Listen, Method, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport { Configuration } from '@nylas/core';\n\n/**\n * The `nylas-list-configurations` component displays a list of scheduling pages.\n *\n * @part nlc__create-new-cta - The create new configuration CTA.\n */\n@Component({\n  tag: 'nylas-list-configurations',\n  styleUrl: 'nylas-list-configurations.scss',\n  shadow: true,\n})\nexport class NylasListConfigurations {\n  /**\n   * The host element.\n   */\n  @Element() host!: HTMLNylasListConfigurationsElement;\n\n  /**\n   * The list of configurations to display.\n   */\n  @Prop() configurations: Configuration[] = [];\n\n  /**\n   * The scheduler preview link to use when the user clicks on the preview button.\n   * You can use a placeholder `{config.id}` to replace the configuration id anywhere in the link.\n   */\n  @Prop({ attribute: 'scheduler-preview-link' }) schedulerPreviewLink: string = '';\n\n  /**\n   * The next cursor for list configurations, if any.\n   */\n  @Prop() listConfigurationsNextCursor?: string | null;\n\n  /**\n   * Event emitted when the component is initialized.\n   */\n  @Event() initListConfigurations!: EventEmitter<{\n    host: HTMLNylasListConfigurationsElement;\n    cursor?: string;\n  }>;\n\n  /**\n   * Event emitted when the user clicks the create event button.\n   */\n  @Event() createButtonClick!: EventEmitter<HTMLNylasListConfigurationsElement>;\n\n  /**\n   * Event emitted when the user clicks the edit event button.\n   */\n  @Event() editButtonClick!: EventEmitter<{\n    host: HTMLNylasListConfigurationsElement;\n    configuration: Configuration;\n  }>;\n\n  /**\n   * Event emitted when the user clicks the delete event button.\n   */\n  @Event() deleteButtonClick!: EventEmitter<{\n    host: HTMLNylasListConfigurationsElement;\n    configuration: Configuration;\n  }>;\n\n  /**\n   * The current state of the component.\n   */\n  @State() private state: 'loading' | 'loaded' | 'error' = 'loading';\n\n  /**\n   * The error message to display.\n   */\n  @State() private error: string = '';\n\n  /**\n   * Current cursor for list configurations\n   */\n  @State() currentCursor: string | null = null;\n\n  /**\n   * The list of previous cursors for list configurations\n   */\n  @State() previousCursors: string[] = [];\n\n  /**\n   * State to identiy if the next button should be disabled\n   */\n  @State() disableNextPageButton: boolean = false;\n\n  @Watch('listConfigurationsNextCursor')\n  listConfigurationsNextCursorChangedHandler(newVal: string | null, oldVal: string | null) {\n    if (!newVal || newVal === oldVal) {\n      if (newVal === null) {\n        this.disableNextPageButton = true;\n      }\n      return;\n    }\n    this.disableNextPageButton = false;\n    this.currentCursor = newVal;\n  }\n\n  connectedCallback() {\n    debug('[nylas-list-configurations]', 'connectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('[nylas-list-configurations]', 'componentWillLoad');\n\n    // If we have configurations, we will set the state to loaded.\n    if (this.configurations && this.configurations.length > 0) {\n      this.state = 'loaded';\n    }\n  }\n\n  componentDidLoad() {\n    debug('[nylas-list-configurations]', 'componentDidLoad');\n\n    // Fire the init event. By default, we will fetch the configurations.\n    // This is defined in the eventToProps object in the RegisterComponent decorator.\n    this.initListConfigurations.emit({\n      host: this.host,\n    });\n  }\n\n  disconnectedCallback() {\n    debug('[nylas-list-configurations]', 'disconnectedCallback');\n  }\n\n  @Listen('nylasFormDropdownChanged')\n  async handleNylasFormDropdownChanged(event: CustomEvent) {\n    debug('[nylas-list-configurations]', 'handleNylasFormDropdownChanged', event.detail);\n    const { value } = event.detail;\n    const [action, index] = value.split('-');\n    event.preventDefault();\n    switch (action) {\n      case 'delete':\n        this.deleteButtonClick.emit({ host: this.host, configuration: this.configurations[index] });\n        break;\n      case 'preview':\n        window.open(parsePreviewLink(this.schedulerPreviewLink, this.configurations[index]), '_blank');\n        break;\n      case 'copy':\n        await navigator.clipboard.writeText(parsePreviewLink(this.schedulerPreviewLink, this.configurations[index]));\n        break;\n      default:\n        break;\n    }\n  }\n\n  @Method()\n  async getState() {\n    return this.state;\n  }\n\n  @Method()\n  async setState(state: 'loading' | 'loaded' | 'error') {\n    this.state = state;\n  }\n\n  @Method()\n  async setError(error: string) {\n    this.error = error;\n  }\n\n  private getDurationString(duration: number) {\n    const hours = Math.floor(duration / 60);\n    const minutes = duration % 60;\n    return `${hours ? hours : ''} ${hours ? `${hours > 1 ? 'hours' : 'hour'}` : ''} ${minutes ? minutes : ''} ${minutes ? `${minutes > 1 ? 'mins' : 'min'}` : ''}`;\n  }\n\n  getActionLabelHTML(action: string) {\n    const actionStyle = {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gap: '0.5rem',\n    };\n    const dangerStyle = {\n      color: 'var(--nylas-error)',\n    };\n    switch (action) {\n      case 'preview':\n        return (\n          <span style={actionStyle}>\n            <eye-icon width=\"16\" height=\"16\"></eye-icon>\n            Preview\n          </span>\n        );\n      case 'copy':\n        return (\n          <span style={actionStyle}>\n            <copy-icon width=\"16\" height=\"16\" />\n            Copy\n          </span>\n        );\n      case 'delete':\n        return (\n          <span style={{ ...actionStyle, ...dangerStyle }}>\n            <delete-icon width=\"15\" height=\"17\"></delete-icon>\n            Delete\n          </span>\n        );\n      default:\n        return '';\n    }\n  }\n\n  previousPageClickedHandler() {\n    if (this.previousCursors.length === 0) return;\n\n    this.currentCursor = this.previousCursors.pop() || null;\n    const prevCursor = this.previousCursors[this.previousCursors.length - 1] || undefined;\n    this.initListConfigurations.emit({\n      host: this.host,\n      cursor: prevCursor,\n    });\n  }\n\n  nextPageClickedHandler() {\n    if (!this.currentCursor) return;\n\n    this.previousCursors = [...this.previousCursors, this.currentCursor];\n    this.initListConfigurations.emit({\n      host: this.host,\n      cursor: this.currentCursor,\n    });\n  }\n\n  @RegisterComponent<NylasListConfigurations, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-list-configurations',\n    stateToProps: new Map([\n      ['schedulerConfig.configurations', 'configurations'],\n      ['schedulerConfig.listConfigurationsNextCursor', 'listConfigurationsNextCursor'],\n    ]),\n    localPropsToProp: new Map([['schedulerPreviewLink', 'schedulerPreviewLink']]),\n    eventToProps: {\n      initListConfigurations: async (event, connector) => {\n        const { host, cursor } = event.detail;\n        await host.setState('loading');\n        const [data, error] = await connector.schedulerConfig.getConfigurations(cursor);\n        if (!data && error && error.message) {\n          await host.setState('error');\n          await host.setError(error.message);\n          return;\n        }\n        await host.setState('loaded');\n        // setCursor here\n      },\n      createButtonClick: async (_, connector) => {\n        connector.schedulerConfigStore.resetSelectedConfiguration();\n        connector.schedulerConfigStore.state.action = 'create';\n      },\n      deleteButtonClick: async (event, connector) => {\n        const { host, configuration } = event.detail;\n        const [data, error] = await connector.schedulerConfig.deleteConfiguration(configuration.id);\n        if (!data && error && error.message) {\n          await host.setState('error');\n          await host.setError(error.message);\n        }\n      },\n      editButtonClick: async (event, connector) => {\n        const { configuration } = event.detail;\n        connector.schedulerConfigStore.state.selectedConfiguration = configuration;\n        connector.schedulerConfigStore.state.action = 'edit';\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host>\n        <div class=\"header\">\n          <div class=\"description\">\n            <h2>All Scheduling Pages</h2>\n            <p>Create and manage your Scheduling Pages.</p>\n          </div>\n          {this.configurations && this.configurations.length > 0 && (\n            <div class=\"actions\">\n              <button-component\n                part=\"nlc__create-new-cta\"\n                clickHandler={() => {\n                  this.createButtonClick.emit(this.host);\n                }}\n              >\n                Create new\n              </button-component>\n            </div>\n          )}\n        </div>\n        <div class=\"configurations\">\n          <div class=\"table-container\">\n            <table\n              class={{\n                'no-configurations': this.state !== 'loading' && (!this.configurations || this.configurations.length === 0),\n              }}\n            >\n              <tr\n                class={{\n                  hide: this.state === 'loading' || (this.configurations && this.configurations.length === 0),\n                }}\n              >\n                <th>Page title</th>\n                <th>Duration</th>\n                <th></th>\n              </tr>\n              {this.state === 'loading' && (\n                <tr class=\"no-configurations\">\n                  <td colSpan={3}>\n                    <div>\n                      <h3>Loading...</h3>\n                      <p>Please wait while we fetch the scheduling pages</p>\n                    </div>\n                  </td>\n                </tr>\n              )}\n              {this.state !== 'loading' && (!this.configurations || this.configurations.length === 0) && (\n                <tr class=\"no-configurations\">\n                  <td colSpan={3}>\n                    <div>\n                      <calendar-icon width=\"48\" height=\"48\"></calendar-icon>\n                      <h3>No scheduling pages found</h3>\n                      <p>Get started with creating your first scheduling page</p>\n                      <button-component\n                        part=\"nlc__create-new-cta\"\n                        clickHandler={() => {\n                          this.createButtonClick.emit(this.host);\n                        }}\n                      >\n                        Create new\n                      </button-component>\n                    </div>\n                  </td>\n                </tr>\n              )}\n              {this.state !== 'loading' &&\n                this.configurations.map((config, i) => {\n                  return (\n                    <tr key={config.id}>\n                      <td>\n                        <div class=\"title\">\n                          <div class=\"config-event-title\" title={config.event_booking.title}>\n                            {config.event_booking.title}\n                          </div>\n                          <div class={'config-event-description'}>{config.event_booking.description}</div>\n                        </div>\n                      </td>\n                      <td>\n                        <div class=\"duration\">{this.getDurationString(config.availability.duration_minutes)}</div>\n                      </td>\n                      <td>\n                        <div class=\"actions\">\n                          <button-component\n                            variant={'basic'}\n                            key={`edit-${i}`}\n                            clickHandler={event => {\n                              event.preventDefault();\n                              this.editButtonClick.emit({ host: this.host, configuration: config });\n                            }}\n                          >\n                            <edit-icon width=\"16\" height=\"16\"></edit-icon>\n                            Edit\n                          </button-component>\n                          <select-dropdown\n                            name=\"actions\"\n                            options={[\n                              { value: `preview-${i}`, label: 'Preview', labelHTML: this.getActionLabelHTML('preview') },\n                              { value: `copy-${i}`, label: 'Copy link', labelHTML: this.getActionLabelHTML('copy') },\n                              { value: `delete-${i}`, label: 'Delete', labelHTML: this.getActionLabelHTML('delete') },\n                            ]}\n                            defaultSelectedOption={{ value: '', label: '' }}\n                            dropdownButtonText=\"...\"\n                            withSearch={false}\n                            withChevron={false}\n                            exportparts=\"sd_dropdown: actions__dropdown, sd_dropdown-button: actions__dropdown-button, sd_dropdown-content: actions__dropdown-content\"\n                          ></select-dropdown>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </table>\n          </div>\n          <div class=\"pagination\">\n            <button class=\"arrow left\" onClick={() => this.previousPageClickedHandler()} disabled={this.previousCursors.length <= 0}>\n              <chevron-icon />\n            </button>\n            <button class=\"arrow right\" onClick={() => this.nextPageClickedHandler()} disabled={this.disableNextPageButton}>\n              <chevron-icon />\n            </button>\n          </div>\n        </div>\n        {this.state === 'error' && (\n          <div class=\"error-container\">\n            <p class={'error'}>{this.error}</p>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}