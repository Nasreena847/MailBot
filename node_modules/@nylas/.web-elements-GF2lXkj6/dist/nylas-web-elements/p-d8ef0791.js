import{d as t}from"./p-c6fcb288.js";class e{constructor(t){this.defaultAuthArgs=[];this.session=t}setActiveGrantId(t){this.activeGrantId=t}async request({method:e,path:s,body:n,headers:i}){try{const r=await this.session.fetch(`grants/me/${s}`,{method:e,headers:i?new Headers(i):undefined,body:n,...this.session.isMultiAccount()&&this.activeGrantId?{grant_id:this.activeGrantId}:{}});if(typeof r==="undefined"){throw new Error("Response is undefined")}return t(r)}catch(e){let s=String(e);if(String(e).includes("Access token not found")){s="Session expired, please log in again. Redirecting...";setTimeout((()=>{localStorage.removeItem("grant");localStorage.removeItem("user");window.location.reload()}),1e3)}return t(null,{message:s})}}async currentUser(){const t=this.session.isMultiAccount()?this.activeGrantId:undefined;const e=await this.session.getProfile(t);if(!e){return null}return{id:e.sub,email:e.email,name:e.name,provider:e.provider}}async authenticationUrl(t){const e=t?.provider||"google";const s=this.defaultAuthArgs.find((t=>t.provider===e));let n=s||{};if(t){n={...n,...t}}return this.session.auth(n)}setDefaultAuthArgs(t){this.defaultAuthArgs=t}}export{e as N};
//# sourceMappingURL=p-d8ef0791.js.map