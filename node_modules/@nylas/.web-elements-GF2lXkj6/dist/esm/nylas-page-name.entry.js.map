{"file":"nylas-page-name.entry.js","mappings":"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","names":[],"sources":["src/components/scheduler-editor/nylas-page-name/nylas-page-name.scss?tag=nylas-page-name&encapsulation=shadow","src/components/scheduler-editor/nylas-page-name/nylas-page-name.tsx"],"sourcesContent":["@import '../../../common/styles/variables.scss';\n@import '../../../common/mixins/inputs.scss';\n\n:host {\n  display: block;\n  @include default-css-variables;\n  width: inherit;\n}\n\n.nylas-page-name {\n  width: inherit;\n  display: flex;\n  flex-direction: column;\n  margin: 1rem;\n  border-radius: var(--nylas-border-radius-2x);\n  border: 1px solid var(--nylas-base-200);\n  text-align: left;\n\n  .header {\n    padding: 1rem;\n    display: grid;\n    grid-template-columns: 1fr auto;\n\n    h3 {\n      border-radius: var(--nylas-border-radius-2x);\n      margin: 0;\n      font-size: 1rem;\n      font-weight: 600;\n      line-height: 20px;\n      color: var(--nylas-base-900);\n      text-align: left;\n    }\n\n    p {\n      display: flex;\n      gap: 4px;\n      align-items: center;\n      margin: 0.25rem 0 0 0;\n      font-size: 0.875rem;\n      font-weight: 400;\n      line-height: 20px;\n      color: var(--nylas-base-600);\n      text-align: left;\n    }\n\n    .drawer-toggle {\n      display: flex;\n      gap: 24px;\n      align-items: center;\n\n      .chevron {\n        display: flex;\n        align-self: center;\n        cursor: pointer;\n\n        &:hover,\n        &:active {\n          color: var(--nylas-primary);\n        }\n\n        &.open {\n          transform: rotate(90deg);\n        }\n\n        &.closed {\n          transform: rotate(270deg);\n        }\n\n        &.disabled {\n          cursor: not-allowed;\n          color: var(--nylas-base-300);\n\n          &:hover {\n            color: var(--nylas-base-300);\n          }\n        }\n      }\n    }\n  }\n\n  .nylas-page-name__body {\n    display: grid;\n    grid-template-columns: 1fr;\n    background-color: var(--nylas-base-25);\n    border-radius: 0 0 var(--nylas-border-radius-2x) var(--nylas-border-radius-2x);\n    border-top: 1px solid var(--nylas-base-200);\n\n    @media #{$mobile} {\n      grid-template-columns: 1fr;\n    }\n\n    .nylas-page-name__section {\n      padding: 1rem;\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n      color: var(--nylas-base-800);\n\n      @media #{$mobile} {\n        border: none;\n      }\n\n      .nylas-page-name__row {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n\n        label {\n          display: flex;\n          align-items: center;\n\n          span.required {\n            color: var(--nylas-error, #cc4841);\n          }\n        }\n\n        p {\n          margin: 0.25rem 0 0 0;\n          font-size: 1rem;\n          font-weight: 500;\n          line-height: 24px;\n          color: var(--nylas-base-900);\n        }\n\n        .input-container {\n          width: 100%;\n        }\n      }\n    }\n  }\n\n  .nylas-page-name__input-wrapper {\n    @include textfield;\n    width: -moz-available;\n    width: -webkit-fill-available;\n    display: flex;\n    flex-direction: row;\n    gap: 0.125rem;\n    border-radius: var(--nylas-border-radius-2x);\n    z-index: 1;\n\n    input-component::part(ic__input) {\n      outline: none;\n      border: none;\n      width: 100%;\n      font-size: 1rem;\n      height: auto;\n      padding-left: 0px;\n    }\n  }\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug } from '@/utils/utils';\nimport { AttachInternals, Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport { Configuration } from '@nylas/core';\n\n/**\n * The `nylas-page-name` component is a UI component that allows users to add a custom page name which will appear in the top left corner of the date picker.\n *\n * @part npn - The nylas-page-name container\n * @part npn__body - The body of the event communication section\n * @part npn__header - The header of the event communication section\n * @part npn__drawer-toggle--container - The card's drawer toggle container\n * @part npn__input-textfield - The page name input textfield\n */\n@Component({\n  tag: 'nylas-page-name',\n  styleUrl: 'nylas-page-name.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class NylasPageName {\n  @Element() host!: HTMLNylasPageNameElement;\n\n  /**\n   * The selected config\n   */\n  @Prop() selectedConfiguration?: Configuration;\n\n  /**\n   * The default page name\n   */\n  @Prop() pageName?: string;\n  /**\n   * Show toggle button that allows users to expand or collapse the card\n   */\n  @Prop() showToggle: boolean = true;\n  /**\n   * Is the page name container card expanded\n   */\n  @Prop() isOpen: boolean = true;\n  /**\n   * The name of the component\n   */\n  @Prop() name: string = 'page-name';\n\n  /**\n   * The element internals.\n   */\n  @AttachInternals() internals!: ElementInternals;\n\n  /**\n   * The current page name state\n   */\n  @State() currentPageName!: string;\n\n  /**\n   * This event is fired when the page name value changes\n   */\n  @Event() valueChanged!: EventEmitter<{\n    value: string;\n    name: string;\n    valueChanged?: (event: CustomEvent<{ value: string; name: string }>) => void;\n  }>;\n\n  // Lifecycle methods\n  connectedCallback() {\n    debug('nylas-page-name', 'connectedCallback');\n  }\n\n  disconnectedCallback() {\n    debug('nylas-page-name', 'disconnectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('nylas-page-name', 'componentWillLoad');\n    // See comment in the @Watch('name') decorator for more information.\n    this.host.setAttribute('name', this.name);\n  }\n\n  componentDidLoad() {\n    debug('nylas-page-name', 'componentDidLoad');\n    if (this.selectedConfiguration) {\n      this.selectedConfigurationChangedHandler(this.selectedConfiguration);\n    } else {\n      this.currentPageName = this.pageName ?? '';\n    }\n  }\n\n  componentWillUpdate() {\n    debug('nylas-page-name', 'componentWillUpdate');\n  }\n\n  componentDidUpdate() {\n    debug('nylas-page-name', 'componentDidUpdate');\n  }\n\n  componentWillRender() {\n    debug('nylas-page-name', 'componentWillRender');\n  }\n\n  componentDidRender() {\n    debug('nylas-page-name', 'componentDidRender');\n  }\n\n  /**\n   * When a name prop is passed, stencil does not automatically set the name attribute on the host element.\n   * Since this component is form-associated, the name attribute is required for form submission.\n   * This is a workaround to ensure that the name attribute is set on the host element.\n   */\n  @Watch('name')\n  elementNameChangedHandler(newValue: string) {\n    debug('nylas-page-name', 'elementNameChangedHandler', newValue);\n    this.host.setAttribute('name', newValue);\n  }\n\n  @Watch('selectedConfiguration')\n  selectedConfigurationChangedHandler(newValue: Configuration) {\n    debug('nylas-custom-booking-flow', 'selectedConfigurationChangedHandler', newValue);\n    this.currentPageName = newValue?.name ?? this.pageName ?? '';\n  }\n\n  @Listen('nylasFormInputChanged')\n  async nylasFormInputChangeHandler(event: CustomEvent<{ value: string; name: string }>) {\n    const { name, value } = event.detail;\n\n    if (name === 'page-name') {\n      this.currentPageName = value;\n      this.internals.setFormValue(JSON.stringify(value), this.name);\n      this.valueChanged.emit({ value: JSON.stringify(value), name: this.name });\n    }\n  }\n\n  toggleDrawer() {\n    this.isOpen = !this.isOpen;\n  }\n\n  @RegisterComponent<NylasPageName, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-page-name',\n    stateToProps: new Map([['schedulerConfig.selectedConfiguration', 'selectedConfiguration']]),\n    eventToProps: {\n      valueChanged: async (\n        event: CustomEvent<{ value: string; name: string; valueChanged?: (event: CustomEvent<{ value: string; name: string }>) => void }>,\n        _nylasSchedulerConfigConnector: NylasSchedulerConfigConnector,\n      ) => {\n        const { valueChanged } = event.detail;\n        // If a handler is passed, call it.\n        if (valueChanged) {\n          valueChanged(event);\n        }\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    const isComponentReady = typeof this.currentPageName !== 'undefined';\n    return (\n      <Host>\n        <div class=\"nylas-page-name\" part=\"nces\">\n          <div class=\"header\" part=\"nces__header\">\n            <div>\n              <h3>Page name</h3>\n              <p>\n                Set the Scheduling Page name.\n                <tooltip-component>\n                  <info-icon slot=\"tooltip-icon\" />\n                  <span slot=\"tooltip-content\">\n                    By default, Scheduling Pages use your user name as the Page name. The Page name is displayed in the top-left corner of the calendar view.\n                  </span>\n                </tooltip-component>\n              </p>\n            </div>\n\n            {this.showToggle && (\n              <div class=\"drawer-toggle\" part=\"nces__drawer-toggle--container\">\n                <span class={`chevron ${this.isOpen ? 'open' : 'closed'} `} onClick={() => this.toggleDrawer()}>\n                  <chevron-icon width=\"24\" height=\"24\" />\n                </span>\n              </div>\n            )}\n          </div>\n\n          {this.isOpen && (\n            <div class=\"nylas-page-name__body\" part=\"nces__body\">\n              <div class=\"nylas-page-name__section\">\n                <div class=\"nylas-page-name__row\">\n                  <div class=\"input-container\">\n                    <div class=\"nylas-page-name__input-wrapper\">\n                      {isComponentReady && (\n                        <input-component\n                          name=\"page-name\"\n                          id=\"page-name\"\n                          type=\"text\"\n                          required={false}\n                          exportparts=\"ic_input: npn__input-textfield\"\n                          defaultValue={this.currentPageName ?? ''}\n                        />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}