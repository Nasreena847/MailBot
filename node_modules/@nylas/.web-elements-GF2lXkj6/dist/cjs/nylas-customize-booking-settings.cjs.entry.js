'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-c14ea8f5.js');
const registerComponent = require('./register-component-2f532e44.js');
const utils = require('./utils-0e1c4d88.js');
require('./_commonjsHelpers-9463df90.js');

const nylasCustomizeBookingSettingsCss = ":host{display:block;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:\"Inter\", sans-serif;width:inherit}.nylas-customize-booking-settings{width:inherit;display:flex;flex-direction:column;margin:1rem;border-radius:var(--nylas-border-radius-2x);border:1px solid var(--nylas-base-200)}.nylas-customize-booking-settings .header{padding:1rem;border-bottom:1px solid var(--nylas-base-200)}.nylas-customize-booking-settings .header h3{margin:0;font-size:1rem;font-weight:600;line-height:20px;color:var(--nylas-base-900);text-align:left}.nylas-customize-booking-settings .header p{margin:0.25rem 0 0 0;font-size:0.875rem;font-weight:400;line-height:20px;color:var(--nylas-base-600);text-align:left}.nylas-customize-booking-settings .nylas-customize-booking-settings__settings{display:flex;flex-direction:column;gap:1.5rem;padding:1rem;margin:1rem 0}.nylas-customize-booking-settings .nylas-customize-booking-settings__settings .nylas-customize-booking-settings__settings-div{display:flex;align-items:center;gap:4px}.label{margin-left:32px;font-size:16px;font-weight:400;color:var(--nylas-base-800);line-height:24px}.label .label-contents{margin:0;display:inline-block}@media screen and (max-width: 768px){.label .label-contents{display:block}}.label tooltip-component{display:inline-block}@media screen and (max-width: 768px){tooltip-component#guests::part(tc__content){left:58px}}tooltip-component#reschedule::part(tc__content){left:58px}@media screen and (max-width: 768px){tooltip-component#reschedule::part(tc__content){left:58px}}tooltip-component#cancel::part(tc__content){left:-58px}@media screen and (max-width: 768px){tooltip-component#cancel::part(tc__content){left:58px}}";

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
const NylasCustomizeBookingSettings = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.valueChanged = index.createEvent(this, "valueChanged", 7);
        if (hostRef.$hostElement$["s-ei"]) {
            this.internals = hostRef.$hostElement$["s-ei"];
        }
        else {
            this.internals = hostRef.$hostElement$.attachInternals();
            hostRef.$hostElement$["s-ei"] = this.internals;
        }
        this.selectedConfiguration = undefined;
        this.defaultHideAdditionalGuests = this.selectedConfiguration?.scheduler?.hide_additional_guests ?? false;
        this.defaultHideCancellationOptions = this.selectedConfiguration?.scheduler?.hide_cancellation_options ?? false;
        this.defaultHideReschedulingOptions = this.selectedConfiguration?.scheduler?.hide_rescheduling_options ?? false;
        this.name = 'customize-booking-settings';
        this.allowGuestsToInvite = undefined;
        this.hideCancellationOptions = undefined;
        this.hideReschedulingOptions = undefined;
    }
    elementNameChangedHandler(newValue) {
        utils.debug('nylas-customize-booking-settings', 'elementNameChangedHandler', newValue);
        this.host.setAttribute('name', newValue);
    }
    selectedConfigurationChangedHandler(newValue) {
        utils.debug('nylas-customize-booking-settings', 'selectedConfigurationChangedHandler', newValue);
        this.allowGuestsToInvite = !newValue?.scheduler?.hide_additional_guests;
        this.hideCancellationOptions = newValue?.scheduler?.hide_cancellation_options ?? false;
        this.hideReschedulingOptions = newValue?.scheduler?.hide_rescheduling_options ?? false;
    }
    connectedCallback() {
        utils.debug('nylas-customize-booking-settings', 'connectedCallback');
    }
    disconnectedCallback() {
        utils.debug('nylas-customize-booking-settings', 'disconnectedCallback');
    }
    componentWillLoad() {
        utils.debug('nylas-customize-booking-settings', 'componentWillLoad');
        this.host.setAttribute('name', this.name);
    }
    componentDidLoad() {
        utils.debug('nylas-customize-booking-settings', 'componentDidLoad');
        if (this.selectedConfiguration) {
            this.selectedConfigurationChangedHandler(this.selectedConfiguration);
        }
        else {
            this.allowGuestsToInvite = true;
            this.hideCancellationOptions = false;
            this.hideReschedulingOptions = false;
        }
    }
    componentWillUpdate() {
        utils.debug('nylas-customize-booking-settings', 'componentWillUpdate');
    }
    componentDidUpdate() {
        utils.debug('nylas-customize-booking-settings', 'componentDidUpdate');
    }
    componentWillRender() {
        utils.debug('nylas-customize-booking-settings', 'componentWillRender');
    }
    componentDidRender() {
        utils.debug('nylas-customize-booking-settings', 'componentDidRender');
    }
    checkboxToggledHandler(event) {
        const { name, checked } = event.detail;
        switch (name) {
            case 'hide_additional_guests':
                this.allowGuestsToInvite = checked;
                break;
            case 'hide_cancellation_options':
                this.hideCancellationOptions = checked;
                break;
            case 'hide_rescheduling_options':
                this.hideReschedulingOptions = checked;
                break;
        }
        this.valueChanged.emit({
            value: JSON.stringify({
                additionalGuestsHidden: !this.allowGuestsToInvite,
                hideCancellationOptions: this.hideCancellationOptions,
                hideReschedulingOptions: this.hideReschedulingOptions,
            }),
            name: this.name,
        });
        this.internals.setFormValue(JSON.stringify({
            additionalGuestsHidden: !this.allowGuestsToInvite,
            hideCancellationOptions: this.hideCancellationOptions,
            hideReschedulingOptions: this.hideReschedulingOptions,
        }), this.name);
    }
    render() {
        const showComponent = typeof this.hideCancellationOptions === 'boolean' && typeof this.hideReschedulingOptions === 'boolean' && typeof this.allowGuestsToInvite === 'boolean';
        return (index.h(index.Host, { key: 'b030237db476f7a4b981d2af5d49f0315ffaa2c0' }, showComponent && (index.h("div", { class: "nylas-customize-booking-settings", part: "ncbs" }, index.h("div", { class: "header", part: "ncbs__header" }, index.h("h3", null, "Additional settings"), index.h("p", null, "Booking settings for the event.")), index.h("div", { class: "nylas-customize-booking-settings__settings", part: "ncbs__settings" }, index.h("div", { class: "nylas-customize-booking-settings__settings-div", part: "ncbs__settings-div , ncbs__additional_guests" }, index.h("checkbox-component", { name: "hide_additional_guests", label: "Allow guests to invite additional guests.", checked: this.allowGuestsToInvite }, index.h("span", { slot: "label", class: "label" }, index.h("p", { class: "label-contents" }, "Allow guests to invite additional guests.")))), index.h("div", { class: "nylas-customize-booking-settings__settings-div", part: "ncbs__settings-div , ncbs__rescheduling_options" }, index.h("checkbox-component", { name: "hide_rescheduling_options", label: "Hide 'Reschedule' option on booking page and emails.", checked: this.hideReschedulingOptions }, index.h("span", { slot: "label", class: "label" }, index.h("p", { class: "label-contents" }, "Hide rescheduling option."), index.h("tooltip-component", { id: "reschedule" }, index.h("info-icon", { slot: "tooltip-icon" }), index.h("span", { slot: "tooltip-content" }, "Hide the\u00A0", index.h("strong", null, "Reschedule"), "\u00A0button in the booking confirmation and email notifications."))))), index.h("div", { class: "nylas-customize-booking-settings__settings-div", part: "ncbs__settings-div , ncbs__cancellation_options" }, index.h("checkbox-component", { name: "hide_cancellation_options", label: "Hide 'Cancel' option on booking page and emails.", checked: this.hideCancellationOptions }, index.h("span", { slot: "label", class: "label" }, index.h("p", { class: "label-contents" }, "Hide cancellation option."), index.h("tooltip-component", { id: "cancel" }, index.h("info-icon", { slot: "tooltip-icon" }), index.h("span", { slot: "tooltip-content" }, "Hide the\u00A0", index.h("strong", null, "Cancel"), "\u00A0button in the booking confirmation and email notifications."))))))))));
    }
    static get formAssociated() { return true; }
    get host() { return index.getElement(this); }
    static get watchers() { return {
        "name": ["elementNameChangedHandler"],
        "selectedConfiguration": ["selectedConfigurationChangedHandler"]
    }; }
};
__decorate([
    registerComponent.RegisterComponent({
        name: 'nylas-customize-booking-settings',
        stateToProps: new Map([['schedulerConfig.selectedConfiguration', 'selectedConfiguration']]),
        fireRegisterEvent: true,
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NylasCustomizeBookingSettings.prototype, "render", null);
NylasCustomizeBookingSettings.style = nylasCustomizeBookingSettingsCss;

exports.nylas_customize_booking_settings = NylasCustomizeBookingSettings;

//# sourceMappingURL=nylas-customize-booking-settings.cjs.entry.js.map