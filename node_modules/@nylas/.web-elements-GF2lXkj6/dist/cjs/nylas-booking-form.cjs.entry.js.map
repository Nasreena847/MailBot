{"file":"nylas-booking-form.entry.cjs.js","mappings":"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","names":["sanitizeHtml","i18next","debug","sanitize","h","Host","index","RegisterComponent"],"sources":["src/components/scheduler/nylas-booking-form/nylas-booking-form.scss?tag=nylas-booking-form&encapsulation=shadow","src/components/scheduler/nylas-booking-form/nylas-booking-form.tsx"],"sourcesContent":["@import '../../../common/mixins/inputs.scss';\n@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  height: 100%;\n}\n\n.nylas-booking-form {\n  width: 100%;\n  padding: 1.5rem;\n  box-sizing: border-box;\n  height: 450px;\n  overflow-y: auto;\n  height: 100%;\n}\n\nform {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n}\n\nsp-textfield {\n  --spectrum-corner-radius-100: var(--nylas-border-radius-2x); // Set guest input radius\n  --spectrum-textfield-border-color: var(--nylas-base-300);\n  position: relative;\n  width: 100%;\n  height: 48px;\n  margin-bottom: 16px;\n  color: var(--nylas-base-500);\n}\n\n.cta {\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 0.5rem;\n\n  @media #{$mobile} {\n    grid-template-columns: 1fr;\n  }\n\n  align-items: flex-start;\n  justify-content: space-between;\n  gap: 0.5rem;\n  padding: 14px;\n  box-sizing: border-box;\n  border-top: 1px solid var(--nylas-base-200);\n}\n\n.input-wrapper {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 4px;\n  margin-bottom: 1rem;\n\n  input::placeholder {\n    color: var(--nylas-base-300);\n  }\n\n  label,\n  input {\n    font-family: var(--nylas-font-family);\n    font-size: 16px;\n  }\n\n  .help-text {\n    margin: 0;\n    color: var(--nylas-error);\n  }\n}\n\n.button-wrapper {\n  width: 100%;\n  align-items: flex-start;\n  height: max-content;\n  position: relative;\n}\n\n.button-content {\n  display: flex;\n  gap: 4px;\n  align-items: center;\n}\n\nsp-infield-button {\n  --spectrum-infield-button-background-color: transparent;\n  --spectrum-infield-button-background-color-hover: transparent;\n  --spectrum-infield-button-background-color-active: transparent;\n  --spectrum-infield-button-border-color: transparent;\n  --spectrum-infield-button-border-width: 1px;\n  --spectrum-infield-button-border-radius: 0;\n  color: var(--nylas-base-600);\n  background: transparent;\n  border: none;\n  outline: 1px solid var(--nylas-base-300);\n  border-radius: 0 var(--nylas-border-radius-2x) var(--nylas-border-radius-2x) 0;\n  height: 52px;\n  width: 52px;\n  display: flex;\n  position: absolute;\n  right: 0;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  sp-icon-cross300 {\n    color: var(--nylas-base-600);\n  }\n\n  &.error {\n    border-width: 2px;\n    border-color: var(--nylas-error);\n  }\n}\n\ninput[type='text'],\ninput[type='email'] {\n  @include textfield;\n\n  &.guest-email {\n    color: var(--nylas-base-900);\n    padding-right: 52px; // Infield button width\n  }\n}\n\nlabel {\n  @include input-label;\n}\n\nbutton-component.remove-guest {\n  position: absolute;\n  height: 51px;\n  right: 0;\n\n  &.error {\n    button {\n      border-color: var(--nylas-error);\n    }\n  }\n\n  button {\n    height: inherit;\n    border-top-left-radius: initial;\n    border-bottom-left-radius: initial;\n    border: none !important;\n    border-left: 1px solid var(--nylas-base-300) !important;\n\n    &:hover,\n    &:focus {\n      outline: 1px solid var(--nylas-primary) !important;\n      color: var(--nylas-primary);\n    }\n  }\n}\n\nbutton-component.back {\n  button {\n    --dot-color: var(--nylas-base-800);\n  }\n}\n\n.guest-email-input {\n  position: relative;\n  display: flex;\n  width: 100%;\n}\n","import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { RegisterComponent } from '@/common/register-component';\nimport { ConfigSettings, NylasSchedulerConnector } from '../../..';\nimport type { NylasEvent, NylasSchedulerBookingData } from '../../..';\nimport { NylasScheduling } from '../nylas-scheduling/nylas-scheduling';\nimport { debug, sanitize } from '@/utils/utils';\nimport { Notification, NylasSchedulerBookingParticipant } from '@nylas/core';\nimport sanitizeHtml from 'sanitize-html';\nimport i18next from '@/utils/i18n';\n\nconst emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\n/**\n * The `nylas-booking-form` component is a UI component that allows users to book an event.\n *\n * The booking form component.\n * @part nbf - The booking form host.\n * @part nbf__input-textfield - The input textfield.\n * @part nbf__button-ghost - The ghost button.\n * @part nbf__button-outline - The outline button.\n * @part nbf__button-primary - The primary button.\n * @part nbf__input-wrapper - The input wrapper.\n * @part nbf__checkbox-component - The checkbox component.\n * @part nbf__radio-button-group - The radio button group.\n * @part nbf__textarea-component - The textarea component.\n * @part nbf__dropdown - The dropdown component.\n * @part nbf__dropdown-button - The dropdown button.\n * @part nbf__dropdown-content - The dropdown content.\n *\n */\n@Component({\n  tag: 'nylas-booking-form',\n  styleUrl: 'nylas-booking-form.scss',\n  shadow: true,\n})\nexport class NylasBookingForm {\n  /**\n   * The host element\n   */\n  @Element() readonly host!: HTMLElement;\n\n  /**\n   * The loading state.\n   */\n  @Prop() readonly isLoading?: boolean;\n\n  /**\n   * The booking info.\n   */\n  @Prop() readonly bookingInfo?: NylasSchedulerBookingData;\n\n  /**\n   * The booked event (Used to track if a booking is created in an eventOverride).\n   */\n  @Prop() readonly eventInfo?: NylasEvent;\n\n  /**\n   * The config settings for the scheduler.\n   */\n  @Prop() readonly configSettings?: ConfigSettings;\n\n  /**\n   * This event is fired when the name is changed.\n   */\n  @Event() nameChanged!: EventEmitter<string>;\n\n  /**\n   * This event is fired when the email is changed.\n   */\n  @Event() emailChanged!: EventEmitter<string>;\n\n  /**\n   * This event is fired when the cancel button is clicked.\n   */\n  @Event() backButtonClicked!: EventEmitter<boolean>;\n\n  /**\n   * This event is fired when the book button is clicked and the form validation is complete and successful.\n   * This event is fired before the booking request is sent.\n   */\n  @Event() detailsConfirmed!: EventEmitter<NylasSchedulerBookingData>;\n\n  /**\n   * This event is fired when an error occurs in the booking form validation.\n   */\n  @Event() bookingFormError!: EventEmitter<Partial<Notification>>;\n\n  /**\n   * This event is fired immediately after the book button is clicked.\n   * The booking form validation is not complete at this point.\n   */\n  @Event() bookingFormSubmitted!: EventEmitter<void>;\n\n  /**\n   * The name of the user.\n   */\n  @State() name: string = '';\n\n  /**\n   * The email address of the user.\n   */\n  @State() email: string = '';\n\n  /**\n   * The guests of the user.\n   */\n  @State() guestEmails: string[] = [];\n\n  /**\n   * Guest email input errors.\n   */\n  @State() guestEmailErrors: { [key: number]: string } = {};\n\n  /**\n   * State to check if name is valid.\n   */\n  @State() isNameValid: boolean = true;\n\n  /**\n   * State to check if email is valid.\n   */\n  @State() isEmailValid: boolean = true;\n\n  @State() additionalFields?: Record<string, string> = {};\n\n  /**\n   * Error message state.\n   */\n  @State() validationError: { name: string; email: string } = { name: '', email: '' };\n\n  @State() backButtonLoading: boolean = false;\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  componentWillLoad() {\n    debug('nylas-booking-form', 'componentWillLoad', this.bookingInfo);\n    if (this.bookingInfo && this.bookingInfo?.primaryParticipant) {\n      this.name = this.bookingInfo.primaryParticipant?.name;\n      this.email = this.bookingInfo.primaryParticipant?.email;\n    }\n  }\n\n  @Watch('bookingInfo')\n  bookingInfoChangedHandler(newValue: NylasSchedulerBookingData | undefined) {\n    if (newValue && newValue.primaryParticipant) {\n      this.name = newValue.primaryParticipant.name;\n      this.email = newValue.primaryParticipant.email;\n    }\n  }\n\n  /**\n   * Change the name.\n   * @param name The name to select.\n   */\n  changeName(name: string) {\n    // Reset the validation error\n    this.isNameValid = true;\n    this.validationError.name = '';\n\n    this.name = sanitize(name);\n    this.nameChanged.emit(name);\n  }\n\n  /**\n   * Change the email.\n   * @param email The email to select.\n   */\n  changeEmail(email: string) {\n    // Reset the validation error\n    this.isEmailValid = true;\n    this.validationError.email = '';\n\n    this.email = sanitizeHtml(email);\n    this.emailChanged.emit(email);\n  }\n\n  resetGuestEmailError(guestIndex: number) {\n    const errors = { ...this.guestEmailErrors };\n    delete errors[guestIndex];\n    this.guestEmailErrors = { ...errors };\n  }\n\n  /**\n   * Handle guest emails changed.\n   */\n  handleGuestChange = (guestIndex: number, email: string) => {\n    // Reset the validation error\n    this.resetGuestEmailError(guestIndex);\n    const guests = [...this.guestEmails];\n    guests[guestIndex] = sanitizeHtml(email);\n    this.guestEmails = [...guests];\n  };\n\n  /**\n   * Handle guest input blur.\n   */\n  handleGuestBlur = (guestIndex: number, email: string) => {\n    this.resetGuestEmailError(guestIndex);\n\n    if (email === '') {\n      this.guestEmailErrors[guestIndex] = i18next.t('fieldRequired', { field: i18next.t('email') });\n      return;\n    }\n    if (!emailRegex.test(email)) {\n      this.guestEmailErrors[guestIndex] = i18next.t('invalidInputFormat', { field: i18next.t('email') });\n      return;\n    }\n    this.handleGuestChange(guestIndex, email);\n  };\n\n  /**\n   * Handle add guest button clicked.\n   */\n  addGuestButtonClickedHandler = e => {\n    e.preventDefault();\n    this.guestEmails = [...this.guestEmails, ''];\n  };\n\n  /**\n   * Handle remove guest button clicked.\n   */\n  removeGuestButtonClickHandler = (e: Event, guestIndex: number) => {\n    e.preventDefault();\n    this.resetGuestEmailError(guestIndex);\n\n    const guests = [...this.guestEmails];\n    guests.splice(guestIndex, 1);\n    this.guestEmails = [...guests];\n  };\n\n  /**\n   * Handle back button clicked.\n   */\n  handleBackButtonClicked = e => {\n    e.preventDefault();\n    this.backButtonLoading = true;\n    this.backButtonClicked.emit();\n  };\n\n  /**\n   * Handle book button clicked.\n   */\n  bookButtonClickedHandler = async (e: Event) => {\n    e.preventDefault();\n    const formSubmittedEvent = this.bookingFormSubmitted.emit();\n    if (formSubmittedEvent.defaultPrevented) {\n      return;\n    }\n\n    debug('nylas-booking-form', 'bookButtonClickedHandler', this.bookingInfo);\n    const name = this.name || this.bookingInfo?.primaryParticipant?.name;\n    const email = this.email || this.bookingInfo?.primaryParticipant?.email;\n\n    if (!name || name === '') {\n      this.isNameValid = false;\n      this.validationError.name = i18next.t('fieldRequired', { field: i18next.t('name') }) || 'Name is required';\n      this.bookingFormError.emit({\n        title: 'Booking form error',\n        description: 'Name is required',\n      });\n      return;\n    }\n    if (!email || email === '') {\n      this.isEmailValid = false;\n      this.validationError.email = i18next.t('fieldRequired', { field: i18next.t('email') }) || 'Email is required';\n      this.bookingFormError.emit({\n        title: 'Booking form error',\n        description: 'Email is required',\n      });\n      return;\n    }\n    if (!emailRegex.test(email)) {\n      this.isEmailValid = false;\n      this.validationError.email = i18next.t('invalidInputFormat', { field: i18next.t('email') });\n      this.bookingFormError.emit({\n        title: 'Booking form error',\n        description: i18next.t('invalidInputFormat', { field: i18next.t('email') }) || 'Invalid email',\n      });\n      return;\n    }\n\n    let guests: NylasSchedulerBookingParticipant[] = [];\n    if (this.guestEmails.length > 0) {\n      let hasError = false;\n      this.guestEmails.forEach((email: string, i: number) => {\n        if (email === '') {\n          hasError = true;\n          this.guestEmailErrors = { ...this.guestEmailErrors, [i]: i18next.t('fieldRequired', { field: i18next.t('email') }) };\n        } else if (!emailRegex.test(email)) {\n          hasError = true;\n          this.guestEmailErrors = { ...this.guestEmailErrors, [i]: i18next.t('invalidInputFormat', { field: i18next.t('email') }) };\n        }\n      });\n      if (hasError) {\n        this.bookingFormError.emit({\n          title: 'Booking form error',\n          description: i18next.t('invalidInputFormat', { field: i18next.t('guestEmail') }) || 'Invalid guest email',\n        });\n        return;\n      }\n      guests = this.guestEmails.map((email: string) => ({ name: email.trim(), email: email.trim() }));\n    } else if (this.bookingInfo?.guests) {\n      guests = this.bookingInfo?.guests;\n    }\n\n    const bookingInfoAdditionalFields = this.bookingInfo?.additionalFields || [];\n    this.detailsConfirmed.emit({\n      primaryParticipant: {\n        name: name,\n        email: email,\n      },\n      guests: guests,\n      additionalFields: { ...bookingInfoAdditionalFields, ...this.additionalFields },\n    });\n  };\n\n  updateAdditionalFields = (name: string, value: string) => {\n    if (this.additionalFields) {\n      this.additionalFields[name] = value;\n    }\n  };\n\n  @Listen('nylasFormInputChanged')\n  nylasFormInputChangedHandler(event: CustomEvent<{ value: string; name: string; error: string; label: string; type?: string }>) {\n    switch (event.detail.name) {\n      case 'name':\n        this.changeName(event.detail.value);\n        break;\n      case 'email':\n        this.changeEmail(event.detail.value);\n        break;\n      default:\n        if (event.detail.error) {\n          this.bookingFormError.emit({\n            title: 'Booking form error',\n            description: event.detail.error,\n          });\n          return;\n        }\n        this.updateAdditionalFields(event.detail.name, event.detail.value);\n        break;\n    }\n  }\n\n  @Listen('nylasFormDropdownChanged')\n  selectOptionChangedHandler(event: CustomEvent<{ value: string; name: string; label: string; error?: string }>) {\n    if (event.detail.error) {\n      this.bookingFormError.emit({\n        title: 'Booking form error',\n        description: event.detail.error,\n      });\n      return;\n    }\n    this.updateAdditionalFields(event.detail.name, event.detail.value);\n  }\n\n  @Listen('nylasFormSwitchToggled')\n  switchToggledHandler(event: CustomEvent<{ checked: boolean; name: string; label: string }>) {\n    this.updateAdditionalFields(event.detail.name, event.detail.checked ? 'true' : 'false');\n  }\n\n  @Listen('nylasFormCheckboxToggled')\n  checkboxToggledHandler(event: CustomEvent<{ checked: boolean; name: string; label: string }>) {\n    this.updateAdditionalFields(event.detail.name, event.detail.checked ? 'true' : 'false');\n  }\n\n  @Listen('nylasFormRadioChanged')\n  radioChangedHandler(event: CustomEvent<{ value: string; name: string; label: string; type: string }>) {\n    this.updateAdditionalFields(event.detail.name, event.detail.value);\n  }\n\n  @Listen('nylasFormDropdownDefaultSelected')\n  dropdownDefaultSelectedHandler(event: CustomEvent<{ value: string; name: string; label: string; error?: string }>) {\n    this.updateAdditionalFields(event.detail.name, event.detail.value);\n  }\n\n  @RegisterComponent<NylasBookingForm, NylasSchedulerConnector, Exclude<NylasScheduling['stores'], undefined>>({\n    name: 'nylas-booking-form',\n    stateToProps: new Map([\n      ['scheduler.isLoading', 'isLoading'],\n      ['scheduler.bookingInfo', 'bookingInfo'],\n      ['scheduler.eventInfo', 'eventInfo'],\n      ['scheduler.configSettings', 'configSettings'],\n    ]),\n    eventToProps: {\n      backButtonClicked: async (_event: CustomEvent<boolean>, nylasSchedulerConnector: NylasSchedulerConnector) => {\n        nylasSchedulerConnector.scheduler.toggleAdditionalData(false);\n      },\n      nameChanged: async (event: CustomEvent<string>, nylasSchedulerConnector: NylasSchedulerConnector) => {\n        nylasSchedulerConnector.scheduler.setParticipantName(event.detail);\n      },\n      emailChanged: async (event: CustomEvent<string>, nylasSchedulerConnector: NylasSchedulerConnector) => {\n        nylasSchedulerConnector.scheduler.setParticipantEmail(event.detail);\n      },\n      detailsConfirmed: async (event: CustomEvent<NylasSchedulerBookingData>, _nylasSchedulerConnector: NylasSchedulerConnector) => {\n        debug('nylas-booking-form', 'detailsConfirmed', event.detail);\n      },\n      bookingFormSubmitted: async (event: CustomEvent<void>, _nylasSchedulerConnector: NylasSchedulerConnector) => {\n        debug('nylas-booking-form', 'bookingFormSubmitted', event.detail);\n      },\n      bookingFormError: async (event: CustomEvent<Partial<Notification>>, _nylasSchedulerConnector: NylasSchedulerConnector) => {\n        debug('nylas-booking-form', 'bookingFormError', event.detail);\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host>\n        <form onSubmit={e => this.bookButtonClickedHandler(e)} noValidate>\n          <div class=\"nylas-booking-form\" part=\"nbf\">\n            <div class=\"input-wrapper\" part=\"nbf__input-wrapper\">\n              <input-component\n                label={i18next.t('name')}\n                name=\"name\"\n                id=\"name\"\n                defaultValue={this.bookingInfo?.primaryParticipant?.name || this.name}\n                placeholder={i18next.t('namePlaceholder')}\n                type=\"text\"\n                required={true}\n                requiredError={i18next.t('fieldRequired', { field: i18next.t('name') })}\n                patternError={i18next.t('invalidInputFormat', { field: i18next.t('name') })}\n                part=\"nbf__input-textfield\"\n              />\n            </div>\n            <div class=\"input-wrapper\" part=\"nbf__input-wrapper\">\n              <input-component\n                label={i18next.t('email')}\n                name=\"email\"\n                id=\"email\"\n                pattern={emailRegex}\n                defaultValue={this.bookingInfo?.primaryParticipant?.email || this.email}\n                placeholder={i18next.t('emailPlaceholder')}\n                type=\"email\"\n                required={true}\n                requiredError={i18next.t('fieldRequired', { field: i18next.t('email') })}\n                patternError={i18next.t('invalidInputFormat', { field: i18next.t('email') })}\n                part=\"nbf__input-textfield\"\n              />\n            </div>\n            {this.configSettings?.scheduler?.hide_additional_guests !== true && (\n              <div class=\"input-wrapper\" part=\"nbf__input-wrapper\">\n                {this.guestEmails.map((email, index) => (\n                  <div class=\"input-wrapper button-wrapper\">\n                    <label\n                      class={{\n                        error: !!this.guestEmailErrors[index],\n                      }}\n                    >\n                      {i18next.t('guestEmail')}\n                    </label>\n                    <div class=\"guest-email-input\">\n                      <input\n                        type=\"email\"\n                        id={`guest-email-${index}`}\n                        maxLength={100}\n                        class={{\n                          'guest-email': true,\n                          'error': !!this.guestEmailErrors[index],\n                        }}\n                        placeholder={i18next.t('guestEmailPlaceholder')}\n                        value={email}\n                        data-index={index}\n                        part=\"nbf__input-textfield\"\n                        onBlur={(e: Event) => this.handleGuestBlur(index, (e.target as HTMLInputElement)?.value)}\n                        onInput={(e: Event) => this.handleGuestChange(index, (e.target as HTMLInputElement)?.value)}\n                      ></input>\n                      <button-component\n                        variant=\"basic\"\n                        onClick={(e: Event) => this.removeGuestButtonClickHandler(e, index)}\n                        class={{\n                          'remove-guest': true,\n                          'error': !!this.guestEmailErrors[index],\n                        }}\n                      >\n                        <close-icon />\n                      </button-component>\n                    </div>\n                    <p class=\"help-text\">{this.guestEmailErrors[index]}</p>\n                  </div>\n                ))}\n                <button-component class=\"add-guest\" variant=\"invisible\" part=\"nbf__button-ghost\" onClick={e => this.addGuestButtonClickedHandler(e)}>\n                  <div class=\"button-content\">\n                    <add-circle-icon slot=\"icon\"></add-circle-icon>\n                    {this.guestEmails.length > 0 ? `${i18next.t('addAnotherGuest')}` : `${i18next.t('addGuest')}`}\n                  </div>\n                </button-component>\n              </div>\n            )}\n            {Object.entries(\n              (this.configSettings?.scheduler?.additional_fields || {}) as Record<\n                string,\n                {\n                  required: boolean;\n                  type: 'email' | 'text' | 'phone_number' | 'dropdown' | 'checkbox' | 'radio_button' | 'multi_line_text';\n                  order: number;\n                  options?: string[];\n                  label: string;\n                }\n              >,\n            )\n              ?.sort((a, b) => a[1].order - b[1].order)\n              .map(x => {\n                const field = x[1];\n                const label = field.label;\n                const key = x[0];\n                const defaultValue = this.bookingInfo?.additionalFields?.[key]?.value || '';\n\n                switch (field.type) {\n                  case 'dropdown':\n                    return (\n                      <div class=\"input-wrapper\" part=\"nbf__input-wrapper\">\n                        <select-dropdown\n                          label={label}\n                          name={key}\n                          id={key}\n                          withSearch={false}\n                          defaultSelectedOption={defaultValue ? { value: defaultValue, label: defaultValue } : undefined}\n                          options={field.options?.map(option => ({ value: option, label: option }))}\n                          required={field.required}\n                          exportparts=\"sd_dropdown: nbf__dropdown, sd_dropdown-button: nbf__dropdown-button, sd_dropdown-content: nbf__dropdown-content\"\n                        />\n                      </div>\n                    );\n                  case 'checkbox':\n                    return (\n                      <div class=\"input-wrapper\" part=\"nbf__input-wrapper\">\n                        <checkbox-component label={label} name={key} id={key} checked={defaultValue === 'true'} required={field.required} part=\"nbf__checkbox-component\" />\n                      </div>\n                    );\n                  case 'radio_button':\n                    return (\n                      <div class=\"input-wrapper\" part=\"nbf__input-wrapper\">\n                        <radio-button-group\n                          label={label}\n                          name={key}\n                          id={key}\n                          defaultSelectedValue={defaultValue || field.options?.[0] || ''}\n                          options={field.options?.map(option => ({ value: option, label: option }))}\n                          required={field.required}\n                          part=\"nbf__radio-button-group\"\n                        />\n                      </div>\n                    );\n                  case 'multi_line_text':\n                    return (\n                      <div class=\"input-wrapper\" part=\"nbf__input-wrapper\">\n                        <textarea-component label={label} defaultValue={defaultValue} name={key} id={key} required={field.required} part=\"nbf__textarea-component\" />\n                      </div>\n                    );\n                  default:\n                    return (\n                      <div class=\"input-wrapper\" part=\"nbf__input-wrapper\">\n                        <input-component\n                          label={label}\n                          name={key}\n                          id={key}\n                          type={field.type}\n                          defaultValue={defaultValue || ''}\n                          requiredError={i18next.t('fieldRequired', { field: label })}\n                          required={field.required}\n                          part=\"nbf__input-textfield\"\n                        />\n                      </div>\n                    );\n                }\n              })}\n            {/* <slot name=\"custom-booking-form\"></slot> */}\n          </div>\n          <div class=\"cta\">\n            <button-component variant={'basic'} class=\"back\" part=\"nbf__button-outline\" isLoading={this.backButtonLoading && this.isLoading} onClick={this.handleBackButtonClicked}>\n              <slot name=\"booking-form-back-label\">{`${i18next.t('backButton')}`}</slot>\n            </button-component>\n            <button-component variant={'primary'} isLoading={!this.backButtonLoading && this.isLoading} disabled={this.isLoading} part=\"nbf__button-primary\" type=\"submit\">\n              <slot name=\"booking-form-book-label\">{`${i18next.t('bookNowButton')}`}</slot>\n            </button-component>\n          </div>\n        </form>\n      </Host>\n    );\n  }\n}\n"],"version":3}