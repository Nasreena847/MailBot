'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-c14ea8f5.js');
const registerComponent = require('./register-component-2f532e44.js');
const utils = require('./utils-0e1c4d88.js');
const constants = require('./constants-c58992fc.js');
require('./_commonjsHelpers-9463df90.js');

const nylasSelectedEventCardCss = ":host{display:block;position:relative;height:inherit;display:flex;flex-direction:column;justify-content:center;align-items:center;font-family:var(--nylas-font-family)}.event-card{display:flex;align-items:center;flex-direction:column;width:calc(100% - 3rem);background-color:var(--nylas-base-0);color:var(--nylas-base-800);border-radius:var(--nylas-border-radius-2x);padding:3rem 1.5rem 1.5rem 1.5rem;position:relative;box-shadow:0px 1px 3px 0px rgba(0, 0, 0, 0.1), 0px 1px 2px 0px rgba(0, 0, 0, 0.06)}@media screen and (max-width: 768px){.event-card{margin-bottom:2rem}}.nylas-selected-event-card__date{font-size:min(max(16px, 3vw), 18px);font-weight:600}.nylas-selected-event-card__time{font-size:16px;font-weight:500}.calendar-icon{width:3rem;height:3rem;border-radius:50%;position:absolute;top:-1.25rem;left:50%;transform:translateX(-50%);background-color:var(--nylas-base-0);border:1px solid var(--nylas-base-200)}calendar-icon{display:flex;align-items:center;justify-content:center;height:100%}.event-timezone{display:flex;color:var(--nylas-base-600);margin-bottom:8px;gap:4px;align-items:center}@media screen and (max-width: 768px){.event-timezone{margin-bottom:16px}}";

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
const NylasSelectedEventCard = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.selectedDate = undefined;
        this.selectedTimeslot = undefined;
        this.selectedTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
        this.selectedLanguage = undefined;
        this.startTime = '';
        this.endTime = '';
    }
    connectedCallback() { }
    disconnectedCallback() { }
    async componentWillLoad() {
        utils.debug(`[nylas-selected-event-card] Component will load`);
    }
    async componentDidLoad() {
        utils.debug(`[nylas-selected-event-card] Component did load`);
        if (!this.selectedDate) {
            console.warn('[nylas-selected-event-card] "selectedDate" prop is not provided.');
        }
        if (!this.selectedTimeslot) {
            console.warn('[nylas-selected-event-card] "selectedTimeslot" prop is not provided.');
        }
        const timeFormat = new Intl.DateTimeFormat('en-US', {
            hour: '2-digit',
            minute: '2-digit',
            timeZone: this.selectedTimezone,
        });
        this.startTime = timeFormat.format(new Date(this.selectedTimeslot?.start_time));
        this.endTime = timeFormat.format(new Date(this.selectedTimeslot?.end_time));
    }
    render() {
        return (index.h(index.Host, { key: '2b4257d6793fd263e7978504b88e270d77e2e78f', part: "nsec" }, index.h("div", { key: '8eb84c0c375afd9824d88337003d09b7fe3db171', class: "event-card", part: "nsec__card" }, index.h("div", { key: 'bc7d364f1ec772f06f5eab4549b0433cb947f68d', class: "calendar-icon", part: "nsec__icon" }, index.h("calendar-icon", { key: 'a3f38777fea8b17714ad0dc34cd236a93e4360fd' })), index.h("div", { key: '1d23698c5a8d627bc10c7969e269a381584b6477', class: "nylas-selected-event-card__date", part: "nsec__date" }, this.selectedDate
            ? utils.capitalizeFirstLetter(this.selectedDate?.toLocaleDateString(constants.LANGUAGE_CODE_MAP[this.selectedLanguage || navigator.language], { dateStyle: 'full', timeZone: this.selectedTimezone }))
            : '-'), index.h("div", { key: '4e02d04cc6918076935614be321619a9df16430d', class: "nylas-selected-event-card__time", part: "nsec__time" }, this.startTime, " - ", this.endTime)), index.h("div", { key: 'ad39ae7e3df5e6652b0dad88b98695cfee00e3db', class: "event-timezone", part: "nsec__timezone" }, index.h("globe-icon", { key: '23b1e1fd15842a65278a969e1ce3aea0313ea46e' }), constants.TIMEZONE_MAP[this.selectedTimezone])));
    }
};
__decorate([
    registerComponent.RegisterComponent({
        name: 'nylas-selected-event-card',
        stateToProps: new Map([
            ['scheduler.selectedDate', 'selectedDate'],
            ['scheduler.selectedTimeslot', 'selectedTimeslot'],
            ['scheduler.selectedTimezone', 'selectedTimezone'],
            ['scheduler.selectedLanguage', 'selectedLanguage'],
        ]),
        eventToProps: {},
        fireRegisterEvent: true,
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NylasSelectedEventCard.prototype, "render", null);
NylasSelectedEventCard.style = nylasSelectedEventCardCss;

exports.nylas_selected_event_card = NylasSelectedEventCard;

//# sourceMappingURL=nylas-selected-event-card.cjs.entry.js.map